<languages/>
<translate>

<!--T:17-->
{{Docnav
|
|[[Part_CoordinateSystem|Part CoordinateSystem]]
|[[Std_Base|Std Base]]
|IconL=
|IconR=Part_CoordinateSystem.svg
|IconC=Freecad.svg
}}

<!--T:1-->
{{GuiCommand
|Name=Std Part
|MenuLocation=None
|Workbenches=All
|Version=0.17
|SeeAlso=[[Std_Group|Std Group]], [[PartDesign_Body|PartDesign Body]]
}}

==Description== <!--T:2-->

<!--T:3-->
{{Button|[[File:Std_Part.svg|16px]] [[Std_Part|Std Part]]}} (internally called [[App_Part|App Part]]) is a general purpose container that keeps together a group of objects so that they can be moved together as a unit in the [[3D_View|3D View]].

<!--T:4-->
The Std Part element was developed to be the basic building block to create mechanical [[assembly|assemblies]]. In particular, it is meant to arrange objects that have a [[Part_TopoShape|Part TopoShape]], like [[Part_Primitives|Part Primitives]], [[PartDesign_Body|PartDesign Bodies]], and other [[Part_Feature|Part Features]]. The Std Part provides an [[#Origin|Origin object]] with local X-, Y-, and Z-axis, and standard planes, that can be used as reference to position the contained objects. In addition, Std Parts may be nested inside other Std Parts to create a big assembly from smaller sub-assemblies.

<!--T:54-->
Although it is primarily intended for solid bodies, the Std Part can be used to manage any object that has a [[Placement|Placement]] property, so it can also contain [[Mesh_Feature|Mesh Features]], [[Sketch|sketches]], and other objects derived from the [[App_GeoFeature|App GeoFeature]] class.

<!--T:5-->
Do not confuse the {{Button|[[File:PartDesign_Body.svg|16px]] [[PartDesign_Body|PartDesign Body]]}} with the {{Button|[[File:Std_Part.svg|16px]] [[Std_Part|Std Part]]}}. The first one is a specific object used in the [[File:Workbench_PartDesign.svg|24px]] [[PartDesign_Workbench|PartDesign Workbench]], intended to model a [[PartDesign_Body#Single_contiguous_solid|single contiguous solid]] by means of [[PartDesign_Feature|PartDesign Features]]. On the other hand, the [[Std_Part|Std Part]] is not used for modelling, just to arrange different objects in space, with the intention to create [[assembly|assemblies]].

<!--T:87-->
The {{Button|[[File:Std_Part.svg|16px]] [[Std_Part|Std Part]]}} tool is not defined by a particular workbench, but by the base system, thus it is found in the {{MenuCommand|Structure toolbar}} that is available in all [[Workbenches|workbenches]]. To group objects arbitrarily without considering their position, use {{Button|[[File:Std_Group.svg|16px]] [[Std_Group|Std Group]]}}; this object does not affect the placements of the elements that it contains, it is essentially just a folder that is used to keep the [[Tree_View|Tree View]] organized.

</translate>
[[File:Std Part-tree.png]][[File:Std Part example.png]]
<translate>

<!--T:21-->
{{Caption|Left: elements inside a Std Part in the [[Tree_View|Tree View]]. Right: objects positioned in space, referred to the Origin of the Std Part.}}

==Usage== <!--T:11-->

<!--T:12-->
# Press the {{Button|[[File:Std_Part.svg|16px]] [[Std_Part|New Part]]}} button.
# An empty Part is created and automatically becomes ''[[Std_Part#Active_status|active]]''.
# To add objects to the Part, select them in [[Tree_View|Tree View]], and drag and drop them onto the Part.
# To remove objects from the Part, drag them out of the Part, and onto the document label at the top of the [[Tree_View|Tree View]].
# Objects can also be added and removed by editing the {{PropertyData|Group}} property of the Part.

== Notes == <!--T:55-->

<!--T:56-->
* An object can only belong to a single Part.
* 3D operations like [[Part_Boolean|Part Boolean]] cannot be applied to Parts. For example, you cannot select two Parts, and perform a [[Part_Fuse|Part Fuse]] or [[Part_Cut|Part Cut]].

==Properties== <!--T:13-->

<!--T:57-->
The [[Std_Part|Std Part]], internally called [[App_Part|App Part]] ({{incode|App::Part}} class), is derived from the [[App_GeoFeature|App GeoFeature]] ({{incode|App::GeoFeature}} class) and inherits almost all its properties. It also has several additional properties. Notably properties that help it manage information in the context of an assembly, for example, {{PropertyData|Type}}, {{PropertyData|Id}}, {{PropertyData|License}}, {{PropertyData|LicenseURL}} and {{PropertyData|Group}}.

<!--T:59-->
These are the properties available in the [[Property_View|Property View]]. Hidden properties can be shown by using the {{MenuCommand|Show hidden}} command in the context menu of the Property View.

<!--T:93-->
See [[Part_Feature#Properties|Part Feature]] for an explanation of some of the properties listed below.

=== Data === <!--T:60-->

<!--T:61-->
{{TitleProperty|Base}}

<!--T:14-->
* {{PropertyData|Type|String}}: a description for this object. By default, it is an empty string {{value|""}}.
* {{PropertyData|Material|Link}}: the material for this object.
* {{PropertyData|Meta|Map|Hidden}}: map with additional meta information. By default, it is empty <code>{}</code>.
* {{PropertyData|Id|String}}: an identification or part number for this object. By default, it is an empty string {{value|""}}.
* {{PropertyData|Uid|UUID|Hidden}}: the [https://en.wikipedia.org/wiki/Universally_unique_identifier universally unique identifier] (UUID) (128-bit number) of the object. This is assigned at creation time.
* {{PropertyData|License|String}}: a field to specify the license for this object. By default, it is an empty string {{value|""}}.
* {{PropertyData|License URL|String}}: a field to specify the web address to the license or contract for this object. By default, it is an empty string {{value|""}}.
* {{PropertyData|Color|Color}}: a tuple of four floating point RGBA values to define the color of the object.
* {{PropertyData|Placement|Placement}}
* {{PropertyData|_ Element Map Version|String|Hidden}}
* {{PropertyData|Label|String}}
* {{PropertyData|Label2|String|Hidden}}
* {{PropertyData|Expression Engine|ExpressionEngine|Hidden}}
* {{PropertyData|Visibility|Bool|Hidden}}
* {{PropertyData|Origin|Link|Hidden}}: the [[App_OriginGroupExtension|App Origin]] object that is the positional reference for all elements listed in {{PropertyData|Group}}.
* {{PropertyData|Group|LinkList}}: a list of referenced objects. By default, it is empty {{value|[]}}.
* {{PropertyData|_ Group Touched|Bool|Hidden}}: whether the group is touched or not.

<!--T:94-->
{{TitleProperty|Part}}

<!--T:95-->
* {{PropertyData|_ Part_ Shape Cache|ShapeCache|Hidden}}: Shape cache. Not available if {{PropertyData|Group}} is empty.

=== View === <!--T:64-->

<!--T:96-->
{{TitleProperty|Base}}

<!--T:97-->
* {{PropertyView|Transform Origin|Placement|Hidden}}

<!--T:89-->
{{TitleProperty|Display Options}}

<!--T:90-->
* {{PropertyView|Display Mode|Enumeration}}: {{value|Group}}.
* {{PropertyView|Show In Tree|Bool}}
* {{PropertyView|Visibility|Bool}}

<!--T:91-->
{{TitleProperty|Selection}}

<!--T:92-->
* {{PropertyView|On Top When Selected|Enumeration}}
* {{PropertyView|Selection Style|Enumeration}}

== Detailed explanation == <!--T:70-->

===Active status=== <!--T:8-->

<!--T:71-->
An open document can contain multiple Parts. But only one Part can be active. The active Part is displayed in the [[Tree_View|Tree View]] with the background color specified by the {{MenuCommand|Active container}} value in the [[Preferences_Editor#Colors|Preferences Editor]] (by default, light blue). It will also be shown with bold text.

<!--T:80-->
To activate or de-activate a Part:
* Double click on it on the [[Tree_View|Tree View]], or
* Open the context menu (right click) and select {{MenuCommand|Active Object}}.

</translate>
[[File:Std_Part_active.png]]
<translate>

<!--T:81-->
{{Caption|Document with two Std Parts, of which the second one is active.}}

===Origin=== <!--T:9-->

<!--T:74-->
The Origin consists of the three standard axes (X, Y, Z) and three standard planes (XY, XZ and YZ). [[Sketch|Sketches]] and other objects can be attached to these elements when creating them.

</translate>
[[File:Part_Origin_tree.png]] [[File:Part_Origin_view.png]]
<translate>

<!--T:82-->
{{Caption|Left: Part Origin in the [[Tree_View|Tree View]]. Right: representation of the Origin elements in the [[3D_View|3D View]].}}

<!--T:83-->
{{Emphasis|Note:}} the Origin is an [[App_OriginGroupExtension|App Origin]] object ({{incode|App::Origin}} class), while the axes and planes are objects of type {{incode|App::Line}} and {{incode|App::Plane}} respectively. Each of these elements can be hidden and unhidden individually with the {{KEY|Space}} bar; this is useful to choose the correct reference when creating other objects.

<!--T:84-->
{{Emphasis|Note 2:}} all elements inside the Part are referenced to the Part's Origin which means that the Part can be moved and rotated in reference to the global coordinate system without affecting the placement of the elements inside.

===Visibility management=== <!--T:10-->

<!--T:75-->
The Part's visibility supersedes the visibility of any object it contains. If the Part is hidden, the objects it contains will be hidden as well, even if their individual {{PropertyView|Visibility}} property is set to {{TRUE}}. If the Part is visible, then each object's {{PropertyView|Visibility}} determines whether the object is shown or not.

<!--T:85-->
[[File:Part_Visibility_off.png]] [[File:Part_Visibility_on.png]]
{{Caption|The visibility of the Std Part determines whether the objects grouped under it are shown in the [[3D_View|3D View]] or not. Left: the Part is hidden, so none of the objects will be shown in the [[3D_View|3D View]]. Right: the Part is visible, so each object controls its own visibility.}}

== Scripting == <!--T:26-->

<!--T:76-->
{{Emphasis|See also:}} [[FreeCAD_Scripting_Basics|FreeCAD Scripting Basics]] and [[Scripted_objects|scripted objects]].

<!--T:77-->
See [[Part_Feature|Part Feature]] for the general information on adding objects to the document.

<!--T:27-->
A Std Part ([[App_Part|App Part]]) is created with the {{incode|addObject()}} method of the document. Once a Part exists, other objects can be added to it with the {{incode|addObject()}} or {{incode|addObjects()}} methods.

</translate>
{{Code|code=
import FreeCAD as App

doc = App.newDocument()
part = App.ActiveDocument.addObject("App::Part", "Part")

obj1 = App.ActiveDocument.addObject("PartDesign::Body", "Body")
obj2 = App.ActiveDocument.addObject("Part::Box", "Box")

part.addObjects([obj1, obj2])
App.ActiveDocument.recompute()
}}
<translate>

<!--T:88-->
You cannot create a scripted {{incode|App::Part}}. However, you can add {{incode|App::Part}} behavior to a scripted {{incode|Part::FeaturePython}} object by using the following code:

</translate>
{{Code|code=
class MyGroup(object):
    def __init__(self, obj=None):
        self.Object = obj
        if obj:
            self.attach(obj)

    def dumps(self):
        return

    def loads(self, _state):
        return

    def attach(self, obj):
        obj.addExtension("App::OriginGroupExtensionPython")
        obj.Origin = FreeCAD.ActiveDocument.addObject("App::Origin", "Origin")

    def onDocumentRestored(self, obj):
        self.Object = obj

class ViewProviderMyGroup(object):
    def __init__(self, vobj=None):
        if vobj:
            vobj.Proxy = self
            self.attach(vobj)
        else:
            self.ViewObject = None

    def attach(self, vobj):
        vobj.addExtension("Gui::ViewProviderOriginGroupExtensionPython")
        self.ViewObject = vobj

    def dumps(self):
        return None

    def loads(self, _state):
        return None

App.ActiveDocument.addObject("Part::FeaturePython",
                             "Group",
                             MyGroup(),
                             ViewProviderMyGroup(),
                             True)
}}
<translate>


<!--T:18-->
{{Docnav
|
|[[Part_CoordinateSystem|Part CoordinateSystem]]
|[[Std_Base|Std Base]]
|IconL=
|IconR=Part_CoordinateSystem.svg
|IconC=Freecad.svg
}}

</translate>
{{Std_Base_navi{{#translation:}}}}
{{Userdocnavi{{#translation:}}}}