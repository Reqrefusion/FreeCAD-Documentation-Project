<languages/>

{{Macro/pl
|Name=Macro merge duplicate materials
|Icon=Macro_merge_duplicate_materials.png
|Description=Łączy materiały o tej samej podstawowej nazwie (z różnymi końcówkami numerycznymi, np. 001, 002, ...) w jeden. Zachowany zostanie tylko pierwszy materiał, a wszystkie obiekty powiązane z duplikatami zostaną przypisane do tego pierwszego. Przed użyciem tego makra upewnij się więc, że pierwszy materiał (ten bez końcówki numerycznej lub o najniższym numerze) jest właściwy.
|Author=yorik
|Version=2.0
|Date=2019-07-12
|FCVersion=All
|Download=[https://wiki.freecad.org/images/e/ed/Macro_merge_duplicate_materials.png Ikona paska narzędzi]
}}

<span id="Description"></span>
==Opis==

Łączy materiały o tej samej podstawowej nazwie (z różnymi końcówkami numerycznymi, np. 001, 002, ...) w jeden. Zachowany zostanie tylko pierwszy materiał, a wszystkie obiekty powiązane z duplikatami zostaną przypisane do tego pierwszego. Przed użyciem tego makra upewnij się więc, że pierwszy materiał (ten bez końcówki numerycznej lub o najniższym numerze) jest właściwy.

<span id="Script"></span>
==Skrypt==

Ikona paska narzędzi
[[Image:Macro_merge_duplicate_materials.png]]

'''Merge duplicate materials.FCMacro'''

{{MacroCode|code=
import FreeCAD,FreeCADGui
mats = [o for o in FreeCAD.ActiveDocument.Objects if o.isDerivedFrom("App::MaterialObject")]
todelete = []
for mat in mats:
    if mat.Label[-1].isdigit() and mat.Label[-2].isdigit() and mat.Label[-3].isdigit():
        orig = None
        for om in mats:
            if om.Label == mat.Label[:-3].strip():
                orig = om
                break
        if orig:
            for par in mat.InList:
                for prop in par.PropertiesList:
                    if getattr(par,prop) == mat:
                        print( "Changed property '"+prop+"' of object "+par.Label+" from "+mat.Label+" to "+orig.Label)
                        setattr(par,prop,orig)
            todelete.append(mat)
for tod in todelete:
    if not tod.InList:
        print( "Deleting material "+tod.Label)
        FreeCAD.ActiveDocument.removeObject(tod.Name)
    elif (len(tod.InList) == 1) and (tod.InList[0].isDerivedFrom("App::DocumentObjectGroup")):
        print( "Deleting material "+tod.Label)
        FreeCAD.ActiveDocument.removeObject(tod.Name)
    else:
        print( "Unable to delete material "+tod.Label+": InList not empty")

}}
{{clear}}