<languages/>

{{Docnav/pl
|[[Pivy/pl|Pivy]]
|[[Interface_creation/pl|Tworzenie interfejsu]]
}}

{{TOCright}}

<span id="Introduction"></span>
==Wprowadzenie==

Biblioteka [[PySide/pl|PySide]] zapewnia dostęp do wieloplatformowego zestawu narzędzi graficznego interfejsu użytkownika (GUI) Qt z poziomu [[Python/pl|Pythona]]. Qt jest zbiorem bibliotek w C++, ale dzięki PySide te same komponenty można używać z [[Python/pl|Pythona]]. Każdy interfejs graficzny, który można utworzyć w C++, można również tworzyć i modyfikować w Pythonie. Zaletą używania Pythona jest to, że interfejsy Qt można rozwijać i testować na żywo, ponieważ nie musimy kompilować plików źródłowych.

Podczas instalacji programu FreeCAD powinny być zainstalowane zarówno Qt, jak i PySide jako część pakietu. Jeśli samodzielnie [[Compiling/pl|kompilujesz]] program, musisz upewnić się, że obie biblioteki są zainstalowane, aby FreeCAD działał poprawnie. Oczywiście PySide będzie działać tylko wtedy, gdy obecne jest Qt.

W przeszłości FreeCAD używał PyQt, innej biblioteki powiązań Qt dla Pythona, ale w 2013 roku ([https://github.com/FreeCAD/FreeCAD/commit/1dc122dc9a commit 1dc122dc9a]) projekt przeszedł na PySide, ponieważ posiada ono bardziej liberalną [[License/pl|licencję]].

Aby uzyskać więcej informacji, zobacz strony:
* [https://en.wikipedia.org/wiki/PySide Wikipedia:PySide]
* [https://wiki.qt.io/Differences_Between_PySide_and_PyQt Różnice między PySide i PyQt]

[[File:PySideScreenSnapshot1.jpg]] [[File:PySideScreenSnapshot2.jpg]]
{{Caption|Przykłady stworzone z PySide. Po lewej: proste okno dialogowe. Po prawej: bardziej złożone okno dialogowe z wykresami.}}

<span id="PySide_in_FreeCAD_with_Qt5"></span>
==PySide we FreeCAD z Qt5==

FreeCAD został opracowany z myślą o używaniu Pythona 2 i Qt4. W miarę jak te dwie biblioteki stały się przestarzałe, FreeCAD przeszedł na Pythona 3 i Qt5. W większości przypadków przejście to odbyło się bez konieczności łamania kompatybilności wstecznej.

Zazwyczaj moduł {{incode|PySide}} zapewnia wsparcie dla Qt4, podczas gdy {{incode|PySide2}} zapewnia wsparcie dla Qt5. Jednak w FreeCAD nie ma potrzeby bezpośredniego używania {{incode|PySide2}}, ponieważ dołączony jest specjalny moduł {{incode|PySide}}, który obsługuje Qt5.

Ten moduł {{incode|PySide}} znajduje się w katalogu {{incode|Ext/}} instalacji FreeCAD skompilowanej dla Qt5.
{{Code|code=
/usr/share/freecad/Ext/PySide
}}

Moduł ten po prostu importuje niezbędne klasy z {{incode|PySide2}} i umieszcza je w przestrzeni nazw {{incode|PySide}}. Oznacza to, że w większości przypadków ten sam kod może być używany zarówno z Qt4, jak i Qt5, pod warunkiem korzystania z pojedynczego modułu {{incode|PySide}}.
{{Code|code=
PySide2.QtCore -> PySide.QtCore
PySide2.QtGui -> PySide.QtGui
PySide2.QtSvg -> PySide.QtSvg
PySide2.QtUiTools -> PySide.QtUiTools
}}

Jedynym nietypowym aspektem jest to, że klasy {{incode|PySide2.QtWidgets}} są umieszczone w przestrzeni nazw {{incode|PySide.QtGui}}.
{{Code|code=
PySide2.QtWidgets.QCheckBox -> PySide.QtGui.QCheckBox
}}
{{Top}}
<span id="Examples_of_PySide_use"></span>
==Przykłady użycia PySide==

* [[PySide_Beginner_Examples/pl|Podstawowe przykłady PySide]], hello world, ogłoszenia, wprowadzanie tekstu, wprowadzanie liczby.
* [[PySide_Intermediate_Examples/pl|Średniozaawansowane przykłady PySide]], rozmiar okna, ukrywanie widżetów, okna wyskakujące, pozycja kursora, akcje myszki.
* [[PySide_Advanced_Examples/pl|Zaawansowane przykłady PySide]], wiele widżetów.

Przykłady PySide są podzielone na 3 części, różniące się stopniem zaawansowania w zakresie PySide, Pythona i wewnętrznych mechanizmów FreeCAD. Pierwsza strona zawiera przegląd PySide; druga i trzecia strona to w większości przykłady kodu na różnych poziomach.

Oczekuje się, że te przykłady będą pomocne na początek, a następnie użytkownik może korzystać z innych zasobów dostępnych online lub z oficjalnej dokumentacji.
{{Top}}
<span id="Documentation"></span>
==Dokumentacja==

Istnieją pewne różnice w obsłudze widżetów w Qt4 (PySide) i Qt5 (PySide2). Programista powinien być świadomy tych niezgodności i w razie problemów sprawdzić oficjalną dokumentację, jeśli coś nie działa zgodnie z oczekiwaniami na danej platformie. Niemniej jednak, Qt4 jest uważane za przestarzałe, więc większość rozwoju powinna być skierowana na Qt5 i Pythona 3.

Dokumentacja PySide odnosi się do klas w stylu Pythona; jednak ponieważ Qt jest pierwotnie biblioteką C++, te same informacje powinny być dostępne w odpowiedniej dokumentacji C++.
* [https://doc.qt.io/qtforpython/modules.html Moduły Qt] dostępne z PySide2 (Qt5).
* [https://doc.qt.io/qt-5/modules-cpp.html Wszystkie klasy Qt według modułu] w Qt5 dla C++.
* [https://deptinfo-ensip.univ-poitiers.fr/ENS/pyside-docs/index.html Moduły Qt] dostępne z PySide (Qt4).
{{Top}}

{{Docnav/pl
|[[Pivy/pl|Pivy]]
|[[Interface_creation/pl|Tworzenie interfejsu]]
}}

{{Powerdocnavi{{#translation:}}}}
[[Category:Developer Documentation{{#translation:}}]]
[[Category:Python Code{{#translation:}}]]