<languages/>

{{TOCright}}

<span id="Introduction"></span>
==Wprowadzenie==

Celem tej strony jest przedstawienie zaawansowanych przykładów użycia menedżera GUI [[PySide/pl|PySide]] (istnieją strony towarzyszące: [[PySide_Beginner_Examples/pl|Podstawowe przykłady PySide]] oraz [[PySide_Intermediate_Examples/pl|Średniozaawansowane przykłady PySide]]).

Korzystając z modułu PySide w FreeCAD, masz pełną kontrolę nad jego interfejsem. Możesz na przykład:
* Dodawać własne panele, widżety i paski narzędzi
* Dodawać lub ukrywać elementy w istniejących panelach
* Zmieniać, przekierowywać lub dodawać połączenia między wszystkimi tymi elementami

<span id="Create_Reference_to_the_Main_Window"></span>
==Utwórz odniesienie do okna głównego==

Jeżeli chcesz pracować nad interfejsem FreeCAD, pierwszą rzeczą, którą należy zrobić, jest utworzenie odniesienia do głównego okna FreeCAD:

{{Code|code=
import sys
from PySide import QtGui ,QtCore 
app = QtGui.qApp
mw = FreeCADGui.getMainWindow()
}}

<span id="Browse_the_Children_of_the_Main_Window"></span>
==Przeglądaj obiekty podrzędne okna głównego==

Następnie możesz np. przeglądać wszystkie widżety interfejsu:

{{Code|code=
for child in mw.children():
   print('widget name = ', child.objectName(), ', widget type = ', child)
}}

Widżety w interfejsie Qt są zazwyczaj zagnieżdżone w "kontenerowych" widżetach, więc elementy potomne naszego głównego okna mogą same zawierać inne elementy potomne. W zależności od typu widżetu można wykonywać wiele różnych operacji. Sprawdź dokumentację API, aby zobaczyć, co jest możliwe.

<span id="Add_New_Widget_Manually"></span>
==Dodaj nowy widżet ręcznie==

Dodanie nowego widżetu, na przykład dockWidget (który można umieścić w jednym z bocznych paneli FreeCAD), jest proste:

{{Code|code=
myWidget = QtGui.QDockWidget()
mw.addDockWidget(QtCore.Qt.RightDockWidgetArea,myWidget)
}}

Następnie mógłbyś dodać coś bezpośrednio do nowego widżetu:

{{Code|code=
myWidget.setObjectName("my Nice New Widget")
myWidget.resize(QtCore.QSize(300,100)) # sets size of the widget
label = QtGui.QLabel("Hello World", myWidget) # creates a label
label.setGeometry(QtCore.QRect(2,50,200,24))  # sets its size
label.setObjectName("myLabel") # sets its name, so it can be found by name
}}

<span id="Add_New_Widget_by_Creating_UI_Object"></span>
==Dodaj nowy widżet tworząc obiekt UI==

Jednak preferowaną metodą jest utworzenie obiektu UI, który wykona całe ustawienie widżetu za jednym razem. Wielką zaletą jest to, że taki obiekt UI można [[Dialog_creation/pl|stworzony graficznie]] za pomocą programu Qt Designer. Typowy obiekt wygenerowany przez Qt Designer wygląda tak:

{{Code|code=
class myWidget_Ui(object):
  def setupUi(self, myWidget):
    myWidget.setObjectName("my Nice New Widget")
    myWidget.resize(QtCore.QSize(300,100).expandedTo(myWidget.minimumSizeHint())) # sets size of the widget

    self.label = QtGui.QLabel(myWidget) # creates a label
    self.label.setGeometry(QtCore.QRect(50,50,200,24)) # sets its size
    self.label.setObjectName("label") # sets its name, so it can be found by name

  def retranslateUi(self, draftToolbar): # built-in QT function that manages translations of widgets
    myWidget.setWindowTitle(QtGui.QApplication.translate("myWidget", "My Widget", None, QtGui.QApplication.UnicodeUTF8))
    self.label.setText(QtGui.QApplication.translate("myWidget", "Welcome to my new widget!", None, QtGui.QApplication.UnicodeUTF8))
}}

Aby go użyć, musisz tylko zastosować go do swojego nowo utworzonego widżetu w następujący sposób:

{{Code|code=
app = QtGui.qApp
FCmw = app.activeWindow()
myNewFreeCADWidget = QtGui.QDockWidget() # create a new dckwidget
myNewFreeCADWidget.ui = myWidget_Ui() # load the Ui script
myNewFreeCADWidget.ui.setupUi(myNewFreeCADWidget) # setup the ui
FCmw.addDockWidget(QtCore.Qt.RightDockWidgetArea,myNewFreeCADWidget) # add the widget to the main window
}}

<span id="Loading_the_UI_from_a_Qt_Designer_.ui_File"></span>
==Ładowanie UI z pliku .ui Qt Designera==

Kluczem do poprawnego załadowania pliku UI jest użycie pełnej ścieżki do pliku. Na przykład, [[Std_AddonMgr/pl|Menedżer dodatków]] robi to w następujący sposób:

{{Code|code=
self.dialog = FreeCADGui.PySideUic.loadUi(os.path.join(os.path.dirname(__file__), "AddonManager.ui"))
}}


{{Powerdocnavi{{#translation:}}}}
[[Category:Developer Documentation{{#translation:}}]]
[[Category:Python Code{{#translation:}}]]
{{clear}}