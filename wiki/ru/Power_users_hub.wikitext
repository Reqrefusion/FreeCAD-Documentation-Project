<languages/>
{{TOCright}}
[[Image:Power_user_hub.png|64px]]
----

Это место, куда можно прийти, если вы опытный пользователь и хотите узнать больше о настройке и расширении FreeCAD.

FreeCAD расширяем с помощью кода [[Python/ru|Python]], который запускается непосредственно в [[Python_console/ru|консоли Python]] или загружается из модулей при запуске. Это означает, что вы можете модифицировать FreeCAD без необходимости перекомпиляции программы. Например, вы можете:
* '''Создавать и изменять геометрию''': вы можете создать новый вид объекта, либо с нуля, либо адаптировав существующий тип.
* '''Создавать собственные инструменты и команды''': создать ваши собственные наборы инструментов, запускающих Ваш код .
* '''Изменять интерфейс''': создать панель инструментов и пометить туда ваши инструменты, создавать специальные окна, панели или интерфейсы для взаимодействия с вашими инструментами.
*'''Изменять представление в графе сцены''': В FreeCAD есть разделение процессов построения и вычисления геометрии и отрисовки этой геометрии на вашем экране. У Вас есть полный доступ к способу отображения содержимого на экране, поэтому вы можете изменить представление, взаимодействовать с ним, или добавить к ним пользовательское поведение.
Вы можете так же добавить пользовательские экранные виджеты, как например информационные, перетаскиватели (draggers), якоря (привязки) или временные объекты (для быстрого предпросмотра операции).

Если Вы хотите добавить контент на эти страницы, запросите аккаунт на wiki с правом редактирования [https://forum.freecad.org/viewtopic.php?f=21&t=6830 на форуме], изучите [[WikiPages/ru|WikiPages]] насчёт общих рекомендаций, которым Вы должны следовать. Относительно прочих путей внести вклад в проект смотрите страницу [[Help_FreeCAD/ru|о том как помочь FreeCAD]].

<span id="Customizing_FreeCAD"></span>
== Настройка FreeCAD ==

* [[Interface Customization/ru|Настройка Интерфейса]]: Начиная с начала: Панели инструментов и ярлыки
* [[Macros/ru|Работа с макросами]]: Легкая запись часто повторяющихся задач или python кода
* [[Macros_recipes/ru|Рецепты макросов]]
* [[Customize_Toolbars/ru|Кастомизация панелей инструментов]]
* [[Installing_more_workbenches/ru|Установка дополнительных верстаков]]

<span id="Scripting_in_FreeCAD"></span>
== Написание сценариев FreeCAD ==

<span id="General"></span>
===Основы===

<div class="mw-translate-fuzzy">
* [[Introduction_to_Python/ru|Введение в Python]]- Смотрите также другие руководства по Python в нижней части этой страницы
* [[Python_scripting_tutorial|Учебник скриптов FreeCAD]] - Общий взгляд на написание скриптов на python в  FreeCAD
* [[FreeCAD_Scripting_Basics/ru|Основы написания сценариев для FreeCAD]]: Что сказать, основы ...
* [[Gui_Command/ru|Команды графического интерфейса]] : Добавление пользовательских команд в графический интерфейс
* Использование смешанных [[Units/ru|Единиц измерения]] в FreeCAD
* [[Profiling/ru|Профилирование]] кода Python
</div>

<span id="Modules"></span>
=== Модули ===

Функциональность FreeCAD разделена между модулями, работающими со своими типами данных и приложениями. У FreeCADа есть встроенные модули и модули расширения (plug-ins). Когда модули расширений установлены, они становятся доступны вам как встроенные модули. Описываемые ниже модули модули по умолчанию, включённые в любую установку FreeCAD.

* [[Builtin modules/ru|Встроенные модули]] это принципиальные модули FreeCAD. Они содержат инструменты для манипулирования общими конфигурациями FreeCAD, документами и их содержимым.
* [[Workbench creation/ru|Создание верстаков]] покажет Вам как создать собственных верстак.

<span id="Working_with_Meshes"></span>
====Работа с полигональными сетками====

* [[Mesh Scripting/ru|Написание сценариев для Mesh]]: Как взаимодействовать с [[Mesh_Workbench/ru|модулем Mesh]]

<span id="Working_with_Parts"></span>
====Работа с Parts====

<div class="mw-translate-fuzzy">
* [[Part_Workbench/ru|Верстак Деталь]]: Как инструменты и структуры [http://en.wikipedia.org/wiki/Open_CASCADE OpenCasCade] используются в FreeCAD 
* [[Topological data scripting/ru|Сценарии для обработки топологических данных]]: Как взаимодействовать с модулем Part
* [[pythonOCC/ru|PythonOCC]]: Как раскрыть всю мощь OpenCasCade
* [[Mesh to Part/ru|Mesh to Part]]: Преобразование между типами объектов
</div>

<span id="Accessing_the_Coin_scenegraph"></span>
====Получение доступа к визуализатору сцен - Coin====

* [[Scenegraph/ru|The Coin/Inventor scenegraph]]: Как работает представление сцен в FreeCAD
* [[Pivy/ru|Pivy]]: Как получить доступ и изменить графическое представление сцены

<span id="Controlling_the_Qt_interface"></span>
===Управление Qt интерфейсом===

* [[PySide/ru|PySide]]: Как получить доступ к интерфейсу и изменить его содержание
* [[Embedding FreeCADGui/ru|Использование FreeCAD GUI]] в различных Qt приложениях с помощью PyQt

<span id="Working_with_parametric_objects"></span>
===Работа с параметрическими объектами===

<div class="mw-translate-fuzzy">
* [[Scripted objects/ru|Сценарные объекты]]: Как создать на 100% управляемые сценариями на python объекты в FreeCAD
** [[Scripted objects with attachment/ru|Scripted objects with attachment]]:Как сделать скриптовые объекты присоединяемыми к другим объектам в FreeCAD
** [[Scripted_objects_saving_attributes/ru|Scripted objects saving attributes]]: как сохранить и восстановить атрибуты промежуточного класса с {{incode|__getstate__}} и {{incode|__setstate__}}.
** [[Scripted_objects_migration/ru|Scripted objects migration]]: как мигрировать старые скриптовые объекты на новые классы.
</div>

<span id="Examples"></span>
===Примеры===

* [[Code snippets/ru|Фрагменты кода]]: Коллекция фрагментов FreeCAD python кода, в качестве ингредиентов ваших сценариев...
* [[Line drawing function/ru|Функция отрисовки линии]]: Как собрать простой инструмент для отрисовки линий
* [[Dialog creation/ru|Создание диалога]]: Как сконструировать диалог в Qt designer, и использовать его в FreeCAD
* [[Embedding FreeCAD/ru|Встраивание FreeCAD]]: Как импортировать FreeCAD в виде python модуля в другие приложения
* [[Draft_Workbench/ru|Верстак черчения]]добавляет основные функции 2d рисования в freecad. Он полностью написан на python, так что может быть хорошим примером если вы хотите писать ваши собственные модули.
* [[FreeCAD vector math library/ru|Векторная библиотека FreeCAD]]: Пара полезных функций для работы с векторами в FreeCAD. Эта библиотека также включена в Чертежный Модуль.

<span id="API_Functions"></span>
== Функции API ==

Полное описание API можно найти в http://www.freecad.org/api/ . Он содержит программный интерфейс как на C++, так и на Python, и пока не совсем хорошо форматирован, что может мешать при просмотре кода Python. Более простая для просмотра версия доступна [[:Category:API/ru|здесь]].  Заметим что он может быть неполным, так как обновляется вручную. Для получения более точной информации, просматривайте модули напрямую из консоли Python FreeCADа.

Связанное: [[Exposing_C%2B%2B_to_Python/ru|Представление C++ в Python]]

<span id="Advanced_modification"></span>
== Продвинутые модификации ==

* [[Start_up_and_Configuration/ru|Запуск и настройка]]: Запуск и параметры командной строки
* [[Installing_on_Windows/ru|Установка в Windows]]: Использование установщика windows 
* [[Compile_on_Windows/ru|Компиляция FreeCAD в Windows]] и [[Compile_on_Linux/ru|компиляция FreeCAD в Linux]]
* [[Branding/ru|Маркирование]]: Простые изменения, которые вы можете сделать с исходными кодами для изменения некоторых аспектов FreeCAD
* [[Extra_python_modules/ru|Дополнительные модули Python]] : Расширение интерпретатора python в FreeCAD этими мощными модулями!

<span id="Python_tutorials"></span>
== Учебники по Python ==

Здесь представлены хорошие общие учебники, без специфики FreeCAD, они могут вас заинтересовать, если для вас python, это что-то свовершенно новое.

'''Python'''
* [https://docs.python.org/3/tutorial/index.html Официальный учебник python] - весьма полный учебник для знакомства с Python
* [https://en.wikibooks.org/wiki/Non-Programmer%27s_Tutorial_for_Python_3 Учебник по python для не программистов] - отличная wikiкнига
* [http://npt.cc.rsu.ru/user/wanderer/ODP/Python_for_Newbies.htm Python для новичков] - один большой учебник, полностью охватывающий основы

<div class="mw-translate-fuzzy">
'''PySide''' - Как создавать и управлять FreeCAD Qt UI интерфейсом с помощью python
* [http://zetcode.com/gui/pysidetutorial/ PySide tutorial] : Платформонезависимый учебник, показывающий использование PySide с примерами
* [http://www.pythoncentral.io/series/python-pyside-pyqt-tutorial/ PySide/PyQt tutorial] : Легкий в чтении учебник по PySide и PyQt, с примерами
* [http://qt-project.org/wiki/PySideDocumentation Документация PySide] : от проекта Qt (от тех, кто его написал)
* [http://qt-project.org/wiki/QtCreator_and_PySide Использование QtCreator в PySide] : так же от проекта Qt
* [http://srinikom.github.io/pyside-docs/index.html Справка по PySide] : бесконечные детали о minutiae PySide и Qt, надежный источник для справки
* [http://nullege.com/codes/search?cq=PySide Примеры кода PySide] : база данных кода PySide с возможностью поиска
</div>

Дальнейшие два ссылаются на специффичные для PyQt (не PySide), но могут предложить некоторую полезную информацию:
* [http://www.cs.usfca.edu/~afedosov/qttut/ Basic PyQt tutorial] : Простое и короткое, ориентированное на linux руководство, объясняющее работу с PyQt и Qt Designer
* [http://vizzzion.org/?id=pyqt Programming Qt applications in python] : Более глубокое руководство, описывающее все процессы работы с qt и python.

'''Pivy''' - Как взаимодействовать с  в 3D сценой FreeCADа
* [http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.108.947&rep=rep1&type=pdf Pivy - Embedding a Dynamic Scripting Language into a Scene Graph Library] : Тезис, подробно объясняющий Pivy
* [http://ftp.ntua.gr/mirror/python/pycon/dc2004/papers/47/ High Level 3D Graphics Programming in Python] : Примеры Pivy из Pycon 2004
* [https://www.semanticscholar.org/paper/Integrating-Pivy-into-Studierstube-4.2-Gruber/08c9a89c8326c87f81c2d83428029fbfb6c2ae64 Introducing Pivy into studierstube] [https://www.researchgate.net/publication/228737136_Integrating_Pivy_into_Studierstube_42 (Mirror)] :  Документ, который на самом деле не учебник, но прекрасно иллюстрирует как работает Pivy (требует академический аккаунт)

<span id="Community_projects"></span>
== Проекты сообщества == 

На [[FreeCAD Community Portal|портале Сообщества]], вы можете найти другие основанные на FreeCAD проекты запущенные сообществом пользователей FreeCAD. Если вы начинаете новый проект FreeCAD, убедитесь что его нет в списке! У нас также есть страница, с описанием вещей, которые вы могли бы сделать, если хотите [[Help FreeCAD/ru|Помочь FreeCAD]].


{{Powerdocnavi{{#translation:}}}}
[[Category:Hubs{{#translation:}}]]