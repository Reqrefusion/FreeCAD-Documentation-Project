<languages/>

{{Docnav
|[[Debugging/pt-br|Depuração]]
|[[FreeCAD_Build_Tool/pt-br|Ferramenta de construção FreeCAD]]
}}

<div lang="en" dir="ltr" class="mw-content-ltr">
[[Image:Workbench_Test.svg|thumb|128px|Test workbench icon]]
</div>

{{TOCright}}

<span id="Introduction"></span>
== Introdução ==

<div lang="en" dir="ltr" class="mw-content-ltr">
The [[Testing|Test Framework Workbench]] is not really a modelling workbench, but it contains a set of [[Python|Python]] scripts to perform different tests on the core components of FreeCAD, in order to debug problems. See also [[debugging|debugging]].
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
You can run the tests from the command line, by using the {{incode|-t}} or {{incode|--run-test}} options.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Run all tests:
</div>

{{Code|code=
freecad --run-test 0
}}

<div lang="en" dir="ltr" class="mw-content-ltr">
Run only some the specified unit test, for example:
</div>

{{Code|code=
freecad -t TestDraft
}}

<div lang="en" dir="ltr" class="mw-content-ltr">
If a test does not need the GUI, it can also be executed in console mode by setting the {{incode|-c}} or {{incode|--console}} option in addition. This usually results in much faster startup time as the GUI is not loaded. For example:
</div>

{{Code|code=
freecad -c -t TestPartDesignApp
}}

<div lang="en" dir="ltr" class="mw-content-ltr">
Files generated by the testing procedure (e.g. input files from TestFemApp stored in the FEM_unittests folder) are written to the temp directory used by FreeCAD that can be located by entering this in the [[Python_console|Python console]]:
</div>

{{Code|code=
App.getTempPath()
}}

<div lang="en" dir="ltr" class="mw-content-ltr">
They might be useful for debugging.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
== Test menu ==
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Each top level directory in FreeCAD should have a file with the tests that can be run for that particular workbench or module. The file usually starts with the word {{incode|Test}}.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
To run a test from within FreeCAD, switch to the Test Workbench, then {{MenuCommand|Test commands → TestToolsGui → Self test → Select test name}}, then enter the name of the Python file with the tests; for example, for the [[Draft Workbench|Draft Workbench]], this would be {{MenuCommand|TestDraft}}, then press {{Button|Start}}.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
== Test functions ==
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
This is the list of test apps as of 0.15 git 4207:
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
=== TestAPP.All ===
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Add test function
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
=== BaseTests ===
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Add test function
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
=== UnitTests ===
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Add test function
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
=== Document ===
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Add test function
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
=== UnicodeTests ===
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Add test function
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
=== MeshTestsApp ===
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Add test function
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
=== TestDraft ===
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Add test function
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
=== TestSketcherApp ===
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Add test function
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
=== TestPartApp ===
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Add test function
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
=== TestPartDesignApp ===
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Add test function
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
=== TestCAMApp ===
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Path workbench test cases:
* depthTestCases: 
* PathTestUtils: 
* TestDressupDogbone: Test functionality of Dogbone dressup.
* TestHoldingTags: Test functionality of Holding Tags dressup.
* TestPathAdaptive: Test selection capability of Adaptive operation.
* TestPathCore: Test core functionality of Path workbench.
* TestPathDeburr: Test general functionality of Deburr operation.
* TestPathGeom: Test various functions available in the PathGeom module.
* TestPathHelix: Test general functionality of Helix operation.
* TestPathLog: Test various functions available in the PathLog debugging and feedback module.
* TestPathOpTools: 
* TestPathPreferences: Test various functions available in the PathPreferences module.
* TestPathPropertyBag: 
* TestPathSetupSheet: 
* TestPathStock: 
* TestPathThreadMilling: 
* TestPathTool: 
* TestPathToolBit: 
* TestPathToolController: 
* TestPathTooltable: 
* TestPathUtil: Test various functions available in the PathUtil module.
* TestPathVcarve: Test general functionality of Vcarve operation.
* TestPathVoronoi:
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
=== Workbench ===
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Add test function
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
=== Menu ===
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Add test function
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
=== Menu.MenuDeleteCases ===
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Add test function
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
=== Menu.MenuCreateCases ===
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Add test function
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
==Scripting==
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
{{Emphasis|See also:}} [[FreeCAD_Scripting_Basics|FreeCAD Scripting Basics]].
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
===Get a list of all top-level test modules===
</div>

{{Code|code=
FreeCAD.__unit_test__
}}

<div lang="en" dir="ltr" class="mw-content-ltr">
Note that the test modules returned here depend on whether a GUI available or not. I.e. when executed in console mode, various tests ending in "Gui" are missing.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
===Run specific tests===
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
There are various ways of running tests using [https://docs.python.org/3/library/unittest.html Python's unittest library]. FreeCAD's test framework removes some of the boiler plate for the most common cases.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Run all tests defined in a Python module:
</div>
{{Code|code=
import Test, TestFemApp
Test.runTestsFromModule(TestFemApp)
}}

<div lang="en" dir="ltr" class="mw-content-ltr">
Run all tests defined in a Python class:
</div>
{{Code|code=
import Test, femtest.app.test_solver_calculix
Test.runTestsFromClass(femtest.app.test_solver_calculix.TestSolverCalculix)
}}

<div lang="en" dir="ltr" class="mw-content-ltr">
===Example 1===
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Within the Python Console of FreeCAD, the following code format may be used to run built-in tests.  Replace the red "'''TestFem'''" text in the code below with the desired module test name.
* For example, use "'''TestPathApp'''" to run all unit tests for the Path workbench unit test framework.
* Submodules are available using dot notation, like "'''TestPathApp.TestPathAdaptive'''" to only run the Adaptive unit tests within the greater Path workbench test framework.
* Multiple test modules or submodules may be combined by adding another `'''suite.addTest(...)'''` method call just like the one in the code below, but with a different module or submodule reference.
* Output for the code below will be in the Report View panel within the FreeCAD GUI.
* Code source is copied from post by FreeCAD forum user, ''sgrogan'', in the [https://forum.freecad.org/viewtopic.php?style=3&p=153251#p153251 unit tests per python] topic, with credit there given to forum user, ''wmayer''.
</div>

{{Code|code=
import unittest
suite = unittest.TestSuite()
suite.addTest(unittest.defaultTestLoader.loadTestsFromName("TestFem"))
r = unittest.TextTestRunner()
r.run(suite)
}}

<div lang="en" dir="ltr" class="mw-content-ltr">
==Additional Resources==
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
===Forum Topics===
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
* [https://forum.freecad.org/viewtopic.php?style=3&f=27&t=18379 Support for running specific unit tests with --run-test #331]
</div>


{{Docnav
|[[Debugging/pt-br|Depuração]]
|[[FreeCAD_Build_Tool/pt-br|Ferramenta de construção FreeCAD]]
}}

<!--T:21-->
{{Userdocnavi{{#translation:}}}}
[[Category:Developer Documentation{{#translation:}}]]
[[Category:Test Framework{{#translation:}}]]
[[Category:Workbenches{{#translation:}}]]
[[Category:Testing{{#translation:}}]]