<languages/>
<translate>

<!--T:24-->
{{Docnav
|[[Draft_CubicBezCurve|CubicBezCurve]]
|[[Draft_Point|Point]]
|[[Draft_Workbench|Draft]]
|IconL=Draft_CubicBezCurve.svg
|IconR=Draft_Point.svg
|IconC=Workbench_Draft.svg
}}

<!--T:14-->
{{GuiCommand
|Name=Draft BezCurve
|MenuLocation=Drafting → Bézier Tools → Bézier Curve<br>2D Drafting → Bézier Curve
|Workbenches=[[Draft_Workbench|Draft]], [[BIM_Workbench|BIM]]
|Shortcut={{KEY|B}} {{KEY|Z}}
|Version=0.14
|SeeAlso=[[Draft_CubicBezCurve|Draft CubicBezCurve]], [[Draft_BSpline|Draft BSpline]]
}}

==Description== <!--T:1--> 

<!--T:2-->
The [[Image:Draft_BezCurve.svg|24px]] '''Draft BezCurve''' command creates a [http://en.wikipedia.org/wiki/Bezier_curve Bézier curve] from several points.

<!--T:12-->
The command creates a single Bézier curve with a {{PropertyData|Degree}} that is {{incode|number_of_points - 1}}. It can be transformed into a piecewise Bézier curve by reducing this property.

<!--T:15-->
The Draft BezCurve and the [[Draft_CubicBezCurve|Draft CubicBezCurve]] commands use {{Emphasis|control points}} to define the position and curvature of the spline. The [[Draft BSpline|Draft BSpline]] command, on the other hand, specifies the {{Emphasis|exact points}} through which the curve will pass.

</translate>
[[Image:Draft_BezCurve_Example.png|400px]]
<translate>
<!--T:16-->
{{Caption|Bézier curve defined by multiple points}}

==Usage== <!--T:3-->

<!--T:27-->
See also: [[Draft_Tray|Draft Tray]], [[Draft_Snap|Draft Snap]] and [[Draft_Constrain|Draft Constrain]].

<!--T:17-->
# There are several ways to invoke the command:
#* Press the {{Button|[[Image:Draft_BezCurve.svg|16px]] [[Draft_BezCurve|Bézier Curve]]}} button.
#* [[Draft_Workbench|Draft]]: Select the {{MenuCommand|Drafting → Bézier Tools → [[Image:Draft_BezCurve.svg|16px]] Bézier Curve}} option from the menu.
#* [[BIM_Workbench|BIM]]: Select the {{MenuCommand|2D Drafting → [[Image:Draft_BezCurve.svg|16px]] Bézier Curve}} option from the menu.
#* Use the keyboard shortcut: {{KEY|B}} then {{KEY|Z}}.
# The {{MenuCommand|Bézier Curve}} task panel opens. See [[#Options|Options]] for more information.
# Pick the first point in the [[3D_View|3D View]], or type coordinates and press the {{Button|[[Image:Draft_AddPoint.svg|16px]] Enter Point}} button.
# Pick additional points in the [[3D_View|3D View]], or type coordinates and press the {{Button|[[Image:Draft_AddPoint.svg|16px]] Enter Point}} button.
# Press {{KEY|Esc}} or the {{Button|Close}} button to finish the command.

==Options== <!--T:4-->

<!--T:28-->
The single character keyboard shortcuts available in the task panel can be changed. See [[Draft_Preferences|Draft Preferences]]. The shortcuts mentioned here are the default shortcuts (for version 1.0).

<!--T:5-->
* To manually enter coordinates enter the X, Y and Z component, and press {{KEY|Enter}} after each. Or you can press the {{Button|[[Image:Draft_AddPoint.svg|16px]] Enter Point}} button when you have the desired values. It is advisable to move the pointer out of the [[3D_View|3D View]] before entering coordinates.
* Press {{KEY|R}} or click the {{MenuCommand|Relative}} checkbox to toggle relative mode. If relative mode is on, coordinates are relative to the last point, if available, else they are relative to the coordinate system origin.
* Press {{KEY|G}} or click the {{MenuCommand|Global}} checkbox to toggle global mode. If global mode is on, coordinates are relative to the global coordinate system, else they are relative to the [[Draft_SelectPlane|working plane]] coordinate system.
* Press {{KEY|F}} or click the {{MenuCommand|Filled}}{{VersionNoteMinus|1.0}} or {{MenuCommand|Make face}}{{VersionNote|1.1}} checkbox to toggle make face mode. If make face mode is on, the created curve will have {{PropertyData|Make Face}} set to {{TRUE}} and have a filled face, provided it is closed and does not self-intersect. A self-intersecting curve with a face will not display properly, for such a curve {{PropertyData|Make Face}} must be set to {{FALSE}}.
* Press {{KEY|N}} or click the {{MenuCommand|Continue}} checkbox to toggle continue mode. If continue mode is on, the command will restart after using {{Button|[[Image:Draft_FinishLine.svg|16px]] Finish}} or {{Button|[[Image:Draft_CloseLine.svg|16px]] Close}}, or after creating a closed curve by snapping to the first point of the curve, allowing you to continue creating curves.
* Press {{KEY|/}} or the {{Button|[[Image:Draft_UndoLine.svg|16px]] Undo}} button to undo the last point.
* Press {{KEY|A}} or the {{Button|[[Image:Draft_FinishLine.svg|16px]] Finish}} button to finish the command and leave the curve open.
* Press {{KEY|O}} or the {{Button|[[Image:Draft_CloseLine.svg|16px]] Close}} button to finish the command and close the curve. A closed curve can also be created by snapping to the first point of the curve.
* Press {{KEY|W}} or the {{Button|[[Image:Draft Wipe.svg|16px]] Wipe}} button to delete the segments already placed, but keep working from the last point.
* Press {{KEY|U}} or the {{Button|[[Image:Draft SelectPlane.svg|16px]] [[Draft_SelectPlane|Set Working Plane]]}} button to adjust the current working plane in the orientation defined by the last and the previous point.
* Press {{KEY|S}} to switch [[Draft_Snap|Draft snapping]] on or off.
* Press {{KEY|Esc}} or the {{Button|Close}} button to finish the command.

==Notes== <!--T:29-->

<!--T:11-->
* A Draft BezCurve can be edited with the [[Draft_Edit|Draft Edit]] command.
* OpenCascade, and therefore FreeCAD, does not support Bézier curves of degrees larger than 25. This should not be a problem in practice, as most users typically use Bézier curves of degrees 3 to 5.

==Properties== <!--T:6-->

<!--T:30-->
See also: [[Property_View|Property View]].

<!--T:31-->
A Draft BezCurve object is derived from a [[Part_Part2DObject|Part Part2DObject]]{{VersionNoteMinus|1.0}} or a [[Part_Feature|Part Feature]] object{{VersionNotePlus|1.1}} and inherits all its properties. It also has the following additional properties:

=== Data === <!--T:32-->

<!--T:40-->
{{TitleProperty|Attachment}}

<!--T:41-->
The object has the same attachment properties as a [[Part_Part2DObject#Data|Part Part2DObject]].

<!--T:33-->
{{TitleProperty|Draft}}

<!--T:20-->
* {{PropertyData|Area|Area}}: (read-only) specifies the area of the face of the curve. The value will be {{value|0.0}} if {{PropertyData|Make Face}} if {{FALSE}} or the face cannot be created.
* {{PropertyData|Closed|Bool}}: specifies if the curve is closed or not. If the curve is initially open this value is {{FALSE}}, setting it to {{TRUE}} will draw a segment to close the curve. If the curve is initially closed this value is {{TRUE}}, setting it to {{FALSE}} will remove the last segment and make the curve open.
* {{PropertyData|Continuity|IntegerList}}: (read-only) specifies the continuity of the curve.
* {{PropertyData|Degree|Integer}}: specifies the degree of the curve.
* {{PropertyData|Length|Length}}: (read-only) specifies the total length of the curve.
* {{PropertyData|Make Face|Bool}}: specifies if the curve makes a face or not. If it is {{TRUE}} a face is created, otherwise only the perimeter is considered part of the object. This property only works if {{PropertyData|Closed}} is {{TRUE}} and if the curve does not self-intersect.
* {{PropertyData|Points|VectorList}}: specifies the control points of the curve in its local coordinate system.

=== View === <!--T:34-->

<!--T:35-->
{{TitleProperty|Draft}}

<!--T:21-->
* {{PropertyView|Arrow Size|Length}}: specifies the size of the symbol displayed at the end of the curve.
* {{PropertyView|Arrow Type|Enumeration}}: specifies the type of symbol displayed at the end of the curve, which can be {{value|Dot}}, {{value|Circle}}, {{value|Arrow}}, {{value|Tick}} or {{value|Tick-2}}.
* {{PropertyView|End Arrow|Bool}}: specifies whether to show a symbol at the end of the curve, so it can be used as an annotation line.
* {{PropertyView|Pattern|Enumeration}}: specifies the [[Draft_Pattern|Draft Pattern]] with which to fill the face of the closed curve. This property only works if {{PropertyData|Make Face}} is {{TRUE}} and if {{PropertyView|Display Mode}} is {{value|Flat Lines}}.
* {{PropertyView|Pattern Size|Float}}: specifies the size of the [[Draft_Pattern|Draft Pattern]].

==Scripting== <!--T:36-->

<!--T:8-->
See also: [https://freecad.github.io/SourceDoc/ Autogenerated API documentation] and [[FreeCAD Scripting Basics|FreeCAD Scripting Basics]].

<!--T:9-->
To create a Draft BezCurve use the {{incode|make_bezcurve}} method ({{Version|0.19}}) of the Draft module. This method replaces the deprecated {{incode|makeBezCurve}} method.

</translate>
{{Code|code=
bezcurve = make_bezcurve(pointslist, closed=False, placement=None, face=None, support=None, degree=None)
bezcurve = make_bezcurve(Part.Wire, closed=False, placement=None, face=None, support=None, degree=None)
}}
<translate>

<!--T:10-->
* Creates a {{incode|bezcurve}} object with the given list of points, {{incode|pointslist}}.
** Each point in the list is defined by its {{incode|FreeCAD.Vector}}, with units in millimeters.
** Alternatively, the input can be a {{incode|Part.Wire}}, from which points are extracted.
* If {{incode|closed}} is {{incode|True}}, or if the first and last points are identical, the curve is closed.
* If {{incode|placement}} is {{incode|None}} the curve is created at the origin.
* If {{incode|face}} is {{incode|True}}, and the curve is closed, the curve will make a face, that is, it will appear filled.

<!--T:22-->
Example:

</translate>
{{Code|code=
import FreeCAD as App
import Draft

doc = App.newDocument()

p1 = App.Vector(0, 0, 0)
p2 = App.Vector(1000, 1000, 0)
p3 = App.Vector(2000, 0, 0)
p4 = App.Vector(1500, -2000, 0)

bezcurve1 = Draft.make_bezcurve([p1, p2, p3, p4], closed=True)
bezcurve2 = Draft.make_bezcurve([p4, 1.3*p2, p1, 4.1*p3], closed=True)
bezcurve3 = Draft.make_bezcurve([1.7*p3, 1.5*p4, 2.1*p2, p1], closed=True)

doc.recompute()
}}
<translate>


<!--T:23-->
{{Docnav
|[[Draft_CubicBezCurve|CubicBezCurve]]
|[[Draft_Point|Point]]
|[[Draft_Workbench|Draft]]
|IconL=Draft_CubicBezCurve.svg
|IconR=Draft_Point.svg
|IconC=Workbench_Draft.svg
}}

</translate>
{{Draft Tools navi{{#translation:}}}}
{{Userdocnavi{{#translation:}}}}