<languages/>
<translate>

<!--T:10-->
{{Docnav
|
|[[Points_Export|Export]]
|[[Points_Workbench|Points]]
|IconL=
|IconR=Points_Export.svg
|IconC=Workbench_Points.svg
}}

<!--T:1-->
{{GuiCommand
|Name=Points Import
|MenuLocation=Points → Import Points…
|Workbenches=[[Points_Workbench|Points]]
|SeeAlso=[[Import_Export|Import Export]]
}}

==Description== <!--T:2-->

<!--T:14-->
The '''Points Import''' command imports a point cloud from a file.

==Usage== <!--T:3-->

<!--T:15-->
# There are several ways to invoke the command:
#* Press the {{Button|[[Image:Points_Import.svg|16px]] [[Points_Import|Import Points…]]}} button.
#* Select the {{MenuCommand|Points → [[Image:Points_Import.svg|16px]] Import Points…}} option from the menu.
# Select a point cloud file.
# Press the {{Button|Open}} button.

==Properties== <!--T:16-->

<!--T:17-->
See [[Points_Convert|Points Convert]].

==Point cloud file format== <!--T:18-->

<!--T:22-->
For point cloud files with the {{FileName|.asc}}, {{FileName|.pcd}} or {{FileName|.ply}} extension the following rules apply:

<!--T:19-->
* Each line in the file must list the X, Y and Z coordinates of a point.
* The coordinates must be separated by spaces.
* The coordinates must use a decimal point, not a decimal comma.

==Sample point cloud file== <!--T:6-->

</translate>
 0 0 0
 1.4562 -7.2354 12.2367
 5.9423 3.1728 -17.6439
<translate>

<!--T:7-->
For testing you can use [https://raw.githubusercontent.com/FreeCAD/Examples/master/Point_cloud_ExampleFiles/PointCloud-Data_Stanford-Bunny.asc this file], which is a low polygon version of the [http://graphics.stanford.edu/data/3Dscanrep/ Stanford Bunny].

==Scripting== <!--T:20-->

<!--T:21-->
The code below can be used to scale an imported point cloud. Select the point cloud and run the code, either by pasting it in the [[Python_console|Python console]], or by saving it as a macro and [[Std_DlgMacroExecute|executing]] that macro.

</translate>
{{Code|code=
from PySide import QtWidgets
import FreeCAD as App
import FreeCADGui as Gui

def scale_points(obj, scale_x, scale_y, scale_z):
    mtx = App.Matrix()
    mtx.scale(scale_x, scale_y, scale_z)
    pts = obj.Points.copy()
    pts.transformGeometry(mtx)
    obj.Points = pts
    App.ActiveDocument.recompute()

if Gui.Selection.getSelection():
    obj = Gui.Selection.getSelection()[0]
    if obj.isDerivedFrom("Points::Feature"):
        scale, ok = QtWidgets.QInputDialog.getDouble(
            None,
            "Scale point cloud",
            "Scale:",
            value=1.0,
            decimals=6
        )
        if ok:
            scale_points(obj, scale, scale, scale)
}}
<translate>


<!--T:8-->
{{Docnav
|
|[[Points_Export|Export]]
|[[Points_Workbench|Points]]
|IconL=
|IconR=Points_Export.svg
|IconC=Workbench_Points.svg
}}

</translate>
{{Points Tools navi{{#translation:}}}}
{{Userdocnavi{{#translation:}}}}