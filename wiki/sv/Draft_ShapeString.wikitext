<languages/>

<div lang="en" dir="ltr" class="mw-content-ltr">
{{Docnav
|[[Draft_Facebinder|Facebinder]]
|[[Draft_Hatch|Hatch]]
|[[Draft_Workbench|Draft]]
|IconL=Draft_Facebinder.svg 
|IconR=Draft_Hatch.svg 
|IconC=Workbench_Draft.svg
}}
</div>

<div class="mw-translate-fuzzy">
{{GuiCommand/sv|Name=Draft ShapeString|Name/sv=Draft ShapeString|Workbenches=[[Draft_Workbench/sv|Draft]], [[Arch_Workbench/sv|Arch]]|MenuLocation=Draft -> ShapeString|Shortcut=S S|SeeAlso=[[Draft Text/sv|Draft Text]], [[Part Extrude/sv|Part Extrude]]}}
</div>

<span id="Description"></span>
====Beskrivning====

<div lang="en" dir="ltr" class="mw-content-ltr">
The [[Image:Draft_ShapeString.svg|24px]] '''Draft ShapeString''' command creates a compound shape that represents a text string. This shape can be used to create 3D letters with the [[Part_Extrude|Part Extrude]] command.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
The Draft ShapeString command is not intended for standard text annotations. The [[Draft_Text|Draft Text]] command or the [[Draft_Label|Draft Label]] command should be used for that purpose.
</div>

[[Image:Draft_ShapeString_Example400.png]]
<div class="mw-translate-fuzzy">
[[Image:Draft_ShapeString_Example400.png]]
</div>

<span id="Usage"></span>
<div class="mw-translate-fuzzy">
==Bruk==
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
For Windows users: please read the [[#Font_file_selection_on_Windows|Font file selection on Windows]] paragraph first.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
# There are several ways to invoke the command:
#* Press the {{Button|[[Image:Draft_ShapeString.svg|16px]] [[Draft_ShapeString|Shape from text]]}} button.
#* [[Draft_Workbench|Draft]]: Select the {{MenuCommand|Drafting → [[Image:Draft_ShapeString.svg|16px]] Shape from text}} option from the menu.
#* [[BIM_Workbench|BIM]]: Select the {{MenuCommand|Annotation → [[Image:Draft_ShapeString.svg|16px]] Shape from text}} option from the menu.
# The {{MenuCommand|ShapeString}} task panel opens.
# Click a point in the [[3D_view|3D view]], or enter coordinates.
# Optionally click the {{MenuCommand|Global}} checkbox to toggle global mode. If global mode is on, coordinates are relative to the global coordinate system, else they are relative to the [[Draft_SelectPlane|working plane]] coordinate system. {{Version|1.1}}
# Optionally press the {{Button|Reset Point}} button to reset the point to the origin of the current coordinate system.
# Specify the {{MenuCommand|Height}}.
# Enter the {{MenuCommand|String}}{{VersionNoteMinus|1.0}} or {{MenuCommand|Text}}{{VersionNote|1.1}} 
# To select the font do one of the following:
#* Enter a file path in the {{MenuCommand|Font file}} input box.
#* Press the {{Button|...}} button and select a file.
# Press the {{Button|OK}} button to finish the command.
# Optionally change the {{PropertyData|Justification}} of the ShapeString. See [[#Properties|Properties]].
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
==Options==
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
* Press {{KEY|Esc}} or the {{Button|Cancel}} button to abort the command.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
==Relative file path==
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
{{version|1.1}}
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
It is possible to specify a relative path for the font file. For this the FreeCAD document must have been saved at least once.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Some examples:
* {{FileName|./SomeFont.ttf}}: The font file is in the same directory as the document.
* {{FileName|./MyDirectory/SomeFont.ttf}}: The font file is in the {{FileName|MyDirectory}} sub-directory of the document directory.
* {{FileName|../SomeFont.ttf}}: The font file is in the parent directory of the document directory.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
==Font file selection on Windows==
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
On Windows access to the default font folder is restricted. This affects the font file selection for ShapeStrings. These are the cases in FreeCAD where a font file for ShapeStrings can be specified: in the ShapeString task panel, when changing the {{PropertyData|Font File}} property of a ShapeString, and, {{VersionMinus|1.0}}, when specifying the default font file in the [[Draft_Preferences#Texts_and_dimensions|Draft Preferences]].
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Pressing the {{Button|...}} button and then selecting a file from the default Windows font folder is not possible when using the native file dialog. There are a number of workarounds:
* Make sure {{MenuCommand|DontUseNativeFontDialog}} is set to {{True}}, which is the default value for this preference. This will only call a different, non-native, file dialog when pressing the {{Button|...}} button in the ShapeString task panel. With this file dialog the default Windows font folder can be accessed.
* Change {{MenuCommand|DontUseNativeDialog}} to {{True}}. This instructs FreeCAD to always use the non-native file dialog.
* Specify the font file in the input box. You can of course type the full path or copy-paste the path from the Windows File Explorer. But there is also another way to enter the path. If you enter {{Value|C:\}} a dropdown list will appear. Select {{Value|Windows}} from that list and add {{Value|\F}}. Select {{Value|Fonts}} from the new dropdown list. Finally add {{Value|\}} and the first letter(s) of the font file, and then select it from the dropdown list.
* Create a custom folder for your font files.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
See the [[#Preferences|Preferences]] paragraph below for the location of the mentioned preferences.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
==Notes==
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
* A Draft ShapeString can be edited by double-clicking it in the [[Tree_view|Tree view]].
* Supported fonts include TrueType Collection ({{FileName|.ttc}}, {{Version|1.1}}), TrueType ({{FileName|.ttf}}), OpenType ({{FileName|.otf}}) and Type 1 ({{FileName|.pfb}}). Note that only the first font in a TrueType Collection file can be used.
* The command is restricted to left-to-right text. Right-to-left and top-to-bottom text are not supported.
* Very small text heights may result in deformed character shapes due to loss of detail in scaling.
* Fonts can generate problematic geometry. This is because font contours are allowed to overlap and have small gaps. These conditions are considered errors in wires used to define faces.
* Draft ShapeStrings can also be created with the [[Macro_Fonts_Win10_PYMP|Macro Fonts Win10 PYMP]].
* To create Draft ShapeStrings arranged in a circular fashion use the [[Macro_FCCircularText|Macro FCCircularText]].
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
==Tutorials==
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
* [[Draft_ShapeString_tutorial|Draft ShapeString tutorial]]: extrude a ShapeString, position it in 3D space, and create an engraving in another body.
* [https://forum.freecad.org/viewtopic.php?f=3&t=36623 How to use ShapeStrings in PartDesign]
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
==Preferences==
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
See also: [[Preferences_Editor|Preferences Editor]], [[Draft_Preferences|Draft Preferences]] and [[Std_DlgParameter|Std DlgParameter]].
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
* The default font file can be changed in the preferences: {{MenuCommand|Edit → Preferences... → Draft → Texts and dimensions → Default ShapeString font file}}.
* For Windows users:
** Set {{MenuCommand|Tools → Edit parameters... → BaseApp → Preferences → Dialog → DontUseNativeFontDialog}} to {{True}} to use the non-native file dialog when selecting a font file from the ShapeString task panel.
** Alternatively, set {{MenuCommand|Tools → Edit parameters... → BaseApp → Preferences → Dialog → DontUseNativeDialog}} to {{True}} to always use the non-native file dialog.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
==Properties==
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
See also: [[Property_editor|Property editor]].
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
A Draft ShapeString object is derived from a [[Part_Part2DObject|Part Part2DObject]] and inherits all its properties. It also has the following additional properties:
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
===Data===
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
{{TitleProperty|Draft}}
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
* {{PropertyData|Font File|File}}: Font file name.
* {{PropertyData|Fuse|Bool}}: Fuse faces if faces overlap, usually not required (can be very slow). Ignored if {{PropertyData|Make Face}} is {{FALSE}}. {{Version|1.0}}
* {{PropertyData|Justification|Enumeration}}: Horizontal and vertical alignment. Options: {{value|Top-Left}}, {{value|Top-Center}}, {{value|Top-Right}}, {{value|Middle-Left}}, {{value|Middle-Center}}, {{value|Middle-Right}}, {{value|Bottom-Left}}, {{value|Bottom-Center}}, {{value|Bottom-Right}}. {{Version|1.0}}
* {{PropertyData|Justification Reference|Enumeration}}: Height reference used for justification. Options: {{value|Cap Height}}, {{value|Shape Height}}. The shape height depends on the characters in {{PropertyData|String}}. {{Version|1.0}}
* {{PropertyData|Keep Left Margin|Bool}}: Keep left margin and leading white space when justification is left. {{Version|1.0}}
* {{PropertyData|Make Face|Bool}}: Fill letters with faces.
* {{PropertyData|Oblique Angle|Angle}}: Oblique (slant) angle. Must be in the -80° to +80° range. {{Version|1.0}}
* {{PropertyData|Scale To Size|Bool}}: Scale to ensure cap height is equal to size. If set to {{FALSE}}, depending on the font, cap height will not match {{PropertyData|Size}} exactly. {{Version|1.0}}
* {{PropertyData|Size|Length}}: Height of text.
* {{PropertyData|String|String}}: Text string. A ShapeString can only display a single text line.
* {{PropertyData|Tracking|Distance}}: Inter-character spacing. {{Version|1.0}}: The property type has been updated.
</div>

[[Image:Draft_ShapeString_Justification.png|200px]]
<div lang="en" dir="ltr" class="mw-content-ltr">
{{Caption|The height of the red rectangle (solid line) is equal to the cap height.<br>
The height of the green rectangle (dashed line) is equal to the shape height.<br>
The corners, the midpoints of the edges, and the center of the rectangles<br>
match the 9 justification options: Top-Left to Bottom-Right.}}
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
==Scripting==
</div>

<div class="mw-translate-fuzzy">
==Skript==
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
To create a Draft ShapeString use the {{incode|make_shapestring}} method ({{Version|0.19}}) of the Draft module. This method replaces the deprecated {{incode|makeShapeString}} method.
</div>

{{Code|code=
shapestring = make_shapestring(String, FontFile, Size=100, Tracking=0)
}}

<div lang="en" dir="ltr" class="mw-content-ltr">
* Creates a {{incode|shapestring}} compound shape using the specified {{incode|String}} and the full path of a supported {{incode|FontFile}}.
* {{incode|Size}} is the height of the resulting text in millimeters.
* {{incode|Tracking}} is the inter-character spacing in millimeters.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
The placement of the ShapeString can be changed by overwriting its {{incode|Placement}} attribute, or by individually overwriting its {{incode|Placement.Base}} and {{incode|Placement.Rotation}} attributes.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Example:
</div>

{{Code|code=
import FreeCAD as App
import Draft

doc = App.newDocument()

font1 = "/usr/share/fonts/truetype/msttcorefonts/Arial.ttf"
font2 = "/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf"
font3 = "/usr/share/fonts/truetype/freefont/FreeSerifItalic.ttf"

S1 = Draft.make_shapestring("This is a sample text", font1, 200)

S2 = Draft.make_shapestring("Inclined text", font2, 200, 10)

zaxis = App.Vector(0, 0, 1)
p2 = App.Vector(-1000, 500, 0)
place2 = App.Placement(p2, App.Rotation(zaxis, 45))
S2.Placement = place2

S3 = Draft.make_shapestring("Upside-down text", font3, 200, 10)
S3.Placement.Base = App.Vector(0, -1000, 0)
S3.Placement.Rotation = App.Rotation(zaxis, 180)

doc.recompute()
}}


<div lang="en" dir="ltr" class="mw-content-ltr">
{{Docnav
|[[Draft_Facebinder|Facebinder]]
|[[Draft_Hatch|Hatch]]
|[[Draft_Workbench|Draft]]
|IconL=Draft_Facebinder.svg 
|IconR=Draft_Hatch.svg 
|IconC=Workbench_Draft.svg
}}
</div>

{{Draft Tools navi{{#translation:}}}}
{{Userdocnavi{{#translation:}}}}