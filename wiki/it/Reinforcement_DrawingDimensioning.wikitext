<languages/>

<div class="mw-translate-fuzzy">
{{Docnav/it
|[[Reinforcement Bar Bending Schedule/it|Distinta e sagomatura dei ferri]]
|[[Arch_Floor/it|Piano]]
|[[Reinforcement_Workbench/it|Reinforcement]]
|IconL=Reinforcement_Bar_Bending_Schedule.svg
|IconC=Reinforcement_Workbench.svg
|IconR=Arch_Floor.svg
}}
</div>

<div class="mw-translate-fuzzy">
{{GuiCommand/it
|Name=Arch_Rebar_Drawing_Dimensioning
|Name/it=Disegna e quota un'armatura
|MenuLocation=Arch → Armatura
|Workbenches=[[Reinforcement Workbench/it|Reinforcement]], [[Arch Workbench/it|Arch]], [[BIM Workbench/it|BIM]]
|SeeAlso=[[Arch_Rebar_BOM/it|Distinta dei ferri]], [[Reinforcement_Bar_Shape_Cut_List/it|Sagomatura dei ferri]]
|Version=0.19
}}
</div>

<span id="Description"></span>
==Descrizione==

<div class="mw-translate-fuzzy">
Lo strumento '''Disegna e quota un'armatura''' consente all'utente di creare i disegni e di quotature le barre d'armatura.
</div>

<div class="mw-translate-fuzzy">
Questo comando fa parte dell'ambiente aggiuntivo [[Reinforcement Workbench/it|Reinforcement]], che si può installare con [[Image:Std_AddonMgr.svg|24px]] [[Std_AddonMgr/it|Addon manager]], tramite il menu {{MenuCommand|Strumenti → Addon manager → Reinforcement}}.
</div>

[[Image:Arch_Rebar_Drawing_Dimensioning_example.svg|800px]]
{{Caption|Disegno e dimensionamento dei ferri d'armatura}}

<span id="Usage"></span>
==Utilizzo==

<div class="mw-translate-fuzzy">
1. Apri il modello di FreeCAD contenente le barre d'armatura create usando [[Reinforcement_Workbench/it|Reinforcement]].
</div>

2. Select {{Button|[[Image:Arch_Structure.svg|16px]] [[Arch_Structure|Structure]]}} object and then select {{Button|[[Image:Reinforcement_DrawingDimensioning.svg|16px]] [[Reinforcement_DrawingDimensioning|Reinforcement Drawing Dimensioning]]}} from the rebar tools.

3. A dialog box will pop-out on the screen as shown below.

: [[Image:ArchRebarDrawingDimensioning_dialog1.png|800px]]

4. Enter all the details related to stroke width and color of rebar and structure.

5. Click on {{Button|Next}} button and the dialog box will be updated as shown below.

: [[Image:ArchRebarDrawingDimensioning_dialog2.png|800px]]

6. Enter drawing views option, dimensioning and offset details.

7. Click on {{Button|Next}} button and the dialog box will be updated as shown below.

: [[Image:ArchRebarDrawingDimensioning_dialog3.png|800px]]

8. Enter dimension label and line details.

9. Click on {{Button|Next}} button and the dialog box will be updated as shown below.

: [[Image:ArchRebarDrawingDimensioning_dialog4.png|800px]]

10. Enter single rebar and multi rebar dimension details.

11. Click on {{Button|Next}} button and the dialog box will be updated as shown below.

: [[Image:ArchRebarDrawingDimensioning_dialog5.png|800px]]

12. Enter details of dimension and dimension line offsets.

13. Click {{Button|Finish}} button to generate drawings.

<span id="Scripting"></span>
==Script==

{{Emphasis|Vedere anche:}} [[Arch API/it|API Arch]], [[Reinforcement API/it|API di Reinforcement]] e [[FreeCAD Scripting Basics/it|Basi di script per FreeCAD]].

The Reinforcement DrawingDimensioning tool can be used in [[macros|macros]] and from the [[Python|Python]] console by using the following function:

=== Create Reinforcement Drawing And Dimensioning ===

{{Code|code=
from ReinforcementDrawing import make_reinforcement_drawing

structure_drawing_page_dict = make_reinforcement_drawing.makeStructuresReinforcementDrawing(
    structure_list=None,
    rebars_list=None,
    view="Front",
    rebars_stroke_width=0.35,
    rebars_color_style="Automatic",
    rebars_color=(0.67, 0.0, 0.0),
    structure_stroke_width=0.5,
    structure_color_style="Automatic",
    structure_color=(0.3, 0.9, 0.91),
    drawing_left_offset=20,
    drawing_top_offset=20,
    drawing_min_right_offset=20,
    drawing_min_bottom_offset=20,
    drawing_max_width=0,   # It is set to 0 to automatically set the default width based on other parameters
    drawing_max_height=0,  # It is set to 0 to automatically set the default height based on other parameters
    template_file=str(Path(make_reinforcement_drawing.__file__).parent.absolute() / "Templates" / "A4_Landscape_blank.svg"),
    perform_dimensioning=True,
    dimension_rebars_filter_list=None,
    dimension_label_format="%M %C⌀%D,span=%S",
    dimension_font_family="DejaVu Sans",
    dimension_font_size=3,
    dimension_stroke_width=0.25,
    dimension_line_style="Continuous",
    dimension_line_color=(0.0, 0.0, 0.50),
    dimension_text_color=(0.0, 0.33, 0.0),
    dimension_single_rebar_line_start_symbol="None",
    dimension_single_rebar_line_end_symbol="FilledArrow",
    dimension_multi_rebar_line_start_symbol="FilledArrow",
    dimension_multi_rebar_line_end_symbol="FilledArrow",
    dimension_line_mid_point_symbol="Dot",
    dimension_left_offset=10,
    dimension_right_offset=10,
    dimension_top_offset=10,
    dimension_bottom_offset=10,
    dimension_left_offset_increment=6,
    dimension_right_offset_increment=6,
    dimension_top_offset_increment=6,
    dimension_bottom_offset_increment=6,
    dimension_single_rebar_outer_dim=False,
    dimension_multi_rebar_outer_dim=True,
    dimension_single_rebar_text_position_type="StartOfLine",
    dimension_multi_rebar_text_position_type="MidOfLine",
)
}}

* It returns {{incode|structure_drawing_page_dict}}, a dictionary with structure as key and corresponding reinforcement drawing page as the value.
* {{incode|structure_list}} is the list of structural objects to generate their reinforcement drawing. If not provided, structures will be selected from the active document acting as Host for rebar objects.
* {{incode|rebars_list}} is the list of rebar objects to be included in the drawing. If not provided, rebars objects having Host in structure_list will be selected from the active document.
* {{incode|view}} specifies the view of drawing to be generated. It can be "Front", "Rear", "Left", "Right", "Top" or "Bottom".
* {{incode|rebars_stroke_width}} specifies the stroke-width of rebars in drawing SVG.
* {{incode|rebars_color_style}} specifies the color style of rebars. Set it to "Automatic" to automatically select rebars color or "Custom" to choose shape color value from variable {{incode|rebars_color}}.
* {{incode|rebars_color}} specifies the fill color for rebars in drawing SVG.
    Format: (r, g, b)
    r, g, b value should be between 0 to 1, so you may need to divide the value of r, g, b by 255 to get its value between 0 to 1
    Make sure r, g, b must be float
    Example: (0.67, 0.0, 0.0)
* {{incode|structure_stroke_width}} specifies the stroke-width of structure in drawing SVG.
* {{incode|structure_color_style}} specifies the fill style of the structure. Set it to "Automatic" to automatically select structure color or "Custom" to choose structure color value from variable {{incode|structure_color}}.
* {{incode|structure_color}} specifies the fill color for structure in drawing SVG. Format: (r, g, b)
* {{incode|drawing_left_offset}} specifies the left offset of the drawing view on {{incode|template_file}}.
* {{incode|drawing_top_offset}} specifies the top offset of the drawing view on {{incode|template_file}}.
* {{incode|drawing_min_right_offset}} specifies the minimum right offset of the drawing view on {{incode|template_file}}.
* {{incode|drawing_min_bottom_offset}} specifies the minimum bottom offset of the drawing view on {{incode|template_file}}.
* {{incode|drawing_max_width}} specifies the maximum width of drawing on {{incode|template_file}}.
* {{incode|drawing_max_height}} specifies the maximum height of drawing on {{incode|template_file}}.
* {{incode|template_file}} is the template file to be used for the reinforcement drawing page.

* {{incode|perform_dimensioning}} specifies if dimensioning needs to be created for rebars in drawing.
* {{incode|dimension_rebars_filter_list}} is the list of rebars to perform dimensioning. Set it to None to dimension all visible rebars in drawing.
* {{incode|dimension_label_format}} is the format used for the dimension label.
    Example: "%M %C⌀%D,span=%S"
    Here: %M -> Rebar.Mark
          %C -> Rebar.Amount
          %D -> Rebar.Diameter
          %S -> Rebar span length
* {{incode|dimension_font_family}} is the font family of dimension label.
* {{incode|dimension_font_size}} is the font size of the dimension label.
* {{incode|dimension_stroke_width}} is the stroke-width of dimension line.
* {{incode|dimension_line_style}} is the stroke style of dimension line. It can be "Continuous", "Dash", "Dot", "DashDot" or "DashDotDot".
* {{incode|dimension_line_color}} is the color of the dimension line.
    Format: (r, g, b)
    r, g, b value should be between 0 to 1, so you may need to divide the value of r, g, b by 255 to get its value between 0 to 1
    Make sure r, g, b must be float
* {{incode|dimension_text_color}} is the color of the dimension label.
* {{incode|dimension_single_rebar_line_start_symbol}} is the dimension line start symbol, in case of single rebar is visible. It can be "FilledArrow", "Tick", "Dot" or "None".
* {{incode|dimension_single_rebar_line_end_symbol}} is the dimension line end symbol, in case of single rebar is visible. It can be "FilledArrow", "Tick", "Dot" or "None".
* {{incode|dimension_multi_rebar_line_start_symbol}} is the dimension line start symbol, in case of multiple rebars are visible. It can be "FilledArrow", "Tick", "Dot" or "None".
* {{incode|dimension_multi_rebar_line_end_symbol}} is the dimension line end symbol, in case of multiple rebars are visible. It can be "FilledArrow", "Tick", "Dot" or "None".
* {{incode|dimension_line_mid_point_symbol}} is the dimension line midpoints symbol. It can be "Tick", "Dot" or "None".
* {{incode|dimension_left_offset}} specifies the left offset of the dimension from drawing.
* {{incode|dimension_right_offset}} specifies the right offset of the dimension from drawing.
* {{incode|dimension_top_offset}} specifies the top offset of the dimension from drawing.
* {{incode|dimension_bottom_offset}} specifies the bottom offset of the dimension from drawing.
* {{incode|dimension_left_offset_increment}} is the increment in the left offset to move each new dimension label away from drawing.
* {{incode|dimension_right_offset_increment}} is the increment in the right offset to move each new dimension label away from drawing.
* {{incode|dimension_top_offset_increment}} is the increment in the top offset to move each new dimension label away from drawing.
* {{incode|dimension_bottom_offset_increment}} is the increment in the bottom offset to move each new dimension label away from drawing.
* {{incode|dimension_single_rebar_outer_dim}} specifies if dimension lines are to be outside of reinforcement drawing, in case of single rebar is visible.
* {{incode|dimension_multi_rebar_outer_dim}} specifies if dimension lines are to be outside of reinforcement drawing, in case of multiple rebars are visible.
* {{incode|dimension_single_rebar_text_position_type}} specifies the dimension label position type, in case of single rebar is visible. It can be "StartOfLine", "MidOfLine" or "EndOfLine".
* {{incode|dimension_multi_rebar_text_position_type}} specifies the dimension label position type, in case of multiple rebars are visible. It can be "StartOfLine", "MidOfLine" or "EndOfLine".

<div class="mw-collapsible toccolours mw-collapsed">
===== Example =====
<div class="mw-collapsible-content">

{{Code|code=
from pathlib import Path
import FreeCAD, Draft, Arch
from ColumnReinforcement import TwoTiesSixRebars
from ReinforcementDrawing import make_reinforcement_drawing

Rect = Draft.makeRectangle(400, 400)
Structure1 = Arch.makeStructure(Rect, height=1600)
Structure1.ViewObject.Transparency = 80
Structure2 = Arch.makeStructure(Rect, height=1600)
Structure2.ViewObject.Transparency = 80
Structure2.Placement = FreeCAD.Placement(FreeCAD.Vector(1000, 0, 0), FreeCAD.Rotation(FreeCAD.Vector(0, 0, 1), 0))
FreeCAD.ActiveDocument.recompute()

# Create Straight Rebars
TwoTiesSixRebars.makeTwoTiesSixRebars(
    l_cover_of_ties=40,        
    r_cover_of_ties=40,
    t_cover_of_ties=40,
    b_cover_of_ties=40,
    offset_of_ties=100,
    bent_angle_of_ties=135,
    extension_factor_of_ties=2,
    dia_of_ties=8,
    number_spacing_check=True,
    number_spacing_value=10,
    dia_of_main_rebars=16,
    t_offset_of_rebars=40,
    b_offset_of_rebars=40,
    main_rebars_type="StraightRebar",
    hook_orientation="Top Inside",
    hook_extend_along="x-axis",
    l_rebar_rounding=None,
    hook_extension=None,
    ties_sequence=("Tie1", "Tie2"),
    structure=Structure1,
    facename="Face6",
)

# Create LShaped Rebars with hook along x-axis
TwoTiesSixRebars.makeTwoTiesSixRebars(
    l_cover_of_ties=40,
    r_cover_of_ties=40,
    t_cover_of_ties=40,
    b_cover_of_ties=40,
    offset_of_ties=100,
    bent_angle_of_ties=135,
    extension_factor_of_ties=2,
    dia_of_ties=8,
    number_spacing_check=True,
    number_spacing_value=10,
    dia_of_main_rebars=16,
    t_offset_of_rebars=-40,
    b_offset_of_rebars=-40,
    main_rebars_type="LShapeRebar",
    hook_orientation="Top Outside",
    hook_extend_along="x-axis",
    l_rebar_rounding=2,
    hook_extension=40,
    ties_sequence=("Tie1", "Tie2"),
    structure=Structure2,
    facename="Face6",
)

# Create Reinforcement Drawing and Dimensioning
for drawing_view in ("Front", "Rear", "Left", "Right", "Top", "Bottom"):
    struct_drawing_page_dict = make_reinforcement_drawing.makeStructuresReinforcementDrawing(
        structure_list=None,
        rebars_list=None,
        view="Front",
        rebars_stroke_width=0.35,
        rebars_color_style="Automatic",
        rebars_color=(0.67, 0.0, 0.0),
        structure_stroke_width=0.5,
        structure_color_style="Automatic",
        structure_color=(0.3, 0.9, 0.91),
        drawing_left_offset=20,
        drawing_top_offset=20,
        drawing_min_right_offset=20,
        drawing_min_bottom_offset=20,
        drawing_max_width=0,   # It is set to 0 to automatically set the default width based on other parameters
        drawing_max_height=0,  # It is set to 0 to automatically set the default height based on other parameters
        template_file=str(Path(make_reinforcement_drawing.__file__).parent.absolute() / "Templates" / "A4_Landscape_blank.svg"),
        perform_dimensioning=True,
        dimension_rebars_filter_list=None,
        dimension_label_format="%M %C⌀%D,span=%S",
        dimension_font_family="DejaVu Sans",
        dimension_font_size=3,
        dimension_stroke_width=0.25,
        dimension_line_style="Continuous",
        dimension_line_color=(0.0, 0.0, 0.50),
        dimension_text_color=(0.0, 0.33, 0.0),
        dimension_single_rebar_line_start_symbol="None",
        dimension_single_rebar_line_end_symbol="FilledArrow",
        dimension_multi_rebar_line_start_symbol="FilledArrow",
        dimension_multi_rebar_line_end_symbol="FilledArrow",
        dimension_line_mid_point_symbol="Dot",
        dimension_left_offset=10,
        dimension_right_offset=10,
        dimension_top_offset=10,
        dimension_bottom_offset=10,
        dimension_left_offset_increment=6,
        dimension_right_offset_increment=6,
        dimension_top_offset_increment=6,
        dimension_bottom_offset_increment=6,
        dimension_single_rebar_outer_dim=False,
        dimension_multi_rebar_outer_dim=True,
        dimension_single_rebar_text_position_type="StartOfLine",
        dimension_multi_rebar_text_position_type="MidOfLine",
    )
    for drawing_page in struct_drawing_page_dict.values():
        drawing_view = drawing_page.Views[0]
        drawing_view.setExpression(
            "LeftOffset",
            u".Template.Width.Value / 2 - .Width.Value * .Scale / 2",
        )
        drawing_view.setExpression(
            "TopOffset",
            u".Template.Height.Value / 2 - .Height.Value * .Scale / 2",
        )
        drawing_view.recompute(True)
        drawing_page.recompute(True)
}}

</div>
</div>

<span id="Reinforcement_Drawing"></span>
<div class="mw-translate-fuzzy">
= [[Image:Arch_Rebar_Drawing.svg|32px]] Disegno dell'armatura =
</div>

==Usage==

1. Open FreeCAD Model containing reinforcement bars created using [[Reinforcement_Workbench|Reinforcement Workbench]].

2. In FreeCAD Python console, copy the below code snippet to generate reinforcement drawing from different views for each [[Arch Structure|Arch Structure]] element.
{{Code|code=
from ReinforcementDrawing.make_reinforcement_drawing import (
    makeStructuresReinforcementDrawing,
)

for view in ("Front", "Rear", "Left", "Right", "Top", "Bottom"):
    makeStructuresReinforcementDrawing(view=view)
}}

==ReinforcementDrawingView Object==

A Rebars Drawing SVG View object.

===Properties===

* {{PropertyData|Structure}}: The structure object acting as a Host for rebars to be included in the drawing.
* {{PropertyData|Rebars}}: The list of rebar objects to be included in the drawing.
* {{PropertyData|View}}: The reinforcement drawing view to be generated. It can be "Front", "Rear", "Left", "Right", "Top" or "Bottom".
* {{PropertyData|PositionType}}: The position type of Reinforcement Drawing on Template. It can be "Automatic" to calculate drawing placement using {{PropertyData|LeftOffset}}, {{PropertyData|TopOffset}}, {{PropertyData|MinRightOffset}} and {{PropertyData|MinBottomOffset}} OR "Custom" to set placement using {{PropertyData|X}} and {{PropertyData|Y}}.
* {{PropertyData|RebarsStrokeWidth}}: The stroke width of rebars in Reinforcement Drawing SVG.
* {{PropertyData|RebarsColorStyle}}: The color style of rebars in Reinforcement Drawing SVG. Set it to "Automatic" to automatically select rebars color OR "Custom" to choose shape color value from {{PropertyData|RebarsColor}}.
* {{PropertyData|RebarsColor}}: The color of rebars in Reinforcement Drawing SVG.
* {{PropertyData|StructureStrokeWidth}}: The stroke width of the structure in Reinforcement Drawing SVG.
* {{PropertyData|StructureColorStyle}}: The color style of structure in Reinforcement Drawing SVG. Set it to "Automatic" to automatically select rebars color, "Custom" to choose shape color value from {{PropertyData|StructureColor}} OR "None" to not fill structure.
* {{PropertyData|StructureColor}}: The color of structure in Reinforcement Drawing SVG.
* {{PropertyData|Template}}: The template for the Reinforcement Drawing view.
* {{PropertyData|Width}}: The width of the Reinforcement Drawing view SVG.
* {{PropertyData|Height}}: The height of Reinforcement Drawing view SVG.
* {{PropertyData|LeftOffset}}: The left offset of Reinforcement Drawing view on a template.
* {{PropertyData|TopOffset}}: The top offset of Reinforcement Drawing view on a template.
* {{PropertyData|MinRightOffset}}: The minimum right offset of Reinforcement Drawing view on a template.
* {{PropertyData|MinBottomOffset}}: The minimum bottom offset of Reinforcement Drawing view on a template.
* {{PropertyData|MaxWidth}}: The maximum width of the Reinforcement Drawing view.
* {{PropertyData|MaxHeight}}: The maximum height of the Reinforcement Drawing view.
* {{PropertyData|VisibleRebars}}: The list of visible rebar objects in the drawing view.
* {{PropertyData|DimensionLeftOffset}}: The left offset for each new ReinforcementDimensioning object.
* {{PropertyData|DimensionRightOffset}}: The right offset for each new ReinforcementDimensioning object.
* {{PropertyData|DimensionTopOffset}}: The top offset for each new ReinforcementDimensioning object.
* {{PropertyData|DimensionBottomOffset}}: The bottom offset for each new ReinforcementDimensioning object.

==Scripting==

See also: [[Arch API|Arch API]], [[Reinforcement API|Reinforcement API]] and [[FreeCAD Scripting Basics|FreeCAD Scripting Basics]].

The Reinforcement Drawing functions can be used in [[macros|macros]] and from the [[Python|Python]] console by using the following functions:

=== Create Reinforcement Drawing View ===

==== For one structure ====

{{Code|code=
from ReinforcementDrawing.make_reinforcement_drawing import (
    makeReinforcementDrawing,
)

reinforcement_drawing_page = makeReinforcementDrawing(
    structure,
    rebars_list,
    view,
    rebars_stroke_width,
    rebars_color_style,
    rebars_color,
    structure_stroke_width,
    structure_color_style,
    structure_color,
    drawing_left_offset,
    drawing_top_offset,
    drawing_min_right_offset,
    drawing_min_bottom_offset,
    drawing_max_width,
    drawing_max_height,
    template_file,
    dimension_left_offset,
    dimension_right_offset,
    dimension_top_offset,
    dimension_bottom_offset,
)
}}

* Creates a {{incode|ReinforcementDrawingView}} object for the given [[Arch Structure|structure]] and [[Arch Rebar|rebar]] objects list.
* It returns the {{incode|reinforcement_drawing_page}} of type {{incode|TechDraw::DrawPage}}.
* {{incode|view}} specifies the view of drawing to be generated. It can be "Front", "Rear", "Left", "Right", "Top" or "Bottom".
* {{incode|rebars_stroke_width}} specifies the stroke-width of rebars in drawing SVG.
* {{incode|rebars_color_style}} specifies the color style of rebars. Set it to "Automatic" to automatically select rebars color or "Custom" to choose shape color value from variable {{incode|rebars_color}}.
* {{incode|rebars_color}} specifies the fill color for rebars in drawing SVG.
    Format: (r, g, b)
    r, g, b value should be between 0 to 1, so you may need to divide the value of r, g, b by 255 to get its value between 0 to 1
    Make sure r, g, b must be float
    Example: (0.67, 0.0, 0.0)
* {{incode|structure_stroke_width}} specifies the stroke-width of structure in drawing SVG.
* {{incode|structure_color_style}} specifies the fill style of the structure. Set it to "Automatic" to automatically select structure color or "Custom" to choose structure color value from variable {{incode|structure_color}}.
* {{incode|structure_color}} specifies the fill color for structure in drawing SVG. Format: (r, g, b)
* {{incode|drawing_left_offset}} specifies the left offset of the drawing view on {{incode|template_file}}.
* {{incode|drawing_top_offset}} specifies the top offset of the drawing view on {{incode|template_file}}.
* {{incode|drawing_min_right_offset}} specifies the minimum right offset of the drawing view on {{incode|template_file}}.
* {{incode|drawing_min_bottom_offset}} specifies the minimum bottom offset of the drawing view on {{incode|template_file}}.
* {{incode|drawing_max_width}} specifies the maximum width of drawing on {{incode|template_file}}.
* {{incode|drawing_max_height}} specifies the maximum height of drawing on {{incode|template_file}}.
* {{incode|template_file}} is the template file to be used for the reinforcement drawing page.
* {{incode|dimension_left_offset}} specifies the left offset of the dimension from drawing.
* {{incode|dimension_right_offset}} specifies the right offset of the dimension from drawing.
* {{incode|dimension_top_offset}} specifies the top offset of the dimension from drawing.
* {{incode|dimension_bottom_offset}} specifies the bottom offset of the dimension from drawing.

<div class="mw-collapsible toccolours mw-collapsed">
===== Example =====
<div class="mw-collapsible-content">

{{Code|code=
from pathlib import Path
import FreeCAD, Draft, Arch
from ColumnReinforcement import TwoTiesSixRebars
from ReinforcementDrawing import make_reinforcement_drawing

Rect = Draft.makeRectangle(400, 400)
Structure = Arch.makeStructure(Rect, height=1600)
Structure.ViewObject.Transparency = 80
FreeCAD.ActiveDocument.recompute()

# Create Straight Rebars
RebarGroup = TwoTiesSixRebars.makeTwoTiesSixRebars(
    l_cover_of_ties=40,        
    r_cover_of_ties=40,
    t_cover_of_ties=40,
    b_cover_of_ties=40,
    offset_of_ties=100,
    bent_angle_of_ties=135,
    extension_factor_of_ties=2,
    dia_of_ties=8,
    number_spacing_check=True,
    number_spacing_value=10,
    dia_of_main_rebars=16,
    t_offset_of_rebars=40,
    b_offset_of_rebars=40,
    main_rebars_type="StraightRebar",
    hook_orientation="Top Inside",
    hook_extend_along="x-axis",
    l_rebar_rounding=None,
    hook_extension=None,
    ties_sequence=("Tie1", "Tie2"),
    structure=Structure,
    facename="Face6",
)

rebars = Draft.get_objects_of_type(FreeCAD.ActiveDocument.Objects, "Rebar")

# Create Reinforcement Drawing
for drawing_view in ("Front", "Rear", "Left", "Right", "Top", "Bottom"):
    make_reinforcement_drawing.makeReinforcementDrawing(
        structure=Structure,
        rebars_list=rebars,
        view=drawing_view,
        rebars_stroke_width=0.35,
        rebars_color_style="Automatic",
        rebars_color=(0.67, 0.0, 0.0),
        structure_stroke_width=0.5,
        structure_color_style="Automatic",
        structure_color=(0.3, 0.9, 0.91),
        drawing_left_offset=20,
        drawing_top_offset=20,
        drawing_min_right_offset=20,
        drawing_min_bottom_offset=20,
        drawing_max_width=0,   # It is set to 0 to automatically set the default width based on other parameters
        drawing_max_height=0,  # It is set to 0 to automatically set the default height based on other parameters
        template_file=str(Path(make_reinforcement_drawing.__file__).parent.absolute() / "Templates" / "A4_Landscape_blank.svg"),
        dimension_left_offset=10,
        dimension_right_offset=10,
        dimension_top_offset=10,
        dimension_bottom_offset=10,
    )
}}

</div>
</div>

==== For multiple structures ====
{{Code|code=
from ReinforcementDrawing.make_reinforcement_drawing import (
    makeStructuresReinforcementDrawing,
)

structure_drawing_page_dict = makeStructuresReinforcementDrawing(
    structure_list=None,
    rebars_list=None,
    view="Front",
    rebars_stroke_width=REBARS_STROKE_WIDTH,
    rebars_color_style=REBARS_COLOR_STYLE,
    rebars_color=REBARS_COLOR,
    structure_stroke_width=STRUCTURE_STROKE_WIDTH,
    structure_color_style=STRUCTURE_COLOR_STYLE,
    structure_color=STRUCTURE_COLOR,
    drawing_left_offset=DRAWING_LEFT_OFFSET,
    drawing_top_offset=DRAWING_TOP_OFFSET,
    drawing_min_right_offset=DRAWING_MIN_RIGHT_OFFSET,
    drawing_min_bottom_offset=DRAWING_MIN_BOTTOM_OFFSET,
    drawing_max_width=DRAWING_MAX_WIDTH,
    drawing_max_height=DRAWING_MAX_HEIGHT,
    template_file=TEMPLATE_FILE,
)
}}

* It returns {{incode|structure_drawing_page_dict}}, a dictionary with structure as key and corresponding reinforcement drawing page as the value.
* {{incode|structure_list}} is the list of structural objects to generate their reinforcement drawing. If not provided, structures will be selected from the active document acting as Host for rebar objects.
* {{incode|rebars_list}} is the list of rebar objects to be included in the drawing. If not provided, rebars objects having Host in structure_list will be selected from the active document.

<div class="mw-collapsible toccolours mw-collapsed">
===== Example =====
<div class="mw-collapsible-content">

{{Code|code=
from pathlib import Path
import FreeCAD, Draft, Arch
from ColumnReinforcement import TwoTiesSixRebars
from ReinforcementDrawing import make_reinforcement_drawing

Rect = Draft.makeRectangle(400, 400)
Structure1 = Arch.makeStructure(Rect, height=1600)
Structure1.ViewObject.Transparency = 80
Structure2 = Arch.makeStructure(Rect, height=1600)
Structure2.ViewObject.Transparency = 80
Structure2.Placement = FreeCAD.Placement(FreeCAD.Vector(1000, 0, 0), FreeCAD.Rotation(FreeCAD.Vector(0, 0, 1), 0))
FreeCAD.ActiveDocument.recompute()

# Create Straight Rebars
TwoTiesSixRebars.makeTwoTiesSixRebars(
    l_cover_of_ties=40,        
    r_cover_of_ties=40,
    t_cover_of_ties=40,
    b_cover_of_ties=40,
    offset_of_ties=100,
    bent_angle_of_ties=135,
    extension_factor_of_ties=2,
    dia_of_ties=8,
    number_spacing_check=True,
    number_spacing_value=10,
    dia_of_main_rebars=16,
    t_offset_of_rebars=40,
    b_offset_of_rebars=40,
    main_rebars_type="StraightRebar",
    hook_orientation="Top Inside",
    hook_extend_along="x-axis",
    l_rebar_rounding=None,
    hook_extension=None,
    ties_sequence=("Tie1", "Tie2"),
    structure=Structure1,
    facename="Face6",
)

# Create LShaped Rebars with hook along x-axis
TwoTiesSixRebars.makeTwoTiesSixRebars(
    l_cover_of_ties=40,
    r_cover_of_ties=40,
    t_cover_of_ties=40,
    b_cover_of_ties=40,
    offset_of_ties=100,
    bent_angle_of_ties=135,
    extension_factor_of_ties=2,
    dia_of_ties=8,
    number_spacing_check=True,
    number_spacing_value=10,
    dia_of_main_rebars=16,
    t_offset_of_rebars=-40,
    b_offset_of_rebars=-40,
    main_rebars_type="LShapeRebar",
    hook_orientation="Top Outside",
    hook_extend_along="x-axis",
    l_rebar_rounding=2,
    hook_extension=40,
    ties_sequence=("Tie1", "Tie2"),
    structure=Structure2,
    facename="Face6",
)

# Create Reinforcement Drawing
for drawing_view in ("Front", "Rear", "Left", "Right", "Top", "Bottom"):
    make_reinforcement_drawing.makeStructuresReinforcementDrawing(
        structure_list=None,
        rebars_list=None,
        view=drawing_view,
        rebars_stroke_width=0.35,
        rebars_color_style="Automatic",
        rebars_color=(0.67, 0.0, 0.0),
        structure_stroke_width=0.5,
        structure_color_style="Automatic",
        structure_color=(0.3, 0.9, 0.91),
        drawing_left_offset=20,
        drawing_top_offset=20,
        drawing_min_right_offset=20,
        drawing_min_bottom_offset=20,
        drawing_max_width=0,   # It is set to 0 to automatically set the default width based on other parameters
        drawing_max_height=0,  # It is set to 0 to automatically set the default height based on other parameters
        template_file=str(Path(make_reinforcement_drawing.__file__).parent.absolute() / "Templates" / "A4_Landscape_blank.svg"),
        dimension_left_offset=10,
        dimension_right_offset=10,
        dimension_top_offset=10,
        dimension_bottom_offset=10,
    )
}}

</div>
</div>


<span id="Reinforcement_Dimensioning"></span>
<div class="mw-translate-fuzzy">
= [[Image:Arch_Rebar_Dimensioning.svg|32px]] Quotare l'armatura =
</div>

==Usage==

1. Open FreeCAD Model containing reinforcement bars created using [[Reinforcement_Workbench|Reinforcement Workbench]].

2. In FreeCAD Python console, copy the below code snippet to generate reinforcement drawing and dimensioning from different views for each [[Arch Structure|Arch Structure]] element.

{{Code|code=
from ReinforcementDrawing.make_reinforcement_drawing import (
    makeStructuresReinforcementDrawing,
)

for view in ("Front", "Rear", "Left", "Right", "Top", "Bottom"):
    struct_drawing_page_dict = makeStructuresReinforcementDrawing(
        view=view, perform_dimensioning=True
    )
    for drawing_page in struct_drawing_page_dict.values():
        drawing_view = drawing_page.Views[0]
        drawing_view.setExpression(
            "LeftOffset",
            u".Template.Width.Value / 2 - .Width.Value * .Scale / 2",
        )
        drawing_view.setExpression(
            "TopOffset",
            u".Template.Height.Value / 2 - .Height.Value * .Scale / 2",
        )
        drawing_view.recompute(True)
        drawing_page.recompute(True)
}}

==ReinforcementDimensioning Object==

A Rebar Dimensioning SVG View object.

===Properties===

* {{PropertyData|ParentDrawingView}}: The parent ReinforcementDrawingView object containing the drawing of [[Arch Rebar|Rebar]] object.
* {{PropertyData|Rebar}}: The [[Arch Rebar|Rebar]] object to perform dimensioning.
* {{PropertyData|WayPointsType}}: The WayPoints type of dimension line. It can be "Automatic" (to automatically perform dimensioning of [[Arch Rebar|Rebar]] object) or "Custom" to use {{PropertyData|WayPoints}} to perform dimensioning.
* {{PropertyData|WayPoints}}: A list of vector points to be used to generate a dimension line.
* {{PropertyData|TextPositionType}}: The position type of dimension text. It can be "StartOfLine", "MidOfLine" or "EndOfLine".
* {{PropertyData|DimensionFormat}}: The dimension label format.
    Example: "%M %C⌀%D,span=%S"
    Here: %M -> Rebar.Mark
          %C -> Rebar.Amount
          %D -> Rebar.Diameter
          %S -> Rebar span length
* {{PropertyData|Font}}: The font family of dimension label.
* {{PropertyData|FontSize}}: The font size of the dimension label.
* {{PropertyData|StrokeWidth}}: The stroke width of the dimension line.
* {{PropertyData|LineStyle}}: The stroke style of the dimension line. It can be "Continuous", "Dash", "Dot", "DashDot" or "DashDotDot".
* {{PropertyData|LineColor}}: The color of the dimension line.
* {{PropertyData|TextColor}}: The color of the dimension label.
* {{PropertyData|LineStartSymbol}}: The start symbol of the dimension line. It can be "FilledArrow", "Tick", "Dot" or "None".
* {{PropertyData|LineEndSymbol}}: The end symbol of the dimension line. It can be "FilledArrow", "Tick", "Dot" or "None".
* {{PropertyData|LineMidPointSymbol}}: The midpoints symbol of the dimension line. It can be "Tick", "Dot" or "None".
* {{PropertyData|DimensionLeftOffset}}: The left offset for automated reinforcement dimensioning.
* {{PropertyData|DimensionRightOffset}}: The right offset for automated reinforcement dimensioning.
* {{PropertyData|DimensionTopOffset}}: The top offset for automated reinforcement dimensioning.
* {{PropertyData|DimensionBottomOffset}}: The bottom offset for automated reinforcement dimensioning.
* {{PropertyData|SingleRebar_LineStartSymbol}}: The dimension line start symbol, in case of single rebar is visible. It can be "FilledArrow", "Tick", "Dot" or "None". It is used only when {{PropertyData|WayPointsType}} is set to "Automatic".
* {{PropertyData|SingleRebar_LineEndSymbol}}: The dimension line end symbol, in case of single rebar is visible. It can be "FilledArrow", "Tick", "Dot" or "None". It is used only when {{PropertyData|WayPointsType}} is set to "Automatic".
* {{PropertyData|MultiRebar_LineStartSymbol}}: The dimension line start symbol, in case of multiple rebars are visible. It can be "FilledArrow", "Tick", "Dot" or "None". It is used only when {{PropertyData|WayPointsType}} is set to "Automatic".
* {{PropertyData|MultiRebar_LineEndSymbol}}: The dimension line end symbol, in case of multiple rebars are visible. It can be "FilledArrow", "Tick", "Dot" or "None". It is used only when {{PropertyData|WayPointsType}} is set to "Automatic".
* {{PropertyData|SingleRebar_OuterDimension}}: It specifies if dimension lines are to be outside of reinforcement drawing, in case of single rebar is visible. It is used only when {{PropertyData|WayPointsType}} is set to "Automatic".
* {{PropertyData|MultiRebar_OuterDimension}}: It specifies if dimension lines are to be outside of reinforcement drawing, in case of multiple rebars are visible. It is used only when {{PropertyData|WayPointsType}} is set to "Automatic".
* {{PropertyData|SingleRebar_TextPositionType}}: It specifies the dimension label position type, in case of single rebar is visible. It can be "StartOfLine", "MidOfLine" or "EndOfLine". It is used only when {{PropertyData|WayPointsType}} is set to "Automatic".
* {{PropertyData|MultiRebar_TextPositionType}}: It specifies the dimension label position type, in case of multiple rebars are visible. It can be "StartOfLine", "MidOfLine" or "EndOfLine". It is used only when {{PropertyData|WayPointsType}} is set to "Automatic".

==Scripting==

See also: [[Arch API|Arch API]], [[Reinforcement API|Reinforcement API]] and [[FreeCAD Scripting Basics|FreeCAD Scripting Basics]].

The Reinforcement Dimensioning functions can be used in [[macros|macros]] and from the [[Python|Python]] console by using the following functions:

=== Create Reinforcement Dimensioning Object ===

{{Code|code=
from ReinforcementDrawing.ReinforcementDimensioning import (
    makeReinforcementDimensioningObject,
)

dimension_object = makeReinforcementDimensioningObject(
    rebar,
    parent_drawing_view,
    drawing_page=None,
    dimension_label_format="%M %C⌀%D,span=%S",
    dimension_font_family="DejaVu Sans",
    dimension_font_size=3,
    dimension_stroke_width=0.25,
    dimension_line_style="Continuous",
    dimension_line_color=(0.0, 0.0, 0.50),
    dimension_text_color=(0.0, 0.33, 0.0),
    dimension_single_rebar_line_start_symbol="None",
    dimension_single_rebar_line_end_symbol="FilledArrow",
    dimension_multi_rebar_line_start_symbol="FilledArrow",
    dimension_multi_rebar_line_end_symbol="FilledArrow",
    dimension_line_mid_point_symbol="Dot",
    dimension_left_offset_increment=10,
    dimension_right_offset_increment=10,
    dimension_top_offset_increment=10,
    dimension_bottom_offset_increment=10,
    dimension_single_rebar_outer_dim=False,
    dimension_multi_rebar_outer_dim=True,
    dimension_single_rebar_text_position_type="StartOfLine",
    dimension_multi_rebar_text_position_type="MidOfLine",
)
}}

* Creates and returns a {{incode|ReinforcementDimensioning}} object for the given {{incode|rebar}} object.
* {{incode|parent_drawing_view}} is the {{incode|ReinforcementDrawingView}} object containing a drawing of {{incode|rebar}} object.
* {{incode|drawing_page}} is the object of type TechDraw::DrawPage used to show {{incode|parent_drawing_view}}.
* {{incode|dimension_label_format}} is the format used for the dimension label.
    Example: "%M %C⌀%D,span=%S"
    Here: %M -> Rebar.Mark
          %C -> Rebar.Amount
          %D -> Rebar.Diameter
          %S -> Rebar span length
* {{incode|dimension_font_family}} is the font family of dimension label.
* {{incode|dimension_font_size}} is the font size of the dimension label.
* {{incode|dimension_stroke_width}} is the stroke-width of dimension line.
* {{incode|dimension_line_style}} is the stroke style of dimension line. It can be "Continuous", "Dash", "Dot", "DashDot" or "DashDotDot".
* {{incode|dimension_line_color}} is the color of the dimension line.
    Format: (r, g, b)
    r, g, b value should be between 0 to 1, so you may need to divide the value of r, g, b by 255 to get its value between 0 to 1
    Make sure r, g, b must be float
* {{incode|dimension_text_color}} is the color of the dimension label.
* {{incode|dimension_single_rebar_line_start_symbol}} is the dimension line start symbol, in case of single rebar is visible. It can be "FilledArrow", "Tick", "Dot" or "None".
* {{incode|dimension_single_rebar_line_end_symbol}} is the dimension line end symbol, in case of single rebar is visible. It can be "FilledArrow", "Tick", "Dot" or "None".
* {{incode|dimension_multi_rebar_line_start_symbol}} is the dimension line start symbol, in case of multiple rebars are visible. It can be "FilledArrow", "Tick", "Dot" or "None".
* {{incode|dimension_multi_rebar_line_end_symbol}} is the dimension line end symbol, in case of multiple rebars are visible. It can be "FilledArrow", "Tick", "Dot" or "None".
* {{incode|dimension_line_mid_point_symbol}} is the dimension line midpoints symbol. It can be "Tick", "Dot" or "None".
* {{incode|dimension_left_offset_increment}} is the increment in the left offset to move each new dimension label away from drawing.
* {{incode|dimension_right_offset_increment}} is the increment in the right offset to move each new dimension label away from drawing.
* {{incode|dimension_top_offset_increment}} is the increment in the top offset to move each new dimension label away from drawing.
* {{incode|dimension_bottom_offset_increment}} is the increment in the bottom offset to move each new dimension label away from drawing.
* {{incode|dimension_single_rebar_outer_dim}} specifies if dimension lines are to be outside of reinforcement drawing, in case of single rebar is visible.
* {{incode|dimension_multi_rebar_outer_dim}} specifies if dimension lines are to be outside of reinforcement drawing, in case of multiple rebars are visible.
* {{incode|dimension_single_rebar_text_position_type}} specifies the dimension label position type, in case of single rebar is visible. It can be "StartOfLine", "MidOfLine" or "EndOfLine".
* {{incode|dimension_multi_rebar_text_position_type}} specifies the dimension label position type, in case of multiple rebars are visible. It can be "StartOfLine", "MidOfLine" or "EndOfLine".

<div class="mw-collapsible toccolours mw-collapsed">
===== Example =====
<div class="mw-collapsible-content">

{{Code|code=
from pathlib import Path
import FreeCAD, Draft, Arch
from ColumnReinforcement import TwoTiesSixRebars
from ReinforcementDrawing import make_reinforcement_drawing
from ReinforcementDrawing.ReinforcementDimensioning import (
    makeReinforcementDimensioningObject,
)

Rect = Draft.makeRectangle(400, 400)
Structure = Arch.makeStructure(Rect, height=1600)
Structure.ViewObject.Transparency = 80
FreeCAD.ActiveDocument.recompute()

# Create Straight Rebars
TwoTiesSixRebars.makeTwoTiesSixRebars(
    l_cover_of_ties=40,        
    r_cover_of_ties=40,
    t_cover_of_ties=40,
    b_cover_of_ties=40,
    offset_of_ties=100,
    bent_angle_of_ties=135,
    extension_factor_of_ties=2,
    dia_of_ties=8,
    number_spacing_check=True,
    number_spacing_value=10,
    dia_of_main_rebars=16,
    t_offset_of_rebars=40,
    b_offset_of_rebars=40,
    main_rebars_type="StraightRebar",
    hook_orientation="Top Inside",
    hook_extend_along="x-axis",
    l_rebar_rounding=None,
    hook_extension=None,
    ties_sequence=("Tie1", "Tie2"),
    structure=Structure,
    facename="Face6",
)

rebars = Draft.get_objects_of_type(FreeCAD.ActiveDocument.Objects, "Rebar")

# Create Reinforcement Drawing
drawing_page = make_reinforcement_drawing.makeReinforcementDrawing(
    structure=Structure,
    rebars_list=rebars,
    view="Front",
    rebars_stroke_width=0.35,
    rebars_color_style="Automatic",
    rebars_color=(0.67, 0.0, 0.0),
    structure_stroke_width=0.5,
    structure_color_style="Automatic",
    structure_color=(0.3, 0.9, 0.91),
    drawing_left_offset=20,
    drawing_top_offset=20,
    drawing_min_right_offset=20,
    drawing_min_bottom_offset=20,
    drawing_max_width=0,                    # It is set to 0 to automatically set the default width based on other parameters
    drawing_max_height=0,                   # It is set to 0 to automatically set the default height based on other parameters
    template_file=str(Path(make_reinforcement_drawing.__file__).parent.absolute() / "Templates" / "A4_Landscape_blank.svg"),
    dimension_left_offset=10,
    dimension_right_offset=10,
    dimension_top_offset=10,
    dimension_bottom_offset=10,
)

visible_rebars = drawing_page.Views[0].VisibleRebars

# Create Reinforcement Dimensioning for single rebar
makeReinforcementDimensioningObject(
    visible_rebars[0],
    parent_drawing_view,
    drawing_page=None,
    dimension_label_format="%M %C⌀%D,span=%S",
    dimension_font_family="DejaVu Sans",
    dimension_font_size=3,
    dimension_stroke_width=0.25,
    dimension_line_style="Continuous",
    dimension_line_color=(0.0, 0.0, 0.50),
    dimension_text_color=(0.0, 0.33, 0.0),
    dimension_single_rebar_line_start_symbol="None",
    dimension_single_rebar_line_end_symbol="FilledArrow",
    dimension_multi_rebar_line_start_symbol="FilledArrow",
    dimension_multi_rebar_line_end_symbol="FilledArrow",
    dimension_line_mid_point_symbol="Dot",
    dimension_left_offset_increment=10,
    dimension_right_offset_increment=10,
    dimension_top_offset_increment=10,
    dimension_bottom_offset_increment=10,
    dimension_single_rebar_outer_dim=False,
    dimension_multi_rebar_outer_dim=True,
    dimension_single_rebar_text_position_type="StartOfLine",
    dimension_multi_rebar_text_position_type="MidOfLine",
)

# Create Reinforcement Dimensioning for all visible rebars in drawing view
for visible_rebar in visible_rebars:
    makeReinforcementDimensioningObject(
        visible_rebar,
        parent_drawing_view,
        drawing_page=None,
        dimension_label_format="%M %C⌀%D,span=%S",
        dimension_font_family="DejaVu Sans",
        dimension_font_size=3,
        dimension_stroke_width=0.25,
        dimension_line_style="Continuous",
        dimension_line_color=(0.0, 0.0, 0.50),
        dimension_text_color=(0.0, 0.33, 0.0),
        dimension_single_rebar_line_start_symbol="None",
        dimension_single_rebar_line_end_symbol="FilledArrow",
        dimension_multi_rebar_line_start_symbol="FilledArrow",
        dimension_multi_rebar_line_end_symbol="FilledArrow",
        dimension_line_mid_point_symbol="Dot",
        dimension_left_offset_increment=10,
        dimension_right_offset_increment=10,
        dimension_top_offset_increment=10,
        dimension_bottom_offset_increment=10,
        dimension_single_rebar_outer_dim=False,
        dimension_multi_rebar_outer_dim=True,
        dimension_single_rebar_text_position_type="StartOfLine",
        dimension_multi_rebar_text_position_type="MidOfLine",
    )
}}
</div>
</div>


<div class="mw-translate-fuzzy">
{{Docnav/it
|[[Reinforcement Bar Bending Schedule/it|Distinta e sagomatura dei ferri]]
|[[Arch_Floor/it|Piano]]
|[[Reinforcement_Workbench/it|Reinforcement]]
|IconL=Reinforcement_Bar_Bending_Schedule.svg
|IconC=Reinforcement_Workbench.svg
|IconR=Arch_Floor.svg
}}
</div>

[[Category:External_Command_Reference{{#translation:}}]]
[[Category:Reinforcement{{#translation:}}]]