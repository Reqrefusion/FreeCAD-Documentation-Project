<languages/>
{{TOCright}}

Questa pagina descrive come utilizzare le B-spline in FreeCAD. Fornisce anche informazioni di base su cosa sono le B-spline e per quali applicazioni sono utili.

<span id="Motivation"></span>
==Motivazione==

Se si conoscono già le B-spline e la loro applicazione, è possibile continuare direttamente con la sezione [[#B-splines_in_FreeCAD/it|B-spline in FreeCAD]].

Supponiamo che si voglia progettare una parte che dovrebbe essere prodotta con una stampante 3D. La parte deve avere un bordo fatto in questo modo:

[[File:B-splines Motivation-start.png|450px]]

È necessario stampare il pezzo nella direzione dal basso verso l'alto dello schizzo. Le strutture di supporto esterne potrebbero non essere un'opzione. Pertanto, è necessario aggiungere un supporto direttamente al pezzo. Quali opzioni si hanno?

* Opzione 1: si potrebbe aggiungere una linea dal punto (20, 0) al punto (80, 40):

[[File:B-splines Motivation-line.png|450px]]

Questa soluzione, però, necessita di molto volume, quindi peso e materiale.

* Opzione 2: si potrebbe collegare i due punti con un arco di cerchio. Per risparmiare volume, l'arco dovrebbe terminare tangenzialmente nel punto (80,40). La soluzione sarebbe quindi questa:

[[File:B-splines Motivation-circle.png|450px]]

Va bene. Ma sul fondo non si ha bisogno di supporto immediato.

* Opzione 3: si potrebbe risparmiare ulteriore volume se la connessione tra i 2 punti fosse una curva che inizia tangenzialmente in (0, 20) e termina tangenzialmente in (80, 40):

[[File:B-splines Motivation-bezier.png|450px]]

Quindi una curva che consenta di collegare due punti tangenzialmente a un punto di riferimento può essere molto utile per le costruzioni. Le curve di Bézier offrono questa funzionalità.

<span id="Bézier_curves"></span>
=== Curve di Bézier ===

<span id="Derivation"></span>
=== Derivazione ===

Le curve di Bézier sono polinomi che descrivono la connessione tra due punti. Il polinomio più semplice che collega due punti è una retta (<math>A*x^1+B</math>), quindi le curve di Bézier lineari sono anche segmenti di retta:

[[File:Bezier_linear_anim.gif]]
{{Caption|Animazione 1: Curva lineare di Bézier.}}

Tuttavia, un polinomio diventa utile quando possiamo controllarlo. Quindi dovrebbe esserci un punto tra i due estremi che ci permetta di definire come sono collegati. Come nell'esempio precedente, opzione 3, la curva è utile quando inizia e finisce tangente alle linee che attraversano gli estremi. Questa è una caratteristica principale delle curve di Bézier. Aggiungiamo quindi un punto di controllo tra i due estremi. La curva inizierà tangente a questo punto di controllo, il che significa che è tangente alla linea che possiamo tracciare tra il punto iniziale e il punto di controllo. Andando all'indietro dall'estremo, la curva sarà anche tangente alla linea che possiamo tracciare tra il punto di controllo e il punto finale. L'animazione 2 mostra l'aspetto di una curva di questo tipo.

[[File:Bezier_quadratic_anim.gif]]
{{Caption|Animazione 2: Curva di Bézier quadratica. P1 è quindi il punto di controllo.}}

L'animazione chiarisce in cosa consiste fondamentalmente la curva: una transizione da P0 a P2 mediante la rotazione della linea P0-P1 nella linea P1-P2. Otteniamo quindi la gradevole caratteristica di inizio/fine tangenziale.

Una curva di questo tipo può essere descritta solo da un polinomio quadratico. (Il numero di curve sinistre/destre + 1 è l'ordine polinomiale necessario. Un polinomio quadratico è una singola curva, un polinomio cubico ha due curve e così via.) Pertanto, una curva di Bézier con un punto di controllo è una curva di Bézier quadratica (del secondo ordine).

Avere un solo punto di controllo spesso non è sufficiente. Si prenda l'esempio motivazionale di cui sopra. Nell'opzione 3 si termina la curva tangenzialmente in direzione x. Ma come si possono collegare i punti (20, 0) e (80, 40) in modo che la curva termini tangenzialmente in direzione y? Per ottenere questo risultato è necessaria prima una curva a destra e poi una a sinistra, quindi un polinomio cubico (del terzo ordine). E questo significa che per una curva di Bézier c'è bisogno (o potremmo dire che otteniamo) un secondo punto di controllo. L'animazione 3 mostra una curva di Bézier cubica.

[[File:Bezier_cubic_anim.gif]]
{{Caption|Animazione 3: Curva cubica di Bézier.}}

Per rispondere alla domanda, la soluzione finale con la direzione tangente a y nell'esempio è questa:

[[File:B-splines Motivation-cubic-bezier.png|450px]]

<span id="Rules"></span>
=== Regole ===

Nella derivazione potresti già aver notato alcune "regole" per le curve di Bézier:
* Il grado del polinomio è anche il grado delle curve.
* Se si ha bisogno di <math>n</math> curve, si ha bisogno di una curva di Bézier di almeno <math>n+1</math>° grado.
* Una curva di Bézier inizia sempre tangente alla linea tra il punto iniziale e il primo punto di controllo (e termina tangente alla linea tra l'ultimo punto di controllo e il punto finale).

<span id="Math"></span>
=== Matematica ===

Se si è interessati a comprendere la matematica di base, ecco le basi.

Una curva di Bézier si calcola utilizzando questa formula:

<math>\quad
\textrm{Bezier}(n,t)=\sum_{i=0}^{n}\underbrace{\binom{n}{i}}_{\text{polynomial term}}\underbrace{\left(1-t\right)^{n-i}t^{i}}_{\text{polynomial term}}\; \underbrace{P_{i}}_{\text{point coordinate}}
</math>

''n'' è quindi il grado della curva. Quindi una curva di Bézier di grado ''n'' è un poligono di ordine ''n''. I fattori <math>P_{i}</math> sono quindi le coordinate dei punti di controllo delle curve di Bézier. Per una visualizzazione, vedere [https://pomax.github.io/bezierinfo/#control Controllo delle curvature di Bézier].

Se si è ulteriormente interessati, dare un'occhiata a [https://pomax.github.io/bezierinfo/#explanation La matematica delle curve di Bézier] con una derivazione animata della matematica delle curve di Bézier.

<span id="B-Splines"></span>
== B-spline ==

<span id="Basics"></span>
=== Basi ===

[https://www.youtube.com/watch?v=bE1MrrqBAl8 Questo video] elenca all'inizio i problemi pratici delle curve di Bézier. Ad esempio, l'aggiunta o la modifica di un punto di controllo modifica l'intera curva. Questi problemi possono essere risolti unendo diverse curve di Bézier. Il risultato è una cosiddetta spline, in particolare una B-spline (spline di base). Il video spiega anche che l'unione di curve di Bézier quadratiche forma una B-spline quadratica uniforme e che l'unione di curve di Bézier cubiche forma una B-spline cubica uniforme.

From the videos we can collect useful "rules" for B-splines:
* The first and last control point is the end/start point of the spline.
* Like for Bézier curves, splines always begin tangentially to the line between the startpoint and the first control point (and end tangentially to the line between the last control point and the endpoint).
* A union of <math>S</math> Bézier curves with the degree <math>D</math> has <math>S+D</math> control points.
** Since one is in most cases working with cubic B-splines we can then state that <math>N</math> control points lead to <math>N-3</math> Bézier segments and in turn <math>N-4</math> segment junction points.
* A B-spline with the degree <math>D</math> offers at every point a continuous <math>D-1</math> order derivative.
** For a cubic B-spline this means that the curvature (second order derivative) does not change when traveling from one segment to the next one. This is a very useful feature as we will later see.

If you are interested in more details about B-Spline properties, have a look at [https://www.youtube.com/watch?v=xXJylM2S72s this video].

<span id="Basis"></span>
==== Basi ====

Poiché introdurremo solo le basi di B-spline, non entreremo nei dettagli.

Basi di costruzione della spline. Osservando la definizione di curve di Bézier nella sezione [[#Math|Matematica]], ricordiamo che una curva di Bézier è una combinazione lineare di polinomi con le coordinate x/y di ciascuno dei punti di controllo come fattore. Questi polinomi sono chiamati polinomi di Bernstein.

Combinando diverse curve di Bézier per formare una spline, otteniamo un insieme di polinomi di Bernstein che formano la spline (ne costituiscono la base). Poiché si vuole superare le limitazioni delle curve di Bézier menzionate, non si combinano geometricamente i diversi polinomi di Bernstein delle curve di Bézier, ma si definiscono i polinomi di Bernstein sull'intero intervallo geometrico della spline. Quindi '''non vengono combinate''' le curve di Bézier con i relativi polinomi di Bernstein, il che sarebbe:
<math>\textrm{Bezier-combination}=\begin{cases}
  \sum_{i=0}^{n}P_{i}\cdot B_{i,n}(t),  & 0\le t\le1\\
  \sum_{i=0}^{n}P_{i+n}\cdot B_{i,n}(t-1), & 1\le t\le2\\
\cdots
\end{cases}</math>

dove <math>B_{i,n}(t)</math> è l'i-esimo polinomio di Bernstein di ordine <math>n</math> e i coefficienti <math>P_{i}</math> sono le coordinate dei punti di controllo della curva di Bézier. Si utilizza però un '''insieme diverso di funzioni''' definite sull'intero intervallo della spline:

Si noti che in generale <math>N_{i,n}(t) \ne B_{i,n}(t)</math> e i punti di controllo di Bézier <math>\{P_1, P_2,\dots\}</math> sono diversi dai punti di controllo B-spline <math>\{p_1, p_2,\dots\}</math>.

I diversi <math>N_{i,n}(t)</math> sono definiti a tratti, dove l'intervallo di ciascun pezzo è l'intervallo del pezzo di Bézier.

Quando la lunghezza di tutti i <math>N_{i,n}</math> pezzi è uguale, si parla di spline uniforme. (In letteratura, questo è spesso indicato come tempo di percorrenza uguale <math>t</math> per pezzo.)

Per capire come <math>p_{i}</math> siano le coordinate dei punti di controllo B-spline, vedere il primo minuto di [https://www.youtube.com/watch?v=dPPTCy4L4rY&list=PL8bSwVy8_IcMvtI70tZoYesCS0hGVO5qd questo video].

<span id="Knot_vector"></span>
==== Vettore dei nodi ====

Come ottenuto sopra, le B-spline sono create da <math>N_{i,n}</math> polinomi a tratti con continuità fino a una certa derivata tra i pezzi. Gli estremi dell'intervallo di definizione del pezzo sono chiamati nodi. Per una spline definita su <math>k</math> pezzi, ci sono <math>k+1</math> nodi dati dal cosiddetto ''vettore dei nodi'':</br><math>\{t_0, t_1, t_2,\dots, t_k\}</math> mentre <math> t_0 < t_1 < t_2 < \dots < t_k</math>

The knot vector comprises the knots of the <math>N_{i,n}</math> basis functions that define the B-spline, see [https://www.youtube.com/watch?v=ni5NNPCVvDY this video]. The basis functions of a B-spline can be calculated using the knot vector and a creation algorithm, see [https://www.youtube.com/watch?v=hrsO45AHtbs this video].

The derivative until which continuity exists is given by the multiplicity <math>m</math>. Therefore we can specify a vector with the multiplicity for every knot: <math>\{m_0, m_1,\dots, m_k\}</math>. A knot on a spline with degree ''d'' and the multiplicity ''m'' tells that the curve left and right to the knot has at least an equal ''n'' order derivative (called ''C''<sup>''n''</sup> continuity) whereas <math>n=d-m</math>.

=== Non-uniform B-splines ===

The derivation of B-splines from Bézier curves have the mathematical consequence that in B-splines every polynomial piece has the same length. Such B-splines are called ''uniform''. The more general case is that they can but must not have the same length. Such ''non-uniform'' splines have the advantage that one can control how close the splines cross its control point.

Mathematically this is achieved by defining the different <math>N_{i,n}</math> pieces at different intervals. If for example a B-spline is defined for the interval [0, 1], it is uniform if all its e.g. 5 pieces are also defined in this interval. If now <math>N_{1,4}</math> is only defined in the interval [0, 0.6] (outside the interval it is set to zero), it is shorter and thus the spline becomes non-uniform.

As described above the parameters of the knots are described by the knot vector. So the knot vector stores the definition intervals. When now one piece gets another interval, also the knot vector changes, see [https://www.youtube.com/watch?v=w-l5R70y6u0 this video] for a visualization.

=== Rational B-splines ===

A further generalization can be made for B-splines by introducing weights for the control points. This way it can be controlled "how important" a control point is.

The equation for such a spline is

:<math>
c(n, t)=\cfrac{\sum_{i=0}^{n}d_{i}N_{i, n}(t)\cdot w_i}{\sum_{i=0}^{n}N_{i, n}(t)\cdot w_i}
</math>

Notice that the function is no longer a polynomial, but a rational function, and these splines are called rational B-splines. Observe that when all <math>w_i</math> are equal, the equation reduces to a regular non-rational B-spline. So non-rational B-splines are a subset of rational B-splines.

Non-uniform and rational B-splines are often called '''[https://en.wikipedia.org/wiki/Non-uniform_rational_B-spline NURBS]''' and are widely used in geometric modeling.

<span id="B-splines_in_FreeCAD"></span>
== B-spline in FreeCAD ==

FreeCAD consente di creare B-spline uniformi o non uniformi di qualsiasi grado in 2D tramite [[Sketcher_Workbench/it|Sketcher]].

<span id="Creation"></span>
=== Creazione ===

To create B-splines, go into a sketch and use the toolbar button {{Button|[[File:Sketcher_CreateBSpline.svg|16px]] [[Sketcher_CreateBSpline|Create B-spline]]}}. Then left-click to set a control point, move the mouse left-click to set the next control point and so on. Finally right-click to finish the definition and create the B-spline.

By default uniform cubic splines are created, except there are not enough control points to do this. So when you create a B-spline with only 2 control points, you get of course a spline that is single linear Bézier curve, for 3 control points you get a quadratic Bézier curve, first with 5 control points you get a cubic B-spline consisting of 2 Bézier segments. {{Version|0.20}} You can also use press D while making creating a B-spline to set it's degree (it will still fall to a lower degree if less points are provided).

To create periodic B-splines (B-splines that form a closed curve), use the toolbar button {{Button|[[File:Sketcher_CreatePeriodicBSpline.svg|16px]] [[Sketcher_CreatePeriodicBSpline|Periodic B-spline]]}}. It is not necessary to set the last control point onto the first one because the B-spline will automatically be closed:

[[File:Sketcher_Periodic-B-spline-creation.gif]]

B-splines can also be generated out of existing sketch segments. To do this, select the elements and press the the toolbar button {{Button|[[File:Sketcher_BSplineConvertToNURBS.svg|24px]] [[Sketcher_BSplineConvertToNURBS|Convert Geometry to B-spline]]}}.

While creating a B-spline, its degree can be specified by pressing the {{KEY|D}} key. With this, the default to create a cubic B-spline if possible, can be overridden. {{Version|0.20}}

=== Changing the Degree ===

To change the degree, select the B-spline and use either the toolbar button {{Button|[[File:Sketcher_BSplineIncreaseDegree.svg|24px]] [[Sketcher_BSplineIncreaseDegree|Increase B-spline degree]]}} or {{Button|[[File:Sketcher_BSplineDecreaseDegree.svg|24px]] [[Sketcher_BSplineDecreaseDegree|Decrease B-spline degree]]}}.

'''Note:''' Decreasing the degree cannot revert a prior increase of the degree, see the Wiki page [[Sketcher_BSplineDecreaseDegree|Decrease B-spline degree]] for an explanation.

=== Changing the Knot Multiplicity ===

The points where two Bézier curves are connected to form the B-spline are called knots. The knot multiplicity determines how the Bézier parts are connected, see the Wiki page [[Sketcher_BSplineIncreaseKnotMultiplicity|Increase knot multiplicity]] for details.

To change the knot multiplicity, use the toolbar buttons {{Button|[[File:Sketcher_BSplineIncreaseKnotMultiplicity.svg|24px]] [[Sketcher_BSplineIncreaseKnotMultiplicity|B-spline increase knot multiplicity]]}} or {{Button|[[File:Sketcher_BSplineDecreaseKnotMultiplicity.svg|24px]] [[Sketcher_BSplineDecreaseKnotMultiplicity|B-spline decrease knot multiplicity]]}}.

'''Note:''' Creating two B-Splines that are connected to each other will not unite to a single new B-spline. So their connection point is not a knot. The only way to get a new knot in an existing B-spline is to decrease the degree. However, you may get many new knots. Thus the better choice is to redraw the B-spline with more control points.

=== Changing the Weight ===

Around every control point you see a dark yellow circle. Its radius sets the weight for the corresponding control point. By default all circles have the radius ''1''. This is indicated with a radius constraint for the first control point circle.

To create a rational B-spline the weights have to be made independent. To achieve that you can delete the constraint that all circles are equal and then set different radius constraints for the circles.

If no radius constraint is set, you can also change the radius by dragging:

[[File:Sketcher_Changing-control-point-weigth-dragging.gif]]

In the dragging example you see that a high weight attracts the curve to the control point while a very low weight changes the curve so as if the control point does almost not exist.

When you look at the [[#Rational_B-splines|creation function]] for non-uniform rational B-splines you see that a weight of zero would lead to a division by zero. Negative weights are theoretically possible but they are not supported. Therefore you can only specify weights greater than zero.

'''Note:''' When dragging points, knots or widths, the circle diameters denoting the weight will change. This is because the diameter depends on the overall B-spline length for visualization reasons. The actual weight is not changed.

=== Editing Knots ===

New knots can be added using the {{Button|[[File:Sketcher_BSplineInsertKnot.svg|24px]] [[Sketcher_BSplineInsertKnot|B-spline insert knot]]}} button. {{Version|0.20}}

A knot is deleted by decreasing it's degree to 0 (i.e applying {{Button|[[File:Sketcher_BSplineDecreaseKnotMultiplicity.svg|24px]] [[Sketcher_BSplineDecreaseKnotMultiplicity|B-spline decrease knot multiplicity]]}} when it's degree is 1).

Changing the parameter value of a knot is not yet supported.

=== Display Information ===

Since the form of a B-spline does not tell much about its properties, FreeCAD offers [[Sketcher_Workbench#Sketcher_B-spline_tools|different tools]] to display the properties:

{| class="wikitable float-right"
|Property
|Toolbar button
|-
| '''Degree'''
| {{Button|[[File:Sketcher_BSplineDegree.svg|16px]] [[Sketcher_BSplineDegree|Show/Hide B-spline degree]]}}
|-
| '''Control polygon'''
| {{Button|[[File:Sketcher_BSplinePolygon.svg|16px]] [[Sketcher_BSplinePolygon|Show/hide B-spline control polygon]]}}
|-
| '''Curvature comb'''
| {{Button|[[File:Sketcher_BSplineComb.svg|16px]] [[Sketcher_BSplineComb|Show/hide B-spline curvature comb]]}}
|-
| '''Knot multiplicity'''
| {{Button|[[File:Sketcher_BSplineKnotMultiplicity.svg|16px]] [[Sketcher_BSplineKnotMultiplicity|Show/hide B-spline knot multiplicity]]}}
|-
| '''Weights'''
| {{Button|[[File:Sketcher_BSplinePoleWeight.svg|16px]] [[Sketcher_BSplinePoleWeight|Show/hide B-spline control point weight]]}}
|}

=== Limitations ===

At the moment (FreeCAD 0.20) there are some limitations when using splines you should know:
# You cannot set tangential constraints.</br>In this example</br> [[File:Sketcher_spline-limit-tangential.png|450px]]</br> you want to assure that the spline touches the blue curve 2 times tangentially. This would be useful because the blue line could for example be the spatial border for your design.
# You cannot create an offset curve for a B-spline using the tool [[Draft_Offset|Draft Offset]].

== Typical Use Cases ==

According to the properties of B-splines, there are 3 main use cases:
# Curves that start/end tangentially to a certain direction. An example for this is the motivation example [[#Motivation|above]].
# Curves describing larger designs and providing the freedom of local changes. See [[#Designing |this example]] below.
# Curves providing a certain continuity (derivative). See [[#Continuity at Geometric Transitions|this example]] below.

=== Designing ===

Take for example the case that you design a housing of a kitchen mixer. Its desired shape should look like this one:

[[File:Sketcher_spline-exmple-mixer-shell.png]]

To define the outer form it is advantageous to use a B-spline because when you change a control point to change the curvature at the bottom, the curvature at the side and top will not be changed:

[[File:Sketcher_spline-exmple-mixer-sketch.gif]]

=== Continuity at Geometric Transitions ===

There are several cases where it is physically necessary to have a certain surface continuity at geometric transitions. Take for example the inner walls of a fluid channel. When you have a change in the diameter of the channel, you don't want to have an edge because edges would introduce turbulences. Therefore, like in  the motivation example [[#Motivation|above]], one uses splines for this purpose.

The development of the Bézier curves was initially triggered by the French car industry. Besides the saving of material and the reduction of the air flow drag, the look of the cars should also be improved. And when you look at the fancy design of French cars from the 60's and 70's you see that the Bézier curves gave car design a boost.

Let's take for example this task in the design of cars: The car fender should "look nice". Here is a basic sketch of our task:

[[File:Spline-Fender-sketch1.svg|250px]]

"Looking nice" means that the (potential) customer looks at the fender and does not see unexpected light reflections and also no sudden changes in the reflection from the automotive paint at all. So what do you need to avoid changes in the reflections? Looking closely to the fender:

[[File:Spline-Fender-sketch2.svg|300px]]
{{Caption|At the spatial area above the edge the intensity of reflected light is low (denoted by the red ellipse) because no light is directly reflected in the direction from the edge to the eye.}}

you see when there is an edge, there is a spatial area where the reflected light has less intensity and this is what you will notice when looking at the fender. To avoid this you need a continuous change in the slope of your surface elements. The slope is the first order derivative and as explained in section [[#Basics|Basics]], a second degree (quadratic) B-spline offers at every point a continuous first order derivative.

But is this really sufficient? At the point of geometric transition we have now at both sides the same slope, but the slope might change differently at both sides. Then we have this situation:

[[File:Spline-Fender-sketch3.svg|300px]]

So we have also spatial areas in which the intensity of reflected light is different. To avoid this, we need at the geometrical point of transition also a continuity of the second order derivative and thus a cubic B-spline.