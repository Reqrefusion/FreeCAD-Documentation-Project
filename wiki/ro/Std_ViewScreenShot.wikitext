<languages/>

<div lang="en" dir="ltr" class="mw-content-ltr">
{{Docnav
|[[Std_ViewLoadImage|ViewLoadImage]]
|[[Std_TextDocument|TextDocument]]
|[[Std_Tools_Menu|Std Tools Menu]]
|IconL=Std_ViewLoadImage.svg
|IconR=Std_TextDocument.svg
|IconC=Freecad.svg
}}
</div>

<div class="mw-translate-fuzzy">
{{GuiCommand|Name=Std ViewScreenShot|MenuLocation=[[Std Tools Menu|Tools]] → Save picture...|Workbenches=All|SeeAlso=...}}
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
==Description==
</div>

<div class="mw-translate-fuzzy">
==== Rezumat ====
Această comandă deschide o fereastră de dialog pentru a salva conținutul curent la dosar. Se poate salva în diverse formate de imagine. În plus, puteți modifica ecranul folosind "Opțiuni"
pentru a obține acces la mai mulți parametri.
</div>

[[Image:Save_picture.png|800px]]
<div lang="en" dir="ltr" class="mw-content-ltr">
{{Caption|The Save image dialog box after pressing the Extended button}}
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
==Usage==
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
# Select the {{MenuCommand|Tools → [[Image:Std_ViewScreenShot.svg|16px]] Save Image…}} option from the menu.
# The '''Save Image''' dialog box opens.
# Optionally press the {{Button|Extended}} button to reveal an additional panel in the dialog box. For more information see [[#Options|Options]].
# Optionally browse to the correct folder.
# Enter a filename and select the file type.
# Press the {{Button|Save}} button to create the image file and close the dialog box.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
==Options==
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
===Image Dimensions===
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
# Select a standard size from the '''Standard sizes''' dropdown list. Or specify the '''Width''' and '''Height''' for a custom size.
# Optionally press an '''Aspect ratio''' button to set the width-to-height ratio of the image. If the '''Width''' input box has the focus the height of the image will change and vice versa.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
===Image Properties===
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
# Select an option from the '''Background''' dropdown list:
#* {{Value|Current}} This option uses the background of the 3D View.
#* {{Value|White}}
#* {{Value|Black}}
#* {{Value|Transparent}} Not all image formats support transparency.
# Select an option from the '''Creation method''' dropdown list:
#* {{Value|Offscreen (New)}} This is the default method. This method supports [https://en.wikipedia.org/wiki/Multisample_anti-aliasing anti-aliasing]. ''Technical information: The most important classes for this method are Qt's QOffscreenSurface and QOpenGLFramebufferObject.''
#* {{Value|Offscreen (Old)}} This method does not work on many modern Linux systems as it relies on the graphics driver. This method does not support anti-aliasing. ''Technical information: This is a real off-screen rendering method that only uses functions from the Coin3d library.''
#* {{Value|Framebuffer (custom)}} This method supports anti-aliasing. ''Technical information: If anti-aliasing is off, this method reads the image directly from the graphics renderer, else it renders to a framebuffer and gets the image from there. The key part of this method is Qt's QOpenGLFramebufferObject class.''
#* {{Value|Framebuffer (as is)}} This method uses the same techniques as '''Framebuffer (custom)'''. It also supports anti-aliasing but has some limitations related to custom sizes and always uses the current background of the 3D View.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
===Image Comment===
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
# Select the '''Insert MIBA''' option to add [http://juergen-riegel.net/Miba/ MIBA] information to the file. Not all image formats support this.
# Or select the '''Insert comment''' option and type a comment in the text field to embed a comment in the file. Not all image formats support this.
# Check the '''Add watermark''' checkbox to add a watermark. The watermark is placed in the lower left corner of the image and consists of the FreeCAD logo and name above the main FreeCAD URL: [https://freecad.org freecad.org].
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
==Notes==
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
* The number of available image file formats may vary depending on your OS.
* Some OpenGL drivers don't allow renderings above a certain maximum size.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
==Preferences==
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
See also: [[Preferences_Editor|Preferences Editor]].
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
* The 3D View background can be changed in the preferences: {{MenuCommand|Edit → Preferences → Display → Colors → Background Color}}.
* To change the 3D View anti-aliasing: {{MenuCommand|Edit → Preferences → Display → 3D View → Rendering → Anti-aliasing}}.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
==Scripting==
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
See also: [https://freecad.github.io/SourceDoc/ Autogenerated API documentation] and [[FreeCAD_Scripting_Basics|FreeCAD Scripting Basics]].
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
It is possible to create screenshots with Python code.
</div>

{{Code|code=
Gui.ActiveDocument.ActiveView.saveImage("D:/temp/test.png", 1656, 783, "Current")
}}

<div lang="en" dir="ltr" class="mw-content-ltr">
This script saves a series of screenshots of different sizes and from different directions. The camera type, orthographic or perspective, is also changed.
</div>

{{Code|code=
import FreeCADGui as Gui
import Part

out_dir = "D:/temp/"
name = "Blade"
view = Gui.ActiveDocument.ActiveView

# Create images with different Views, Cameras and sizes
for p in ["PerspectiveCamera", "OrthographicCamera"]:
    Gui.SendMsgToActiveView(p)
    for f in ["ViewAxo", "ViewFront", "ViewTop"]:
        Gui.SendMsgToActiveView(f)
        for x, y in [[500, 500], [1000, 3000], [3000, 1000], [3000, 3000], [8000, 8000]]:
            view.saveImage(out_dir + name + "_" + p + "_" + f + "_" + str(x) + "_" + str(y) + ".jpg", x, y, "White")
            view.saveImage(out_dir + name + "_" + p + "_" + f + "_" + str(x) + "_" + str(y) + ".png", x, y, "Transparent")

# Close active document
App.closeDocument(App.ActiveDocument.Name)
}}


<div lang="en" dir="ltr" class="mw-content-ltr">
{{Docnav
|[[Std_ViewLoadImage|ViewLoadImage]]
|[[Std_TextDocument|TextDocument]]
|[[Std_Tools_Menu|Std Tools Menu]]
|IconL=Std_ViewLoadImage.svg
|IconR=Std_TextDocument.svg
|IconC=Freecad.svg
}}
</div>

{{Std_Base_navi{{#translation:}}}}
{{Userdocnavi{{#translation:}}}}