<languages/>
{{clear}}
{{VeryImportantMessage|Der Arbeitsbereich Flamingo (Python2/Qt4) wurde durch den Arbeitsbereich Dodo (Python3/Qt5) abgelöst. Diese Wiki-Seite hebt die Unterschiede zwischen den beiden Arbeitsbereichen hervor. Zurzeit wird der Arbeitsbereich [[Dodo_Workbench|Dodo]] hierher verlinkt.}}

<span id="Introduction"></span>
== Einleitung ==

Dies ist eine Reihe von angepassten FreeCAD Befehlen und  Objekten, die hauptsächlich helfen, das Zeichnen von Rahmen und Rohrleitungen zu beschleunigen.

----

:"''Flamingo''" Arbeitsbereich ist zugehörig zu Versionen die Python >2.7 Syntax und Qt4 Werkzeugkasten verwenden.

:"''Dodo''" Arbeitsbereich ist für Python >3.6 und Qt5.

----

Aus Zweckmäßigkeit sind Flamingo/Dodo Werkzeuge in drei Werkzeugleisten/Menüs + ein Hilfsprogrammsatz gruppiert.

[[Image:flamingoBlob.png|left]]

[[Image:dodoBlob.png|left]]{{clear}}

<div lang="en" dir="ltr" class="mw-content-ltr">
:* '''Frame tools''': that is aimed to arrange frames, trusses and similar in FreeCAD using the Structure objects of Arch module. .../flamingo/tutorials/tutorialFrame.pdf
:* '''Pype tools''': that's the logical continuation of frame tool since it deals with creating pipelines and tubular structures. It also features its own Python classes to create the piping objects, such as tubes, elbows, flanges etc. .../flamingo/tutorials/tutorialPype2.pdf
:* '''Eagle tools''': that's basically an addition, and shortcut, to the very professional [https://github.com/marmni/FreeCAD-PCB FreeCAD-PCB] workbench (also available in the FreeCAD's add-on repository) to import position of objects from a .brd Eagle's file on a PCB drawn in FreeCAD with the a.m. workbench relating only on their names. It's also the origin, by extension, of the name of the entire workbench. .../flamingo/tutorials/tutorialEagle.pdf
:* '''Utils''' toolbar provides some functionality to query the objects in the model and their distance, to move/rotate the work plane and a little hack of the [[Draft_Wire|Draft Wire]] creation dialog, which allow to change the work plane position on-the-fly.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
==References==
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
* Author: oddtopus
* Source code on github: 
https://github.com/oddtopus/flamingo
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
https://github.com/oddtopus/dodo
</div>

==Installation==

<div lang="en" dir="ltr" class="mw-content-ltr">
This workbench can be installed from the [[Std_AddonMgr|Addon Manager]]. For manual installation see [[Installing_more_workbenches|Installing more workbenches]].
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
==Frame Tools==
</div>
<div class="center" style="width: auto; margin-left: auto; margin-right: auto;">[[Image:Flamingos_frame2.jpg]]</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
:1) Place one-beam over one-edge (class frameIt)
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Given a beam object and an edge in the model, this tool lay down the beam over the edge by selecting them one after the other until ESC is pressed.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
:2) Fill the frame (class fillFrame)
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Dialog to create over multiple edges selected in the viewport the beams of the type of that previously chosen among those present in the model.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
With the button '''Select''' it's possible to change the type of beam.
</div>

{{VeryImportantMessage|Dodo: Diese Funktion wurde im Dialog "Rahmenzweig einfügen" durch die Drucktaste "Einzeln hinzufügen" ersetzt.}}

<div lang="en" dir="ltr" class="mw-content-ltr">
:3) Insert a path (class insertPath)
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Tool to create a continuous DWire over the path defined by the edges selected in the viewport, even if these are not touching or are intersecting in the middle or belongs to different objects. The only constraint is that exists the intersection between two subsequent edges, in the order that they were selected.
Also the DWire is given the view-properties of a center-line, i.e. orange and dash-dotted.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
:4) Insert Std. Sections (class insertSection)
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Dialog to create the set of profiles to be used in the model for object FrameLine.
* '''Section''' list: it includes all the sections defined in the .csv file corresponding to the selected section type.
* '''Section types''' list: the types of profiles defined with the .csv files included in the folder /tables
* '''Insert''' button: creates the group "Profiles_set", if not already existing, and adds to it the object of the selected profile.
Other profiles tables can be created by adding the relevant .csv file in the /tables folder. The rules to create or customize such tables are similar to those for pipe-lines.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Other profiles can be drafted in the model and dragged inside the group "Profiles_set".
</div> 

<div lang="en" dir="ltr" class="mw-content-ltr">
The orientation of the DWires may influence the rendering of beams.
</div>

{{VeryImportantMessage|Dodo: Der Umfang dieser Funktion wurde geändert.
In dodo öffnet sich ein Dialog, aus dem es möglich ist, 10 Formen für den Trägerquerschnitt mit kundenspezifischen Abmessungen zu erstellen:
* Hohl und quadratisch
* Hohl- und Vollkreis
* T, I, C, L, L, Z
* omega
Es ist auch möglich, die Position der Mitte zu ändern oder einen vorhandenen Abschnitt zu bearbeiten.}}

<div lang="en" dir="ltr" class="mw-content-ltr">
:5) FrameLine manager (class FrameLineManager)
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Same as for "pype-line" objects, this is a dialog to create and change properties of "frame-line" objects.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Also similarly to what seen above, the frame-lines are objects that collects properties common to a set of beams (namely the beam's section) which are included in a common group in the tree of the model. 
They also have an optional property ".Base", by default set to None, which is the centerline of the beams of the frame. After a path, alias .Base, is defined (a DWire or a Sketch) other beams can be added to the frame-line but they will be deleted when '''Redraw''' is invoked.
The dialog provides the following features:
* a list of beams' profiles previously included in the model  by "Insert Std. Sections" dialog (read further);
* a combo-box to select the active FrameLine among those already created or <new> to create a new one;
* a text-box where to write the name of the FrameLine that is going to be created; if nothing or "<name>", the FrameLined will be named as default "Telaio00n";
* '''Insert''' button: creates a new FrameLine object or adds new members to the one selected in the combo-box if edges are selected in the active viewport.
* '''Redraw''' button: creates new beams and places them over the selected path. New beams will be collected inside the group of the FrameLine. Does not create or update beams added to the FrameLine outside its defined path.
* '''Clear''' button: deletes all beams in the FrameLine group. It applies also to beams added to the FrameLine outside its defined path.
* '''Get Path''' button: assigns the Dwire selected to the attribute Path of the FrameLine object.
* '''Get Profile''' button: changes the Profile attribute of the FrameLine object to the one of the beam selected in the viewport or the one selected in the list.
* '''Copy profile''' checkbox: if checked generates a new profile object for each beam in order to avoid multiple references in the model.
* '''Move to origin''' checkbox: if checked, moves the center-of-mass of the profile to the origin of coordinates system: that makes the centerline of the beam coincide with the c.o.m. of the profile.
If the name of a FrameLine object is modified, also the name of the relevant group will change automatically but not viceversa
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
:6) FrameBranch manager
Similar to the analogous feature in the Pype menu, this is a container for beams structured on a .Base. The base can be a DWire, a Sketch or also the edges of a solid shape.
When the underlying base is changed, also the position and length of the beams is modified accordingly.
It's possible to trim/extend to any geometry the beams and rotate the sections aroud the center-line through the commands provided in the dialog: in this way the modification is not lost when the document is recomputed.
* '''OK''' creates one framebranch over the pre-selected geometry
* '''Cancel''' closes the dialog
* the '''<name>''' text box allow to insert a custom name to the feature
* the '''combo box''' allow to select the type of section that will be displayed in the '''list box'''. (see ../Mod/flamingo/shapes or ../Mod/dodo/shapez to customize)
* '''AddBeams''' adds one member to a frame to the currently selected edge. The edge must belong to an existing framebranch
* '''RemoveBeams''' removes the selected beam from the corresponding edge
* '''ChangeProfile''' change the profiles to the framebranch. To select the framebranch just select in the view area one of its members.
* '''Get targets''' selects geometry from the view area to trim/extend to the beams. Targets can also not belong to any framebranch.
* '''Trim/Extend''' changes the lenght of selected members to the targets
* '''Add single''' creates one beam, of the specified '''<length>''', not linked to the base on any edge or surface selected.
* '''Redraw''' recreates the frame, deleting all the offsets and rotations
When one beam belonging to a framebranch is selected in the view area, the TAIL is visually highlighted. That allows to change manually the offsets of tail and head, beside the rotation of the section, using the commands provided in the dialog.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
:7) Spin beams by 45 deg. (class spinSect)
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Tool to spin one object around the "Z" axis of its shape by 45 degrees.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
:8) Reverse orientation (class reverseBeam)
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Tool to spin one object around the "X" axis of its shape by 180 degrees.
Notes:  if one  edge of the object is selected, that is used as the pivot of rotation.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
:9) Shift the beam (class shiftBeam)
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Dialog to translate and copy objects.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
'''X''', '''Y''' and '''Z''' textboxes for direct input the amount of translation in each  direction.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
'''Multiple''' textbox is the multiple coefficient of the translation amount.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
'''Steps''' textbox is the denominator of the translation amount. It's used when the amount of translation is to be covered in some steps.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
'''Get displacement''' button to take the amount and direction of translation from the distance of selected entities (points, edges, faces) or even from a single edge. In the latter case, a green arrow is displayed to show the direction.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
'''OK''' to perform the action and '''Cancel''' to close the dialog.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
:13) Rotate + mate the edges (class rotJoin)
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Tool to translate and rotate the beams to mate two edges. Same as above but it also makes the edges co-linear.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
:10) pivotTheBeam (class pivotBeam)
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Dialog to rotate one beam or other object around one of its edges.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
'''Angle''' textbox to insert the degree of rotation.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
'''Reverse''' button to rotate in the opposite direction, if necessary.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
'''OK''' to perform the action and '''Cancel''' to close the dialog.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
:11) Flush the surfaces (class levelBeam)
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Tool to flush the parallel faces of two objects.
Actually the command takes to the same level, respect the position and orientation of the first face selected, the center-of-mass of all faces selected. Thus it translates the objects even if the faces are not parallel.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
:12) Mate the Edges (class alignEdge)
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Tool to mate two parallel edges.
Actually the command moves the objects along the minimum distance of their selected edge to the first one. Thus it translates the object even if edges are not parallel and it's a good way to place objects in desired position.
It is also possible to select two edges of the same objects. With this method is possible to move quickly one object by steps defined on its own geometry.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
:14) alignFlange (class alignFlange)
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Dialog to rotate beams so that their surfaces are  parallel to one reference plane.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
It's possible to preselect the reference face before invoking the command.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
The three '''XY''', '''XZ''' and '''YZ''' buttons allow to choose directly the orientation of principal planes as the reference.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Finally it's possible to enter directly the new orientation of faces by the three coordinates of the normal and the button '''Set normal'''.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
:15) Stretch the beam (class stretchBeam)
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Dialog to change the length of beams.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
In the textbox write the new length that will be applied to selected beams or pipes.
Otherwise '''Get Length''' button takes the new length from the selected geometry (either the length of a beam or edge or the distance between geometric entities).
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
With the slider it's possible to change the length wirtten in the text-box from -100% to +100%.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Radio buttons '''Head''' and '''Tail''' allow to choose the side of the beam that will be changed.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
:16) Extend the beam (class extend)
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Dialog to extend one beam to one selected target.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
If entities are preselected before calling this command, the first entity is automatically taken as target and the object attached to it is removed from the selection set. In any case it's possible to change the target object with the push-button '''Select'''.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
:17) Adjust frames' angle (class adjustFrameAngle)
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Tool to adjust the beams at square angles of frames. To understand at  best how it works, refer to the previous tutorial.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
==Pype Tools==
</div>

<div class="center" style="width: auto; margin-left: auto; margin-right: auto;">[[Image:Flamingos_pype2.jpg]]</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
:1) Insert a tube
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Opens a dialog to insert tubes.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
The top-right combo is a common feature for all "Insert ..." dialogs: it lists the pype-line objects defined in the current document: with this it's possible to select to which pype-line to assign the newly created pipes. You can also leave it to <none> so that the object is created on the root line of the part model.
In the top-left corner is printed the currently selected pipe rating, taken from the listbox in the right column. Pipes dimensions for each pipe-rating are defined in .csv files, which is possible to add or modify, with few simple naming rules, according needs. Curves, reductions etc. have the same rules for definition of their tables of dimensions: see files in ../Mod/flamingo/Tables. Read also "tutorialPype.pdf" to know how to customize or create them.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
To define position and orientation of pipes, following selections are possible:
* one or more straight edges
* one or more curved edges
* one or more vertexes 
* nothing; in this case the tube will be placed at origin.
If no length is specified, the default is 200 units (just a convenient length, in mm).
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
'''Reverse''' button allow to rotate by 180° the last tube created or those currently selected.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
'''Apply''' button allow to apply a different lenght or Nominal diameter to the tubes currently selected.
</div>

{{VeryImportantMessage|Dodo: ein Tortenmenü (Tastaturkürzel: "Z") hinzugefügt, um "pype" Objekte zu erstellen: dies soll schnellere Verbesserungen in die Zeichnung einfügen}}

<div lang="en" dir="ltr" class="mw-content-ltr">
:2) Insert a curve
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Opens a dialog to insert one elbow.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Beside the common widgets with other "Insert..." dialogs, the '''Trim/Extend''' button allow to adjust the length of selected pipes to the selected edge of the curve.
To define position and orientation following selections are possible:
* one vertex, 
* one circular edge 
* one pipe at one of its ends; in this case the curve's diameter and thickness will automatically fit those of the selected pipe
* a pair of edges or pipes or beams, also not contiguous but intersecting; in this case curve's properties will automatically fit to connect the two selected objects; also selected pipes will be automatically trimmed or extended to the curve's edges
* nothing; in this case the curve will be placed at origin.
If no angle is specified the default is 90 degrees.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
:3) Insert a reduction
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Opens a dialog to insert concentric reductions.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
To define position and orientation following selections are possible:
two pipes parallel (possibly co-linear)
* one pipe at one of its ends
* one pipe
* one circular edge
* one straight edge
* one vertex
* nothing (created at origin)
In case one pipe is selected, its properties are applied to the reduction.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
In case two pipes are selected, the tool will try automatically to connect them with the right major and minor diameter.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
:4) Insert a cap
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Opens dialog to insert caps.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
To define position and orientation following selections are possible:
one or more curved edges (axis and origin across the center)
one or more vertexes 
nothing 
If a pipe edge is selected the caps' properties will automatically fit to those of the pipe.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
:5) Insert a valve
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Create a "placeholder" of a valve from a .csv table like above. Beside the offset dimension, it's important because it defines also the Kv coefficient that will be used to calculate pressure losses with the relevant tool in "Utils" menu.
Note that the symbol of the placeholder changes according the type of the valve, if in its name is found one keyword among "ball", "butterfly" or "globe".
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
:6) Insert a flange
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Opens dialog to insert flanges.
To define position and orientation following selections are possible:
* one or more circular edges,
* one or more vertexes,
* nothing.
In case one pipe is selected, its properties are applied to the flange.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
:7) Insert a U-bolt
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Opens dialog to insert U-bolts.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
To define position and orientation following selections are possible:
* one or more circular edges
* one or more pipes
* nothing.
In case one pipe is selected, its properties are aplied to the U-bolt. Moreover it's possible to choose to place the U-bolt at the '''Head''' or '''Tail''' ends or in the '''Middle''' of the pipes by checking the relevant box.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
With '''Ref. face''' button it's possible to select the face of the support to which to orient the U-bolt axis.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
----
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
''Only in '''dodo''': the above piping components can be inserted also wfrom the dedicated pie-menu.''
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
----
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
:8) PypeLine Manager
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Before talking about the dialog it's worth to recall what the pype-line object is in the context of Flamingo workbench.
</div> 

<div lang="en" dir="ltr" class="mw-content-ltr">
This object represent a collection of objects "PType" that are updated with the methods defined in the Python class itself. At present time it creates, with the method "obj.Proxy.update(obj,[edges])", pipes and curves over the given edges and collect them in a group named according the object's obj.Label.
A standard bending radius "3D" (i.e. 1.5xO.D.) is applied for curves. The Bend Radius is a common property of object pype-line, thus it can be changed and then redrawn.
When the Label of the object pype-line is renamed, the name of its group is changed accordingly.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
The class PypeLine2 has also the optional attribute ".Base", which namely represent the centerline of the piping: 
* If Base is None, PypeLine2 behaves like a bare container of objects, with possibility to group them automatically, assign one color and extract the part-list.
* .Base can be a Wire or a Sketch or any object which has edges in its Shape.
* Running "obj.Proxy.update(obj)", without any [edges], the class attempts to render the pypeline (Pipe and Elbow objects) on the "obj.Base" edges: for well defined geometries  this usually leads to the desired result. If [edges] are given, pipes and curves will be drawn along them.
* Running "obj.Proxy.purge(obj)" deletes from the model all Pipes and Elbows that belongs to the pype-line.  
* Remember that the object created outside the .Base won't be updated when the .Base is changed and the pypeline is redrawn and (except pipe and curves) won't be deleted if the pype-line is purged.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
This understood, the command opens the dialog to create or modify one pype-line.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
The dialog is very similar to those for insert other objects seen before.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
The pipe ratings tables, where the O.D. and thickness are defined, are the same of those for tubes (e.g. Pipe_SCH-STD.csv).
</div> 

<div lang="en" dir="ltr" class="mw-content-ltr">
When <new> is in the combo and '''Insert''' is pressed, a new pype-line object is created in the document with the relevant group.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
It is possible to create one pypeline in  three ways, according to the objects selected in the viewport when Insert is pushed:
* nothing is selected. One pype-line is created with property .Base = None and included in its group with the specified name and color (or default values). The piping objects to populate it can be created one-by-one with the commands seen above or alternatively a centerline can be selected afterwards with '''Get Profile''' and '''Redraw''' buttons.
* one DWire object is selected. It is automatically taken as Base and converted in a Path (orange, dash-dotted) and pipes and curves are drawn along it.
* a set of edges are selected (even not contiguous but anyway having intersections extending their ends). One Path is created connecting all the edges (see the Path tool in the Frame toolbar) and assigned as .Base to the newly created pype-line. Then pipes and curves are drawn on it as above.
After that it's still possible to add other objects (such as Flange, Reduct...) using the relevant insertion commands described above. When objects are created within a pype-line they are automatically included in the relevant group of the model and the common properties (i.e. O.D., thickness, color, bending radius etc.) are applied.
</div> 

<div lang="en" dir="ltr" class="mw-content-ltr">
If at least one pype-line is already in the model, that can be selected from the combo-box: in this case, pushing Insert creates the pipes and curves like described above but, instead of creating a new pype-line object, it adds them to the selected existing pype-line. Beware that the piping created in this way will be deleted at next '''Redraw'''.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
'''Get Path''', Get Profile and Color allow to change the .Base property, the nominal size and color of the object respectively.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
'''Redraw''' re-create tubes and curves along the .Base (if defined) after any modification to the path or the properties of the pype-line.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
'''Part list''' generates a .csv file with the bill of material of the piping object included in the pype-line selected in the combo.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
:9) Insert a PypeBranch
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
This pype object behave like a PypeLine except it automatically updates whenever the Base (a DWire or a SketchObject) is modified: that includes changing the placement, stretching, moving, adding or deleting edges. It is mainly intended to represent the secondary branches of the PypeLine (see the dedicated tutorial) but it can also act as a stand-alone object. 
This is an important task that allow to change quickly the layout of pipes but, as a drawback, its geometry is more rigidly defined. In other words, pipes can not be splitted or resized independently because they  will be eventually redrawn on the Base.
Changin the OD, thk or BendRadius of the PypeBranch, instead, will apply on all tubes and curves of it.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
:10) Insert a tank
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
[[#Links|See tutorial Part 4 (1/2)]]
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
:11) Insert a piperoute
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
[[#Links|See tutorial Part 4 (2/2)]]
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
:12) Break the pipe
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Opens a dialog to break one pipe at a defined point, optionally making a gap between the ends of the two parts. Multiple selection is possible.
</div> 

<div lang="en" dir="ltr" class="mw-content-ltr">
Insert in the '''Point''' text-box the length where the pipe or pipes are going to break: this can be an absolute value or just a percentage of the length (a numeral followed by %). In some case it's quicker to use the slide-bar at the bottom to change this value.
</div> 

<div lang="en" dir="ltr" class="mw-content-ltr">
The '''Length''' button allow to measure the length of the selected pipe and use that as the reference of the slide-bar scale.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
If it's needed just to break pipes in two, leave the '''Gap''' text-box to 0; otherwise define the length of the gap. If a reference length is choosen, also the gap can be defined as a percentage. As seen in the [https://github.com/oddtopus/flamingo/blob/master/tutorials tutorial], it's possible to measure the gap from geometries in the model with the '''Get gap''' button: that's the distance between any geometric entity or even the length of a single edge.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Pushing on '''Break''' performs the action.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
The Pypeline combo, as usual, allow to choose the group to which to assign the new objects created.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
:13) Mate pipes edges.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
When two circular edges belonging to different objects are selected, pressing this button will make the second object move to make the edges concentric and coplanar.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
This works not only with pipes.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
:14) Join the pypes
Joins the Ports of different objects in a graphical way. It works only among pype-objects, also from different workbenches,  where the Ports[] property is defined congruently.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
:15) Fit one elbow
Select 2 intersecting pipes + 1 elbow: executing this command, they will be joined. It works  only among pype-objects, also from different workbenches.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
:16) Extend pipes to intersection
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
By selecting two pipes, this command extend them both to their intersection point, if exists.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
:17) Extend pipe to intersection
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
By selecting two pipes, this command extend the first to the intersection with the other, if exists.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
:18) Lay-down the pipes
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
By selecting one face and multiple pipes, this command translates the pipe along the normal of the face in order to make them lie on its plane.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
:19) Raise-up the support
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Similar to the tool above but in this case is the support that is raised or lowered, so that the face is tangent to the pipe.
:20) Attach to tube
Attaches a pype object (2, 3, 4, 5 or 6) rigidly to the nearest end of a pipe (1).
To detach, click on the button while the attached object is selected alone.
:21) Create pipes point-to-point
Opens a dialog similar to "Draw a DWire" together with the dialog of "Insert a pipe": this allows to draw a sequence of pipes, connected by curves, just selecting one point after the other. It is also allowed to change properties of the pipe and/or the pype-line on the fly.
:22) Insert Any Shape
This is a tool to create a "pype" object from a .STEP or .IGES or .BREP file. It loads the imported file into the Shape property of a FeaturePython.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
==Utilities==
</div>

<div class="center" style="width: auto; margin-left: auto; margin-right: auto;">[[Image:Flamingos_utils.jpg]]</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
:1) Make a polygon
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
The first two tools of utils are part of a separate project which aims to create an automatic scanner of rooms with a stepper motor and an ultrasonic distance meter.
This tool creates one regular polygon inside a sketch.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
:2) Polygon from file
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Tool to create any polygon inside a sketch taking vertexes from a .csv file, where they are stored in polar coordinates.
 
:3) Query the model
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Tool to get various informations according to the object or objects selected. Beside length or distances, it is specifically suited to give informations related to beams and pipes (length, section, angle-between).
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
:4) Align workplane
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Tool to set the position and rotation of working plane according to the selected existing geometry.
</div> 

<div lang="en" dir="ltr" class="mw-content-ltr">
The normal of working plane is defined scanning the elements in the following order:
# the normal of a face
# the normal of the plane of a curve
# the normal of the plane containing two segments
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
The origin of working plane is defined (in order) by
# one vertex
# the center of curvature of a line
# the intersection of two lines
# the center of an edge
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
:5) Offset workplane
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Shifts the working plane along its normal vector. 
To show the direction of offset, a temporary green arrow is displayed on the screen. Clearly also negative values are allowed.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
:6) Rotate workplane
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Rotates the working plane around one of its axis.
Also in this case a green arrow is displayed in the viewport to identify the present orientation of the WP: the arrow is pointed in the Z direction and the long base of the arrow is layed over the X direction.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
:7) Draw a DWire
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
This tool works exactly like the corresponding tool of Draft workbench but with few additional options at the end of the dialog.
As default, the origin of working plane is redefined at each point added because this makes simpler to draw segments of known length and orientation using the snap-to-grid option.
Then two push-buttons, invoked also with the short-key Ctrl+Shift+(), allow to rotate and offset the working plane as seen above without breaking the DWire object.
The last three buttons allow to quickly change the rotation of working plane to be parallel to the principal planes.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
:8) Quick move objects
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
To move quickly any part, to access the underlying objects for instance, this tool provides a graphic handle (green arrow) by clicking on which it's possible to displace and rotate the selected objects.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
:9) Pressure loss calculator
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Opens one dialog to calculate the pressure losses across the pype-parts selected in the viewport or across one PypeBranch.
The friction coefficient is calculated for each straight tube and elbow. For other objects the concentrated pressure loss is calculated through the flow factor, provided that the attribute Kv is available and set to a positive value.
</div>

<span id="Links"></span>
==Verweise==

* Forum: [https://forum.freecad.org/viewtopic.php?f=8&t=17035 Neuer Arbeitsbereich für Metallkonstruktionen] (Ankündigung)
* Forum: [https://forum.freecad.org/viewtopic.php?t=22711 Arbeitsbereiche Flamingo & Dodo - discussion thread]
* Tutorien: [https://github.com/oddtopus/flamingo/tree/master/tutorials flamingo/tutorials]

* Video Tutorien: 
** [https://www.youtube.com/watch?v=_Or91gdBLMU Einfaches Video-Tutorial zur Rahmenerstellung mit Rohren]
** [https://www.youtube.com/watch?v=cBj0umlvzAk Teil 1: So erstellen Sie Rohrleitungen]
**[https://www.youtube.com/watch?v=e81PpWY5L00 Teil 2: Rahmen, Halterungen, Flansche und importierte Komponenten]
**[https://www.youtube.com/watch?v=IqEccmsg5dU Teil 3: Zeichnen eines Gebäudes mit vier Skizzen (und einer Reihe anderer Features)]
** [https://www.youtube.com/watch?v=aPF8SS_1Aqo Teil 4 (1/2): Auslegung des Pumpenraums und Rohrleitungsplan]
** [https://www.youtube.com/watch?v=iGnW88x9bKQ Teil 4 (2/2): Import von Pumpenräumen im Gebäude und Rohrleitungsbau]
* Fehler melden:
**[https://github.com/oddtopus/flamingo/issues Flamingo GitHub Problem Warteschlange]
**[https://github.com/oddtopus/dodo/issues Dodo GitHub Problem Warteschlange]

<span id="Other_useful_links"></span>
==Andere nützliche Verknüpfungen==

* [[External_workbenches/de|Externe Arbeitsbereiche]]
* [[Macros_recipes/de|Makro Rezepte]]
* [https://wiki.opensourceecology.org/wiki/OSE_Piping_Workbench Arbeitsbereich OSE-Rohrleitung: um zusätzliche Rohrverbindungen zu erstellen]


<span id="External_workbenches"></span>
== Externe Arbeitsbereiche ==

FreeCAD Arbeitsbereiche sind einfach zu programmieren in [[Python/de|Python]], daher gibt es viele Leute, die zusätzliche Arbeitsbereiche außerhalb der FreeCAD Hauptentwickler entwickeln.

Die [[external workbenches]] Seite enthält einige Informationen und Tutorials zu einigen von ihnen, und das [https://github.com/FreeCAD/FreeCAD-addons FreeCAD Addons] Projekt zielt darauf ab, sie zu sammeln und einfach aus FreeCAD heraus zu installieren.

Neue Arbeitsbereiche sind in Entwicklung, bleib dran!

{{Userdocnavi{{#translation:}}}}
[[Category:Addons{{#translation:}}]]
[[Category:External Workbenches{{#translation:}}]]