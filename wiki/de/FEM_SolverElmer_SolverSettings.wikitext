<languages/>
{{TOCright}}

Auf dieser Seite werden die möglichen Einstellungen für den [[FEM_SolverElmer|Löser Elmer]] beschrieben.

<span id="General"></span>
==Allgemein==

Elmer ist ein multiphysikalischer Löser. Daher können mehrere Hauptgleichungen zur Lösung von Problemen verwendet werden. Die verschiedenen Gleichungen sind [[FEM_SolverElmer/de#About_Equations|hier]] aufgelistet.

Es gibt Löser-Einstellungen, die für alle Gleichungen verfügbar sind. Diese werden hier beschrieben. Einstellungen, die nur für eine bestimmte Gleichung verfügbar sind, werden auf den Seiten der entsprechenden Gleichung beschrieben.

Elmer bietet die [[#Type|Lösungstypen]] ''stationärer Zustand'' und ''vorrübergehend'' und zwei weitere Lösungssysteme, [[#Linear_System|lineares System]] und [[#Nonlinear_System|nichtlineares System]]. Das nichtlineare System wird verwendet für die [[Image:FEM_EquationFlow.svg|24px]] [[FEM_EquationFlow/de|Strömungsgleichung]] and [[Image:FEM_EquationHeat.svg|24px]] [[FEM_EquationHeat/de|Wärmegleichung]].

<span id="Editing_Settings"></span>
=Einstellungen bearbeiten=

Die Löser-Einstellungen findet man in dem [[Property_editor/de|Eigenschaften-Editor]] nachdem man auf eine Gleichung in der [[Tree_view/de|Baumansicht]] geklickt hat. Dort können sie wie jede andere Eigenschaft direkt bearbeitet werden.

<span id="Solver"></span>
==Löser==

<span id="Coordinate_System"></span>
===Koordinatensystem===

The default coordinate system is ''Cartesian 3D''. For some equations, not all coordinate systems can be can be used. This is noted on the Wiki pages of the corresponding equations.

<span id="Timestepping_(transient_analyses)"></span>
===Zeitschritte (Transienten-Analysen)===

'''Hinweis''': FreeCAD 0.20.x bietet bereits die folgenden Einstellungen, aber es wird nur das letzte Zeit-Ergebnis ausgegeben. Ab FreeCAD 0.21 erhält man eine Ausgabe für die verschiedenen Zeiten.

Für transiente Analysen müssen die Zeitschritte definiert werden. Dies erfolgt über die folgenden Einstellungen:

* {{PropertyData|BDFOrder}}: Order for the method ''BDF'' ([https://en.wikipedia.org/wiki/Backward_differentiation_formula Backward Differentiation Formula]). It is recommended to use the default of ''2''.
* {{PropertyData|Output Intervals}}: An array of intervals. A solver result file will be output every interval time step. For example, if a result file should be output every third time step, set it to ''3''. The array corresponds to the {{PropertyData|Timestep Intervals}}.</br>'''Note:''' The first result in every case will be created for the first time step. To get for example results after 25 % of the total time and if the last result should be the final time, set {{PropertyData|Output Intervals}} to ''5'' and {{PropertyData|Timestep Intervals}} to ''21''. {{Version|0.21}}
* {{PropertyData|Timestep Intervals}}: An array of time intervals (number of timesteps). The solver will perform one time interval after another. For example, if the solver should calculate the first 10 seconds in steps of 0.1 second, then 50 seconds in steps of 1 second and then stop, you need to set the timestep intervals [100, 50] and the timestep size intervals [0.1, 1.0].
* {{PropertyData|Timestep Sizes}}: An array of timestep sizes. The time unit is second. The array corresponds to the {{PropertyData|Timestep Intervals}}.

'''Notes:'''
* To achieve the desired total time of a transient analysis, set the proper number and size of timesteps. For example, to simulate 50 seconds of a process in steps of 10 seconds, you need 5 such timesteps. Thus, set Timestep Intervals to [5] and Timestep Sizes to [10].
* Although the terms "times" and "seconds" are used, the times are actually solver progressions if the analysis is not time-dependent.

Informationen zur Visualisierung der Ergebnisse findet man unter [[FEM_SolverElmer/de#Visualisierung|Elmer-Visualisierung]].

<span id="Type"></span>
===Typ===

* {{PropertyData|Simulation type}}: If the simulation is ''Steady state'', ''Transient'' or just ''Scanning''. Transient means the development over the solver time is calculated. See section [[#Timestepping_(transient_analyses)|Timestepping]] for the necessary settings.
* {{PropertyData|Steady State Max Iterations}}: The maximum number of steady-state solver runs.
* {{PropertyData|Steady State Min Iterations}}: The minimum number of steady-state solver runs.

<span id="Equation"></span>
==Gleichung==

<span id="Base"></span>
===Basis===

Alle Gleichungen haben diese Eigenschaften:
* {{PropertyData|Bezeichnung}}: Name der Gleichung in der Baumansicht.
* {{PropertyData|Priorität}}: Zahl, die die Priorität dieser Gleichung gegenüber den anderen Gleichungen in der Analyse bestimmt. Die Gleichung mit der höchsten Zahl in der Analyse wird zuerst gelöst. Wenn zwei Gleichungen dieselbe Prioritätszahl haben, wird diejenige zuerst gelöst, die in der Baumansicht an erster Stelle steht.
* {{PropertyData|Stabilisieren}}: Wenn auf "true" gesetzt, verwendet der Solver die stabilisierte Finite-Elemente-Methode zur Lösung der Wärmeleitungsgleichung mit einem Konvektionsterm. Wenn auf "false" gesetzt, wird stattdessen die Residual Free Bubble (RFB)-Stabilisierung verwendet. Wenn die Konvektion dominiert, muss die Stabilisierung verwendet werden, um die Gleichung erfolgreich zu lösen.

<span id="Linear_System"></span>
===Lineares System===

This system has the following properties:
* {{PropertyData|BiCGstabl Degree}}: Polynomial degree for the iterative solver method ''BiCGStabl ''. This has only an effect if {{PropertyData|Linear Solver Type}} is ''Iterative'' and {{PropertyData|Linear Iterative Method}} is ''BiCGStabl''. Starting with the default of 2 is recommended.
* {{PropertyData|Idrs Parameter}}: Parameter for the iterative solver method ''Idrs ''. This has only an effect if {{PropertyData|Linear Solver Type}} is ''Iterative'' and {{PropertyData|Linear Iterative Method}} is ''Idrs''. Starting with the default of 2 is recommended. Setting the parameter to 3 might increase the solving speed a bit. For flow analyses the ''Idrs'' method is up to 30&nbsp;% faster than the default ''BiCGStab'' method.
* {{PropertyData|Linear Direct Method}}: Method used for direct solving. This has only an effect if {{PropertyData|Linear Solver Type}} is ''Direct''.</br>The possible methods are ''Banded'', ''MUMPS'' and ''Umpfpack''. Note that ''MUMPS'' usually needs to be installed before you can use it.</br>'''Note''': when you use more than one CPU core for the solver ({{Version|0.21}}) only ''MUMPS'' can be used. [https://mumps-solver.org/ MUMPS] has to be installed manually to Elmer. It is only available as a download per request via email.
* {{PropertyData|Linear Iterations}}: Maximal number of iterations for an iterative solver run. This has only an effect if {{PropertyData|Linear Solver Type}} is ''Iterative''.
* {{PropertyData|Linear Iterative Method}}: Method used for iterative solving. This has only an effect if {{PropertyData|Linear Solver Type}} is ''Iterative''.
* {{PropertyData|Linear Preconditioning}}: Method used for the preconditioning. For info about preconditioning, see [http://www.nic.funet.fi/index/elmer/slides/ElmerLinearSolvers.pdf this presentation] (page 8) from Elmer. 
* {{PropertyData|Linear Solver Type}}: If the solving is done ''Direct'' or ''Iterative''.
* {{PropertyData|Linear System Solver Disabled}}: Disables the linear solver. Only use this for special cases.</br>It can be used to disable temporarily an equation since its solving is then not performed. There are, however cases where the solver is sent into an infinite loop instead.
* {{PropertyData|Linear Tolerance}}: The tolerance for the solver to stop. If the error is smaller than the tolerance, the solver run will be finished. Otherwise, the full number of {{PropertyData|Linear Iterations}} will be performed.</br>In the Elmer solver log you see how the error is minimized while the solver is running. (Look in the log at the end of every solver iteration for the value behind ''Relative Change''). If it does not go down below a certain value but reaches a value above the current tolerance that is acceptable for you, you can increase the tolerance.

<span id="Nonlinear_System"></span>
===Nichtlineares System===

Dieses System ist iterativ und hat die folgenden Eigenschaften:

* {{PropertyData|Nonlinear Iterations}}: Maximal number of iterations.
* {{PropertyData|Nonlinear Newton After Iterations}}: The nonlinear solver starts with the robust ''Picard'' algorithm. After some iterations, the algorithm is changed to the ''Newton'' algorithm which converges faster but is less robust if the results temporarily diverge (oscillations might occur). This setting sets the number of iterations after which the switch from the ''Picard'' to the ''Newton'' algorithm is made.</br>'''Note''': the switch is made whatever is reached first, {{PropertyData|Nonlinear Newton After Iterations}} or {{PropertyData|Nonlinear Newton After Tolerance}}.
* {{PropertyData|Nonlinear Newton After Tolerance}}: The same as {{PropertyData|Nonlinear Newton After Iterations}} but here a tolerance is set. The tolerance is the norm of the nonlinear residual. If this is reached, the switch from the ''Picard'' to the ''Newton'' algorithm is made.
* {{PropertyData|Nonlinear Tolerance}}: The tolerance for the solver to stop. If the error is smaller than the tolerance, the solver run will be finished. Otherwise, the full number of {{PropertyData|Nonlinear Iterations}} will be performed.</br>In the Elmer output you see how the error is minimized while the solver is running. If it does not go down below a certain value that is acceptable but above the current tolerance, you can increase the tolerance.
* {{PropertyData|Relaxation Factor}}: This is THE most important setting in case the solver does not converge:

<span id="Relaxation_Factor"></span>
====Entspannungsfaktor====

If the solver iteration results oscillate numerically, the solver results cannot converge to a final, stable value. To avoid that, the calculated variable <math>T_{i}</math> of the i-th iteration/solver run is not taken as input for the next iteration, but <math>T_{i}^{'}</math>, a value that is "damped" with the result from the previous iteration. The relaxation factor <math>\lambda</math> is thereby defined as

<math>\quad
T_{i}^{'} = \lambda T_{i}+\left(1-\lambda\right)T_{i-1}
</math>

So for the default of 1.0, no damping is used. The smaller <math>\lambda</math>, the greater the damping and the longer the convergence time. Therefore if the solver does not converge, start changing the relaxation factor to 0.9, then to 0.8 and so on. Values below 0.3 are unusual and if you need this, you should have a closer look to the math of your analysis.</br>
For cases, where you get a proper convergence you can set <math>\lambda</math> above 1.0 to speed the convergence up.

<span id="Steady_State"></span>
===Stationärer Zustand===

This part of the settings has only one property:
* {{PropertyData|Steady State Tolerance}}: The specific steady state or coupled system convergence tolerance. All the equation solvers must meet their own tolerances for the variable  <math>\omega^2</math> they calculate before the whole system is deemed converged. The tolerance criterion is:
<math>\quad
\left\Vert u_{i}-u_{i-1}\right\Vert <\epsilon\left\Vert u_{i}\right\Vert 
</math>

whereas  <math>\epsilon</math> is the steady state tolerance and <math>u_{i}</math> is the calculated variable in the i-th iteration/solver run.


 
{{FEM_Tools_navi{{#translation:}}}}
{{Userdocnavi{{#translation:}}}}