<languages/>

{{Macro/de
|Name=Zeichenstil umschalten
|Icon=Macro_Toggle_Drawstyle.png
|Description=Bei der Arbeit mit FreeCAD gibt es Situationen, in denen der Zeichenstil des Objekts, mit dem gearbeitet wird, schnell geändert werden soll. Dies ist über das Pulldown-Menü Zeichenstil möglich, in dem jeder beliebige Zeichenstil ausgewählt werden kann. Dieses Makro macht zwei der Zeichenstile als anklickbare Schaltfläche in einer Symbolleiste verfügbar, auf die der Benutzer klicken kann, um zwischen den beiden Zeichenstilen hin und her zu wechseln. Der Benutzer kann den Makrocode ändern, um auszuwählen, zwischen welchen beiden Zeichenstilen er wechseln möchte. Dadurch werden keine Funktionen hinzugefügt, die im Pulldown-Menü Zeichenstil fehlen, sondern lediglich der Komfort erhöht.
|Author=Piffpoof
|Version=2.0
|Date=2020-02-02
|FCVersion=0.17 und höher
|Download=[https://wiki.freecad.org/images/0/0b/Macro_Toggle_Drawstyle.png Werkzeugleisten-Symbol]
|SeeAlso=[[Macro_Toggle_Drawstyle_Optimized/de|Makro Zeichenstil umschalten Optimiert]] für alle Sprachen
}}

<span id="Description"></span>
==Beschreibung==

Bei der Arbeit mit FreeCAD gibt es Situationen, in denen Sie den Zeichenstil des Objekts, mit dem Sie arbeiten, schnell ändern möchten. Dies ist über das Pulldown-Menü „Zeichenstil“ möglich, in dem jeder beliebige Zeichenstil ausgewählt werden kann. Dieses Makro macht zwei der Zeichenstile als anklickbare Schaltfläche in einer Symbolleiste verfügbar, auf die der Benutzer klicken kann, um zwischen den beiden Zeichenstilen hin und her zu wechseln. Der Benutzer kann den Makrocode ändern, um auszuwählen, zwischen welchen beiden Zeichenstilen er wechseln möchte. Dadurch werden keine Funktionen hinzugefügt, die im Pulldown-Menü „Zeichenstil“ fehlen, sondern lediglich der Komfort erhöht.

==Installation==

Die Installation besteht darin, die beiden Codes in das entsprechende Makroverzeichnis zu kopieren und sie über das Makro-Menü aufzurufen. Es ist sehr empfehlenswert, sie beide zu einer Symbolleiste hinzuzufügen, damit sie leichter zugänglich sind.
* Informationen zur Installation dieses Makro-Codes finden Sie unter [[How_to_install_macros/de|Wie man Makros installiert]].
* Informationen zur Installation als Schaltfläche in einer Symbolleiste finden Sie unter [[Customize_Toolbars/de|Symbolleisten anpassen]].

<span id="Usage"></span>
==Anwendung==

Wähle ein Objekt aus, klicke dann auf die entsprechende Schaltfläche in der Symbolleiste oder rufe die Funktion über das Menü „Makro“ auf. Der Zeichenstil des ausgewählten Objekts wechselt zwischen den beiden im Makrocode angegebenen Zeichenstilen (siehe Code-Auflistung unten).

'''Hinweis''': Die Spezifikation für jeden Zeichnungsstil ist im Code aufgeführt. Durch Ändern des Codes (der im Makrocode dokumentiert ist) kann der Benutzer auswählen, zwischen welchen beiden Zeichnungsstilen umgeschaltet werden soll.

<span id="User_Interface"></span>
==Benutzeroberfläche==

Das ausgewählte Objekt wird in dem anderen, im Makro angegebenen Zeichenstil neu gezeichnet.

Skript optimiert für alle Sprachen und für ausgewählte Objekte oder alle Objekte [https://forum.freecad.org/viewtopic.php?f=3&t=14336&start=40#p146239 Keyboard shortcut, View toolbar - Wireframe] (Sonntag, 27. November 2016, 18:49 Uhr)

<span id="Script"></span>
==Skript== 

Werkzeugleistensymbol [[Image:Macro_Toggle_Drawstyle.png]]

'''Macro Toggle Drawstyle.FCMacro'''

{{MacroCode|code=
# -*- coding: utf-8 -*-
#
#
#			Macro: Toggle Draw Style
#
# This macros allows the user to switch between different Drawstyles by clicking on
# the button of a Macro in a toolbar.
#
# initial code:		triplus
# macro-isation:	piffpoof
#
# This macro switches (or toggles) between 2 selected styles from the Drawstyle menu.
# As written the macro toggles between "WireFrame" and "As is".
# Immediately below this text is a list of the legal values for the Drawstyle menu.
# The first 2 lines of executable code are of the form "DrawstyleA = " followed by
# the 2nd line which is of the form "DrawstyleB = ".
# These 2 lines specify which of the Drawstyle values the macro will toggle between.
# Drawstyle "As is" is the system default and so is specified as the first drawstyle.
# The second line specifies which drawstyle will be toggled to and from.
# Any of the legal values may be used, so if, for example, it is desired to toggle between
# the Shaded and Points drawstyles, then the 2 lines of code would be modified to be:
#
# drawstyleA = "Shaded"
# drawstyleB = "Points"
#
# but remember that the hash signs ('#') are not to be present on the executable lines.
#
###Legal Values for Drawstyle###
#
# 0 = "As is"
# 1 = "Flat lines"
# 2 = "Shaded
# 3 = "Wireframe"
# 4 = "Points"
# 5 = "Hidden line"
# 6 = "No shading"
#
################################

# triplus @ 2016, 2020
# Toggle global display mode
# ==============================

# 0 = "As is"
# 1 = "Flat lines"
# 2 = "Shaded
# 3 = "Wireframe"
# 4 = "Points"
# 5 = "Hidden line"
# 6 = "No shading"

styleA = 0
styleB = 3

# ==============================

from PySide import QtGui
import FreeCADGui as Gui

mw = Gui.getMainWindow()


act = {
    0: mw.findChild(QtGui.QAction, "Std_DrawStyleAsIs"),
    1: mw.findChild(QtGui.QAction, "Std_DrawStyleFlatLines"),
    2: mw.findChild(QtGui.QAction, "Std_DrawStyleShaded"),
    3: mw.findChild(QtGui.QAction, "Std_DrawStyleWireframe"),
    4: mw.findChild(QtGui.QAction, "Std_DrawStylePoints"),
    5: mw.findChild(QtGui.QAction, "Std_DrawStyleHiddenLine"),
    6: mw.findChild(QtGui.QAction, "Std_DrawStyleNoShading"),
}


actionA = act[styleA]
actionB = act[styleB]


if actionA.isChecked():
    actionB.trigger()
else:
    actionA.trigger()

}}

<span id="Link"></span>
==Verweis==

Diskussion im FreeCAD-Forum: [https://forum.freecad.org/viewtopic.php?f=3&t=14336 Keyboard shortcut, View toolbar - Wireframe]

{{clear}}