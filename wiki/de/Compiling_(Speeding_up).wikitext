<languages/>

{{Docnav/de
|[[FreeCAD_Docker_CLI_mode/de|FreeCAD Docker CLI Modus]]
|[[Third_Party_Libraries/de|Drittanbieter Bibliotheken]]
}}

{{TOCright}}

<span id="Overview"></span>
==Übersicht== 

FreeCAD ist eine große Anwendung, deren vollständige Kompilierung aus dem Quellcode zwischen 10 Minuten und einer Stunde dauern kann. Dies hängt in erster Linie von der CPU ab, die du hast, und von der Anzahl der Kerne, die im Kompilierungsprozess verwendet werden. Hier sind einige Tipps, um diesen Prozess zu verkürzen und die Erstellungszeiten zu verkürzen.

<span id="CCache"></span>
==CCache==

Installiere {{incode|ccache}} zur Bau Zwischenspeicherung.

[https://ccache.dev/ Ccache] beschleunigt die Rekompilierung mittels Caching vorhergehender Kompilierungen und detektiert, wenn die gleiche Kompilierung erneut ausgeführt wird. Ccache ist Freie Software, veröffentlicht unter GPLv3 oder später.

Auf den meisten Systemen wird ccache automatisch erkannt und aktiviert. Es kann die Option {{incode|FREECAD_USE_CCACHE}} {{incode|cmake}} zum kontrollieren dieses Verhaltens genutzt werden.

<span id="Disable_modules"></span>
==Module deaktivieren==

Wenn {{incode|cmake}} zur Konfiguration der Bauten verwendet werden, kannst du die Kompilierung bestimmter Arbeitsbereiche deaktivieren, die du im Moment möglicherweise nicht benötigst. Dies ist nützlich, wenn du nur einige wenige Arbeitsbereiche testen musst.

Zum Beispiel, um den Bau der FEM- und Polygonnetz Arbeitsbereiche zu vermeiden:

{{Code|code=
cmake -DBUILD_FEM=OFF -DBUILD_MESH=OFF ../freecad-source
}}

Verwende {{incode|cmake-gui}}, {{incode|cmake-curses-gui}}, oder {{incode|cmake-qt-gui}}, um alle möglichen Variablen anzuzeigen, die in der Konfiguration bearbeitet werden können; über diese Schnittstellen kannst du verschiedene Arbeitsbereiche leicht ein- oder ausschalten.

<span id="Number_of_jobs_in_parallel"></span>
==Anzahl der parallelen Aufträge==

Nach der Konfiguration mit {{incode|cmake}} startet das Programm {{incode|make}} den eigentlichen C++-Compiler, um an den Quelltextdateien zu arbeiten. Du kannst die Kompilierung beschleunigen, indem du an verschiedenen Dateien gleichzeitig arbeitest. Dies wird mit der Option {{incode|-j}} von {{incode|make}} erreicht, die die Anzahl der gleichzeitig ausgeführten "Jobs" oder Kompilierungsbefehle angibt. Diese Option ist eine Ganzzahl.

Führe vier Kompilierungsbefehle parallel aus:

{{Code|code=
make -j4
}}

Kompiliere so viele Dateien parallel wie die Anzahl der CPU-Kerne in Deinem System. Dies ist nützlich, wenn Du viele Kerne hast und diese alle zum Kompilieren der Software verwenden möchtest.

{{code|code=
make -j$(nproc)
}}

Kompiliere so viele Dateien parallel wie die Anzahl der CPU-Kerne in Deinem System, minus zwei. Verwende dies, damit Dein System immer noch auf eine andere Aufgabe reagiert, z.B. zwei Kerne, die es Dir ermöglichen, einen Browser zu verwenden, während der Rest der Kerne die Software im Hintergrund kompiliert.

{{code|code=
make -j$(nproc --ignore=2)
}}

<span id="distcc"></span>
==distcc==

Das Programm {{incode|distcc}} kann verwendet werden, um eine verteilte Kompilierung von C- und C++-Code über mehrere Maschinen in einem Netzwerk durchzuführen.

[https://www.distcc.org/ Distcc] sollte immer die gleichen Ergebnisse wie eine lokale Kompilierung erzeugen. Es ist frei, einfach zu installieren und oftmals mehr als doppelt so schnell wie eine lokale Kompilierung.

Der FreeCAD-Entwickler 'etrombly' hat eine kurze Erklärung veröffentlicht. Siehe [https://forum.freecad.org/viewtopic.php?f=4&t=50810&p=459142#p458614 how to install distcc to compile FreeCAD on a network of computers using Docker]


{{Docnav/de
|[[FreeCAD_Docker_CLI_mode/de|FreeCAD Docker CLI Modus]]
|[[Third_Party_Libraries/de|Drittanbieter Bibliotheken]]
}}

{{Userdocnavi{{#translation:}}}}
[[Category:Developer_Documentation{{#translation:}}]]
[[Category:Developer{{#translation:}}]]