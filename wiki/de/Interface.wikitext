<languages/>
{{TOCright}}

<span id="Introduction"></span>
==Einleitung==

Die FreeCAD-[[interface/de|Oberfläche]] (auch als Benutzerschnittstelle bezeichnet) basiert auf Qt, einem bekannten Werkzeugsatz für grafische Benutzerschnittstellen (GUIs), der insbesondere unter Linux eingesetzt wird, aber auch unter Windows und MacOS zur Verfügung steht.

[[File:FreeCAD_interface_base_divisions.png|1024px]]

{{Caption|Standard-Oberfläche in Version 0.19.}}

Das Hauptfenster der Anwendung kann grob in 11 Bereiche unterteilt werden:
# Der [[main_view_area/de|Hauptansichtsbereich]], der verschiedene Registerkartenfenster enthalten kann.
# Die [[3D_view/de|3D-Ansicht]], normalerweise eingebettet in den [[main_view_area/de|Hauptansichtsbereich]].
# Der obere Teil der [[combo_view/de|Combo-Ansicht]], der die  [[tree_view/de|Baumansicht]] und den [[task_panel/de|Aufgaben-Bereich]] beinhaltet.
# Der untere Teil der [[combo_view/de|Combo-Ansicht]], der den [[property editor/de|Eigenschafteneditor]] beinhaltet.
# Die [[selection_view/de|Auswahlansicht]].
# Das [[report_view/de|Ausgabefenster]].
# Die [[Python_console/de|Python-Konsole]].
# Die [[status_bar/de|Statusleiste]].
# Der Symbolleistenbereich, siehe folgende Informationen zu den Symbolleisten.
# Die Auswahlliste der [[Std_Workbench/de|Arbeitsbereiche]], die selbst eine Symbolleiste ist.
# Das [[Standard_Menu/de|Standardmenü]].

<span id="Components_of_the_interface"></span>
==Komponenten der Oberfläche==

Wie viele andere Programme enthält FreeCAD eine Standardmenüleiste und eine Reihe von Symbolleisten und Fenster, in denen sich die Anwenderwerkzeuge befinden.

<span id="Menus"></span>
===Menüs===

Das [[Standard_Menu/de|Standardmenü]] enthält: {{StdMenu|[[Std_File_Menu/de|{{MenuCommand|Datei}}]]}}, {{StdMenu|[[Std_Edit_Menu/de|{{MenuCommand|Bearbeiten}}]]}}, {{StdMenu|[[Std_View_Menu/de|{{MenuCommand|Ansicht}}]]}}, {{StdMenu|[[Std_Tools_Menu/de|{{MenuCommand|Werkzeuge}}]]}}, {{StdMenu|[[Std_Macro_Menu/de|{{MenuCommand|Makro}}]]}}, {{StdMenu|[[Std_Windows_Menu/de|{{MenuCommand|Fenster}}]]}}, {{StdMenu|[[Std_Help_Menu/de|{{MenuCommand|Hilfe}}]]}}.

<span id="Toolbars"></span>
===Symbolleisten===

Die Symbolleisten, die standardmäßig in der Oberfläche dargestellt werden, sind:
* Symbolleiste Datei: Werkzeuge zum Arbeiten mit Dateien, Öffnen von Dokumenten, Kopieren, Einfügen, Rückgängigmachen und Wiederherstellen von Aktionen.
* Symbolleiste [[Std_Workbench/de|Arbeitsbereich]]: Sie enthält ein einziges Widget zur Auswahl des aktiven [[workbenches/de|Arbeitsbereiches]].
* Symbolleiste Makro: Werkzeuge zum Aufzeichnen, Bearbeiten und Ausführen von [[macros/de|Makros]].
* Symbolleiste Ansicht: Werkzeuge zur Steuerung der Darstellung von Objekten in der  [[3D_view/de|3D-Ansicht]].
* Symbolleiste Struktur: Werkzeuge zum Ordnen von Objekten im Dokument und zum Erstellen von Verknüpfungen zu weiteren Dokumenten.

Diese können ein- und ausgeschaltet werden, durch Rechtsklick auf eine leere Stelle in einer der Symbolleisten und Auswahl des gewünschten Elements oder über das Menü {{MenuCommand|Ansicht → Symbolleisten}}.

<span id="Panels"></span>
===Fenster===

Die Hauptfenster, die das Arbeiten mit Objekten ermöglichen, sind:
* [[3D view/de|3D-Ansicht]]: Der Bereich, in dem 2D- und 3D-Geometrie gezeichnet wird.
* [[Combo view/de|Combo-Ansicht]]: Das Fenster, das die [[tree view/de|Baumansicht]], den [[task panel/de|Aufgaben-Bereich]] und den [[property editor/de|Eigenschafteneditor]] enthält.
* [[Tree view/de|Baumansicht]]: Das Element, das alle Objekte im Dokument und ihre parametrische Historie anzeigt.
* [[Task panel/de|Aufgaben-Bereich]]: Das Fenster, das je nach ausgewähltem Zeichenwerkzeug verschiedene Aktionen und Optionen anzeigt.
* [[Property editor/de|Eigenschafteneditor]]: Der Bereich, in dem Objekteigenschaften geändert werden.
* [[Selection view/de|Auswahlansicht]]: Das Fenster, das die aktuell ausgewählten Elemente anzeigt.
* [[Report view/de|Ausgabefenster]]: Das Textfeld, in dem verschiedene Meldungen der Anwendung und ihrer Werkzeuge angezeigt werden.
* [[Python console/de|Python-Konsole]]: Der Editor, der ermöglicht, [[Python/de|Python]]-Code interaktiv auszuführen, um die Ergebnisse in der [[3D view/de|3D-Ansicht]] anzusehen.
* [[Status bar/de|Statusleiste]]: Die Leiste, die bestimmte Nachrichten der Anwendung anzeigt und ein Schaltfläche zur Auswahl der [[Mouse_navigation/de|Mausnavigation]] enthält.
* [[DAG view/de|DAG-Ansicht]]: Eine Alternative zur [[tree view/de|Baumansicht]], die die Beziehungen zwischen verschiedenen Objekten in einem Diagramm anzeigt.

Mit Ausnahme der 3D-Ansicht können alle Fenster ein- und ausgeschaltet werden, indem man mit der rechten Maustaste auf einen leeren Bereich in einer der oberen Symbolleisten klickt und das gewünschte Element auswählt oder im Menü {{MenuCommand|Ansicht → Fenster}}.

Zum Aktivieren und Deaktivieren der Statusleiste wird im Menü {{MenuCommand|Ansicht → Statusleiste}} ausgewählt.

<span id="Other"></span>
=== Andere ===

Weitere nützliche Oberflächen und Fenster enthalten:
* [[Std_SceneInspector/de|Scene-Inspector]]: Ein Fenster, das die Coin3D-Knoten anzeigt, aus denen sich der [[Scenegraph/de|Szenengraph]] zusammensetzt. Erfahrenen Anwendern und Entwicklern kann es bei der Fehlerbeseitigung helfen, in Vorgängen, die die Szene direkt manipulieren und in Objekten, die in der [[3D_view/de|3D-Ansicht]] erstellt wurden.
* [[Std_DependencyGraph/de|Abhängigkeitsdiagramm]]: Ein Fenster, das das Abhängigkeitsdiagramm aller Objekte im Dokument anzeigt, das mit dem Hilfsprogramm [https://graphviz.org/ Graphviz] erstellt wird. Es unterstützt dabei, Probleme bei der Erstellung von Objekten zu erkennen, wie z.B. zirkuläre Abhängigkeiten, die aus der [[Tree_view/de|Baumansicht]] oder der [[DAG_view/de|DAG-Ansicht]] nicht ganz ersichtlich sind.

<span id="Customization"></span>
=== Anpassung ===

Symbolleisten können unterschiedlich viele Schaltflächen enthalten; selbsterstellte Symbolleisten können mit einer Mischung aus verschiedenen Werkzeugen zusammengestellt werden und Makros enthalten.

Diese Optionen befinden sich im Menü unter {{MenuCommand|Werkzeuge → Benutzerdefiniert}}. Siehe [[Interface Customization/de|Anpassen der Oberfläche]].

== Dock panel overlay ==

{{Version|1.0}}

[[File:Dock_Panel_Overlay.png|alt=Dock panel overlay enabled, showing transparent and auto-hidden panels|thumb|Dock panel overlay enabled, showing transparent and auto-hidden panels]]

The dock panel overlay system is a feature to maximize the space available for the [[3D_view|3D view]]. It transforms standard docked panels, like the [[Combo_view|Combo View]], into floating, transparent widgets that sit on top of the 3D view. This allows the 3D view to expand and use the space the panels previously occupied. The overlay panels become fully opaque and interactive when the mouse hovers over them, and transparent again when the mouse moves away, even enabling clicking through them to interact with the model.

The main switch for this feature is the {{MenuCommand|[[Std_DockOverlayAll|Toggle overlay for all]]}} command. Additional commands are available for more granular control.

=== Overlay Modes ===

Each panel in the overlay system can be set to a different mode, allowing for a customized workflow. These settings are available by clicking the overlay mode button ([[File:Overlay Mode.svg]]) in the title bar of an overlay panel.

* '''None''': This is the default mode. The panel remains visible but transparent when not in use, and becomes opaque on mouse-over. It provides a good balance between access to tools and 3D view space.

* '''Auto hide''': This mode completely hides the panel by sliding it off-screen. The panel will only reappear when you move your mouse to the edge of the window where it is hiding. This mode provides the maximum screen space and is suitable for panels that are used infrequently.

* '''Show on edit''': A context-aware mode that automatically shows the panel when an object's edit mode is entered (e.g., editing a sketch). When the edit is finished, the panel automatically hides again. This mode well suited for the [[Task_panel|Task panel]], for instance.

* '''Hide on edit''': The opposite of "Show on edit". This mode automatically hides the panel when an object's edit mode is entered. This is useful for clearing away secondary panels (like the [[Report_view|Report view]]) to reduce clutter while focusing on a specific task.

* '''Auto task''': A smart version of "Show on edit", designed for the [[Task_panel|Task panel]]. It shows the panel only when a command opens an active task, and hides it the moment the task is completed, providing a more automated workflow.

=== Commands ===

The following commands control the dock panel overlay feature: 

* {{MenuCommand|[[Std_DockOverlayAll|Toggle overlay for all]]}}: The master switch for the overlay feature. Toggles overlay mode on or off for all panels.
* {{MenuCommand|[[Std_DockOverlayTransparentAll|Toggle transparent for all]]}}: Toggles the special "transparent active" mode, where panels remain transparent even when you mouse over them.
* {{MenuCommand|[[Std_DockOverlayToggle|Toggle overlay]]}}: Toggles overlay mode for the single panel currently under the mouse cursor.
* {{MenuCommand|[[Std_DockOverlayToggleTransparent|Toggle transparent mode]]}}: Toggles the "transparent active" mode for the single panel currently under the mouse cursor.
* {{MenuCommand|[[Std_DockOverlayToggleLeft|Toggle left]]}}, {{MenuCommand|[[Std_DockOverlayToggleRight|Toggle right]]}}, {{MenuCommand|[[Std_DockOverlayToggleTop|Toggle top]]}}, {{MenuCommand|[[Std_DockOverlayToggleBottom|Toggle bottom]]}}: Show or hide the entire group of overlay panels on a specific side of the screen.


{{Interface navi{{#translation:}}}}
{{Userdocnavi{{#translation:}}}}