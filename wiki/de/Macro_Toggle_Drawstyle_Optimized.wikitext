<languages/>

<div lang="en" dir="ltr" class="mw-content-ltr">
{{Macro
|Name=Macro Toggle Drawstyle Optimized
|Description=Script optimized for all languages and to object selected or all objects.<br/>
When working with FreeCAD there are times when you want to quickly change the Drawstyle of the object you are working with. This is available through the Drawstyle pull-down menu where any Drawstyle may be selected. This macro makes 2 of the Drawstyles available as a clickable button on a toolbar which the user may click to toggle back and forth between the two Drawstyles.<br/>
See also:<br/>
Toggle global display mode: [[#Script_2|Macro_Toggle_Drawstyle_Optimized_2.FCMacro]]<br/>
Toggle selected object(s) display mode (changes visible only in global As is (located on View toolbar) display mode): [[#Script_3|Macro_Toggle_Drawstyle_Optimized_3.FCMacro]]
|Author=Piffpoof, triplus	
|Version=2.0
|Date=2020-29-01
|FCVersion=0.17 and above
|Download=[https://wiki.freecad.org/images/8/8c/Macro_Toggle_Drawstyle_Optimized.png ToolBar Icon]
|SeeAlso=[[Macro_Toggle_Drawstyle|Macro Toggle Drawstyle]]
}}
</div>

<span id="Description"></span>
==Beschreibung==

<div lang="en" dir="ltr" class="mw-content-ltr">
Script optimized for all languages and to object selected or all objects.
</div>

Es stehen drei Makros zur Verfügung:

<div lang="en" dir="ltr" class="mw-content-ltr">
* Combination that toggle global display mode when nothing is selected and/or toggle selected objects display mode if objects are selected. When objects are selected global display mode is automatically set to As is: [[File:Macro Toggle Drawstyle Optimized.png|24px]] [[#Script|Macro_Toggle_Drawstyle_Optimized.FCMacro]]
* Toggle global display mode: [[File:Macro Toggle Drawstyle Optimized 2.png|24px]] [[#Script_2|Macro_Toggle_Drawstyle_Optimized_2.FCMacro]]
* Toggle selected object(s) display mode (changes visible only in global As is (located on View toolbar) display mode): [[File:Macro Toggle Drawstyle Optimized 3.png|24px]] [[#Script_3|Macro_Toggle_Drawstyle_Optimized_3.FCMacro]]
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
When working with FreeCAD there are times when you want to quickly change the Drawstyle of the object you are working with. This is available through the Drawstyle pull-down menu where any Drawstyle may be selected. This macro makes 2 of the Drawstyles available as a clickable button on a toolbar which the user may click to toggle back and forth between the two Drawstyles.
</div>

==Installation==

Die Installation besteht darin, die beiden Codes in das entsprechende Makroverzeichnis zu kopieren und sie über das Makro-Menü aufzurufen. Es ist sehr empfehlenswert, sie beide zu einer Symbolleiste hinzuzufügen, damit sie leichter zugänglich sind.
* Informationen zur Installation dieses Makro-Codes finden Sie unter [[How_to_install_macros/de|Wie man Makros installiert]].
* Informationen zur Installation als Schaltfläche in einer Symbolleiste finden Sie unter [[Customize_Toolbars/de|Symbolleisten anpassen]].

<span id="Usage"></span>
==Anwendung==

Wähle ein Objekt aus, klicke dann auf die entsprechende Schaltfläche in der Symbolleiste oder rufe die Funktion über das Menü „Makro“ auf. Der Zeichenstil des ausgewählten Objekts wechselt zwischen den beiden im Makrocode angegebenen Zeichenstilen (siehe Code-Auflistung unten).

<span id="Script"></span>
==Skript== 

<div lang="en" dir="ltr" class="mw-content-ltr">
Combination that toggle global display mode when nothing is selected and/or toggle selected objects display mode if objects are selected. When objects are selected global display mode is automatically set to As is:
</div>

Werkzeugleistensymbol [[File:Macro Toggle Drawstyle Optimized.png]]

'''Macro_Toggle_Drawstyle_Optimized.FCMacro'''

{{MacroCode|code=
# triplus @ 2016, 2020
# Toggle object/global display mode
# ==============================

# 0 = "As is"
# 1 = "Flat lines"
# 2 = "Shaded
# 3 = "Wireframe"
# 4 = "Points"
# 5 = "Hidden line"
# 6 = "No shading"

globalA = 0
globalB = 3

a = "Flat Lines"
b = "Shaded"
c = "Wireframe"
d = "Points"

objectA = a
objectB = c

# ==============================

from PySide import QtGui
import FreeCADGui as Gui

mw = Gui.getMainWindow()
sel = Gui.Selection.getSelectionEx()


act = {
    0: mw.findChild(QtGui.QAction, "Std_DrawStyleAsIs"),
    1: mw.findChild(QtGui.QAction, "Std_DrawStyleFlatLines"),
    2: mw.findChild(QtGui.QAction, "Std_DrawStyleShaded"),
    3: mw.findChild(QtGui.QAction, "Std_DrawStyleWireframe"),
    4: mw.findChild(QtGui.QAction, "Std_DrawStylePoints"),
    5: mw.findChild(QtGui.QAction, "Std_DrawStyleHiddenLine"),
    6: mw.findChild(QtGui.QAction, "Std_DrawStyleNoShading"),
}


default = act[0]
actionA = act[globalA]
actionB = act[globalB]


if sel:
    obj = []
    default.trigger()
    for s in sel:
        if s.Object.TypeId == "App::Link":
            if s.Object.LinkedObject not in obj:
                obj.append(s.Object.LinkedObject)
        elif s.Object not in obj:
            obj.append(s.Object)
        else:
            pass

    for o in obj:
        if o.ViewObject.DisplayMode == objectA:
            o.ViewObject.DisplayMode = objectB
        else:
            o.ViewObject.DisplayMode = objectA
else:
    if actionA.isChecked():
        actionB.trigger()
    else:
        actionA.trigger()

}}

<span id="Script_2"></span>
==Skript 2==

Globalen Anzeigemodus umschalten:

The icon ToolBar [[File:Macro Toggle Drawstyle Optimized 2.png]]

'''Macro_Toggle_Drawstyle_Optimized_2.FCMacro'''

{{MacroCode|code=
# triplus @ 2016, 2020
# Toggle global display mode
# ==============================

# 0 = "As is"
# 1 = "Flat lines"
# 2 = "Shaded
# 3 = "Wireframe"
# 4 = "Points"
# 5 = "Hidden line"
# 6 = "No shading"

styleA = 0
styleB = 3

# ==============================

from PySide import QtGui
import FreeCADGui as Gui

mw = Gui.getMainWindow()


act = {
    0: mw.findChild(QtGui.QAction, "Std_DrawStyleAsIs"),
    1: mw.findChild(QtGui.QAction, "Std_DrawStyleFlatLines"),
    2: mw.findChild(QtGui.QAction, "Std_DrawStyleShaded"),
    3: mw.findChild(QtGui.QAction, "Std_DrawStyleWireframe"),
    4: mw.findChild(QtGui.QAction, "Std_DrawStylePoints"),
    5: mw.findChild(QtGui.QAction, "Std_DrawStyleHiddenLine"),
    6: mw.findChild(QtGui.QAction, "Std_DrawStyleNoShading"),
}


actionA = act[styleA]
actionB = act[styleB]


if actionA.isChecked():
    actionB.trigger()
else:
    actionA.trigger()
}}

<span id="Script_3"></span>
==Skript 3==

<div lang="en" dir="ltr" class="mw-content-ltr">
Toggle selected object(s) display mode (changes visible only in global As is (located on View toolbar) display mode):
</div>

The icon ToolBar [[File:Macro Toggle Drawstyle Optimized 3.png]]

'''Macro_Toggle_Drawstyle_Optimized_3.FCMacro'''

{{MacroCode|code=
# triplus @ 2016, 2020
# Toggle selected object(s) display mode
# ==============================

a = "Flat Lines"
b = "Shaded"
c = "Wireframe"
d = "Points"

styleA = a
styleB = c

# ==============================

from PySide import QtGui
import FreeCADGui as Gui

obj = []
mw = Gui.getMainWindow()
sel = Gui.Selection.getSelectionEx()
mw.findChild(QtGui.QAction, "Std_DrawStyleAsIs").trigger()


for s in sel:
    if s.Object.TypeId == "App::Link":
        if s.Object.LinkedObject not in obj:
            obj.append(s.Object.LinkedObject)
    elif s.Object not in obj:
        obj.append(s.Object)
    else:
        pass


for o in obj:
    if o.ViewObject.DisplayMode == styleA:
        o.ViewObject.DisplayMode = styleB
    else:
        o.ViewObject.DisplayMode = styleA
}}

{{clear}}

<span id="Link"></span>
==Verweis==

Diskussion im FreeCAD-Forum: (2016-11-27 ver:1.0 FC =< 0.17) : [https://forum.freecad.org/viewtopic.php?f=3&t=14336&start=40#p146239 Keyboard shortcut, View toolbar - Wireframe]

Diskussion im FreeCAD-Forum: (2020-29-01 ver:2.0 FC => 0.17) : [https://forum.freecad.org/viewtopic.php?f=3&t=14336&start=50#p364692 Keyboard shortcut, View toolbar - Wireframe]