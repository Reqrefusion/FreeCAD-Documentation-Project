<languages/>

{{Docnav/de
|[[Std_ViewLoadImage/de|AnsichtBildLaden]]
|[[Std_TextDocument/de|Textdokument]]
|[[Std_Tools_Menu/de|Std Menü Werkzeuge]]
|IconL=Std_ViewLoadImage.svg
|IconR=Std_TextDocument.svg
|IconC=Freecad.svg
}}

{{GuiCommand/de
|Name=Std ViewScreenShot
|Name/de=Std AnsichtAufnehmen
|MenuLocation=Werkzeuge → Bildinhalt speichern...
|Workbenches=Alle
|SeeAlso=[[Std_Print/de|Std Drucken]], [[Std_PrintPdf/de|Std PDF exportieren]], [[Macro_Copy3DViewToClipboard|Makro Copy3DViewToClipboard]], [[Macro_Screen_Wiki/de|Makro Screen Wiki]], [[Macro_Snip/de|Makro Snip]]
}}

<span id="Description"></span>
==Beschreibung==

Der Befehl '''Std AnsichtAufnehmen''' öffnet ein Dialogfenster, um eine Bilddatei, ein Bildschirmfoto, von der aktiven [[3D_View/de|3D-Ansicht]] zu erstellen.

[[Image:Save_picture.png|800px]]
{{Caption|Das Dialogfenster Bildinhalt speichern nach Drücken der Schaltfläche Erweitert}}

<span id="Usage"></span>
==Anwendung==

# Den Menüeintrag {{MenuCommand|Werkzeuge → [[Image:Std_ViewScreenShot.svg|16px]] Bild speichern...}} auswählen.
# Das Dialogfenster '''Bildinhalt speichern''' wird geöffnet.
# Wahlweise die Schaltfläche {{Button|Erweitert}} drücken, um ein zusätzlichen Bereich im Dialogfenster einzublenden. Für weitere Informationen siehe [[#Optionen|Optionen]].
# Wahlweise den richtigen Ordner suchen.
# Einen Dateinamen eingeben und den Dateityp auswählen.
# Die Schaltfläche {{Button|Speichern}} drücken, um die Bilddatei zu erstellen und das Dialogfenster zu schließen.

<span id="Options"></span>
==Optionen==

<span id="Image_Dimensions"></span>
==== Bildabmessungen ====

# Wähle eine Standardgröße aus der Auswahlliste '''Standardauflösungen'''. Oder gib '''Breite''' und '''Höhe''' für eine benutzerdefinierte Größe an.
# Klicke optional auf eine '''Seitenverhältnis'''-Schaltfläche , um das Verhältnis von Breite zu Höhe des Bildes festzulegen. Wenn das Eingabefeld '''Breite''' den Fokus hat, ändert sich die Höhe des Bildes und umgekehrt.

<span id="Image_Properties"></span>
===Bildeigenschaften===

#* Wähle eine Option aus der '''Hintergrund''' Aufklappliste:
#* {{Value|Aktuell}} Diese Option verwendet den Hintergrund der 3D-Ansicht.
#* {{Value|Weiß}}
#* {{Value|Schwarz}}
#* {{Value|Durchsichtig}} Nicht alle Bildformate unterstützen Transparenz.
# Wähle eine Option aus der '''Erstellungsmethode''' Aufklappliste:
#* {{Value|Offscreen (Neu)}} Dies ist die Standardmethode. Diese Methode unterstützt [https://en.wikipedia.org/wiki/Multisample_anti-aliasing anti-aliasing]. ''Technische Informationen: Die wichtigsten Klassen für diese Methode sind Qt's QOffscreenSurface und QOpenGLFramebufferObject.''
#* {{Value|Offscreen (Alt)}} Diese Methode funktioniert auf vielen modernen Linux Systemen nicht, da sie sich auf den Grafiktreiber verlässt. Diese Methode unterstützt kein Anti-Aliasing. ''Technische Informationen: Dies ist eine echte Offscreen Rendering Methode, die nur Funktionen aus der Coin3d-Bibliothek verwendet.''
#* {{Value|Bildpuffer (benutzerdefiniert)}} Diese Methode unterstützt Anti-Aliasing. ''Technische Informationen: Wenn Anti-Aliasing ausgeschaltet ist, liest diese Methode das Bild direkt aus dem Grafik-Renderer, ansonsten rendert sie in einen Bildpuffer und holt sich das Bild von dort. Der Schlüsselteil dieser Methode ist Qt's Klasse QOpenGLFramebufferObject.''
#* {{Value|Bildpuffer (wie bestehend)}} Diese Methode verwendet die gleichen Techniken wie '''Bildpuffer (benutzerdefiniert)'''. Sie unterstützt auch Anti-Aliasing, hat aber einige Einschränkungen in Bezug auf benutzerdefinierte Größen und verwendet immer den aktuellen Hintergrund der 3D-Ansicht.

<span id="Image_Comment"></span>
===Kommentar zum Bild===

# Die Option '''MIBA-Informationen einfügen''' auswählen, um [http://juergen-riegel.net/Miba/ MIBA]-Informationen in die Datei einzufügen. Nicht alle Bildformate unterstützen dies.
# Oder die  Option '''Kommentar einfügen''' auswählen und einen Kommentar in das Textfeld eingeben, um einen Kommentar in die Datei einzubetten. Dies wird nicht von allen Bildformaten unterstützt.
# Das Kontrollkästchen '''Wasserzeichen einfügen''' aktivieren, um ein Wasserzeichen hinzuzufügen. Das Wasserzeichen wird in der unteren linken Ecke des Bildes platziert und besteht aus dem FreeCAD-Logo und dem Namen über der FreeCAD-Haupt-URL: [https://www.freecad.org www.freecad.org].

<span id="Notes"></span>
==Hinweise==

* Die Anzahl der verfügbaren Bilddateiformate kann je nach Betriebssystem variieren.
* Einige OpenGL-Treiber lassen keine Renderings über einer bestimmten Maximalgröße zu.

<span id="Preferences"></span>
==Einstellungen==

Siehe auch: [[Preferences_Editor/de|Voreinstellungseditor]].

* Der Hintergrund der 3D-Ansicht kann in den Voreinstellungen geändert werden: {{MenuCommand|Bearbeiten → Einstellungen... → Anzeige → Farben → Hintergrundfarbe}}.
* Um das Anti-Aliasing der 3D-Ansicht zu ändern: {{MenuCommand|Bearbeiten → Einstellungen... → Anzeige → 3D-Viewer → Rendern → Kantenglättung}}.

<span id="Scripting"></span>
==Skripten==

Siehe auch: [https://freecad.github.io/SourceDoc/ Autogenerierte API-Dokumentation] und [[FreeCAD_Scripting_Basics/de|Grundlagen der Skripterstellung in FreeCAD]].

Es ist möglich, Bildschirmfotos mit Python-Code zu erstellen.

{{Code|code=
Gui.ActiveDocument.ActiveView.saveImage("D:/temp/test.png", 1656, 783, "Current")
}}

Dieses Skript speichert eine Reihe von Bildschirmfotos in verschiedenen Größen und aus verschiedenen Richtungen. Der Kameratyp, orthografisch oder perspektivisch, wird ebenfalls geändert.

{{Code|code=
import FreeCADGui as Gui
import Part

out_dir = "D:/temp/"
name = "Blade"
view = Gui.ActiveDocument.ActiveView

# Create images with different Views, Cameras and sizes
for p in ["PerspectiveCamera", "OrthographicCamera"]:
    Gui.SendMsgToActiveView(p)
    for f in ["ViewAxo", "ViewFront", "ViewTop"]:
        Gui.SendMsgToActiveView(f)
        for x, y in [[500, 500], [1000, 3000], [3000, 1000], [3000, 3000], [8000, 8000]]:
            view.saveImage(out_dir + name + "_" + p + "_" + f + "_" + str(x) + "_" + str(y) + ".jpg", x, y, "White")
            view.saveImage(out_dir + name + "_" + p + "_" + f + "_" + str(x) + "_" + str(y) + ".png", x, y, "Transparent")

# Close active document
App.closeDocument(App.ActiveDocument.Name)
}}


{{Docnav/de
|[[Std_ViewLoadImage/de|AnsichtBildLaden]]
|[[Std_TextDocument/de|Textdokument]]
|[[Std_Tools_Menu/de|Std Menü Werkzeuge]]
|IconL=Std_ViewLoadImage.svg
|IconR=Std_TextDocument.svg
|IconC=Freecad.svg
}}

{{Std_Base_navi{{#translation:}}}}
{{Userdocnavi{{#translation:}}}}