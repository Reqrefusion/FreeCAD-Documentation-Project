import FreeCAD as App
import Part
from FreeCAD import Base

doc = App.newDocument("Channel_Block")

# 创建基础长方体
length = 300
width = 110
height = 60
block = Part.makeBox(length, width, height)
block_obj = doc.addObject("Part::Feature", "Block")
block_obj.Shape = block

# 函数：创建半圆柱（向下凹，沿指定轴）
def create_half_cylinder(radius, length, pos, direction):
    # 创建半圆旋转体
    sketch = doc.addObject('Part::Part2DObject', 'Sketch')
    sketch.Support = None
    sketch.MapMode = 'FlatFace'
    
    # 在草图中画一个矩形（3x3）
    sketch.addGeometry(Part.LineSegment(App.Vector(0,0,0), App.Vector(radius,0,0)), False)
    sketch.addGeometry(Part.LineSegment(App.Vector(radius,0,0), App.Vector(radius,radius,0)), False)
    sketch.addGeometry(Part.LineSegment(App.Vector(radius,radius,0), App.Vector(0,radius,0)), False)
    sketch.addGeometry(Part.LineSegment(App.Vector(0,radius,0), App.Vector(0,0,0)), False)
    
    # 拉伸并旋转成半圆柱
    # 更简单：直接用旋转
    wire = Part.Wire([
        Part.makeLine((0,0,0), (radius,0,0)),
        Part.makeLine((radius,0,0), (radius,radius,0)),
        Part.makeLine((radius,radius,0), (0,radius,0)),
        Part.makeLine((0,radius,0), (0,0,0))
    ])
    face = Part.Face(wire)
    solid = face.revolve(Base.Vector(0,0,0), Base.Vector(*direction), 180)
    solid.translate(pos)
    return solid

# 创建X方向槽（沿X，Y阵列）
x_slots = []
for i in range(14):  # Y方向每隔8mm
    y_pos = i * 8
    pos = Base.Vector(0, y_pos, height - 3)  # Z=57
    cyl = Part.makeCylinder(3, 300, pos, Base.Vector(1,0,0))
    # 用长方体切掉上半部分，保留下半（Z ≤ 57+3）
    box = Part.makeBox(302, 6, 3, Base.Vector(-1, y_pos-3, height-3))
    half_cyl = cyl.common(box)  # 交集 → 下半圆柱
    x_slots.append(half_cyl)

x_slot_union = x_slots[0]
for s in x_slots[1:]:
    x_slot_union = x_slot_union.fuse(s)

x_slot_obj = doc.addObject("Part::Feature", "X_Slots")
x_slot_obj.Shape = x_slot_union

# 创建Y方向槽（沿Y，X阵列）
y_slots = []
for i in range(16):  # X方向每隔20mm
    x_pos = i * 20
    pos = Base.Vector(x_pos, 0, height - 3)
    cyl = Part.makeCylinder(3, 110, pos, Base.Vector(0,1,0))
    box = Part.makeBox(6, 112, 3, Base.Vector(x_pos-3, -1, height-3))
    half_cyl = cyl.common(box)
    y_slots.append(half_cyl)

y_slot_union = y_slots[0]
for s in y_slots[1:]:
    y_slot_union = y_slot_union.fuse(s)

y_slot_obj = doc.addObject("Part::Feature", "Y_Slots")
y_slot_obj.Shape = y_slot_union

# 合并所有凹槽
slots_union = x_slot_union.fuse(y_slot_union)
slots_obj = doc.addObject("Part::Feature", "All_Slots")
slots_obj.Shape = slots_union

# 从块体中切割
cut = doc.addObject("Part::Cut", "Final_Block")
cut.Base = block_obj
cut.Tool = slots_obj

doc.recompute()
App.ActiveDocument.recompute()