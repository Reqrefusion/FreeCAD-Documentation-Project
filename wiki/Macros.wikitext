# -*- coding: utf-8 -*-
"""
Genera una manguera flexible enrollada (tubo hueco sobre hélice) y la exporta en STEP.
Probado en FreeCAD 0.20+ (GUI o modo consola).

Parámetros editables:
- hose_inner_diameter_mm, hose_outer_diameter_mm
- helix_center_radius_mm (radio del enrollado al centro del tubo)
- turns (vueltas), pitch_mm_per_turn (paso por vuelta)
- lefthand (True = hélice izquierda), is_frenet (True = mantén sección perpendicular al camino)
"""

import FreeCAD as App
import Part
import os

# ========= PARÁMETROS =========
hose_inner_diameter_mm = 20.0
hose_outer_diameter_mm = 24.0
helix_center_radius_mm = 140.0
turns = 10
pitch_mm_per_turn = 50.0
lefthand = False
is_frenet = True

# Ruta de exportación (cámbiala si quieres)
out_dir = App.getUserAppDataDir() if hasattr(App, "getUserAppDataDir") else os.getcwd()
out_path = os.path.join(out_dir, "manguera_enrollada.step")
# ==============================

Ri = hose_inner_diameter_mm / 2.0
Ro = hose_outer_diameter_mm / 2.0
height = turns * pitch_mm_per_turn

doc = App.newDocument("HoseHelixSTEP")

# 1) Crear la hélice (trayectoria)
# Part.makeHelix(pitch, height, radius, angle=0, lefthand=False)
helix = Part.makeHelix(pitch_mm_per_turn, height, helix_center_radius_mm, 0.0, lefthand)

# 2) Crear las secciones circular exterior e interior (como caras para obtener sólidos)
# Ubicamos los círculos en el origen; el barrido con Frenet ajusta orientación automáticamente
circle_outer = Part.Circle(App.Vector(0,0,0), App.Vector(0,0,1), Ro)
wire_outer = Part.Wire([circle_outer.toShape()])
face_outer = Part.Face(wire_outer)  # disco

circle_inner = Part.Circle(App.Vector(0,0,0), App.Vector(0,0,1), Ri)
wire_inner = Part.Wire([circle_inner.toShape()])
face_inner = Part.Face(wire_inner)  # disco

# 3) Barrer (sweep) las secciones sobre la hélice
# Face.makePipe(path) crea un sólido "varilla" a lo largo de la trayectoria
outer_solid = face_outer.makePipe(helix, isFrenet=is_frenet)
inner_solid = face_inner.makePipe(helix, isFrenet=is_frenet)

# 4) Hacer el tubo hueco: outer - inner
tube_solid = outer_solid.cut(inner_solid)

# 5) Agregar al documento y recomputar
obj = doc.addObject("Part::Feature", "CoiledHose")
obj.Shape = tube_solid
doc.recompute()

# 6) Exportar a STEP
Part.export([obj], out_path)

print("Exportado STEP a:", out_path)