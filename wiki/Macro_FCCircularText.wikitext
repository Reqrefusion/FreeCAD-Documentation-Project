<languages/>
<translate>

<!--T:19-->
{{Macro
|Name=Macro FCCircularText
|Icon=FCCircularTextButtom.png
|Description=This macro makes use of the [[Draft ShapeString]] tool to create a text line placed in different circular orientations, including circumferential and helical (in the fashion of a Trajan Column). It can also be used to create a clock face with Arabic numerals ''1, 2, 3,'' etc., or Roman numerals ''I, II, III,'' etc.
|Author=Mario52
|Version=0.22f
|Date=2025/09/23
|FCVersion=0.19 and more
|Download=[https://wiki.freecad.org/images/c/c1/FCCircularTextButtom.png ToolBar Icon]
}}

==Description== <!--T:20-->

<!--T:21-->
This macro makes use of the [[Image:Draft_ShapeString.svg|24px|link=Draft ShapeString]] [[Draft ShapeString|Draft ShapeString]] tool to create a text line placed in different circular orientations, including circumferential and helical in the fashion of a [https://en.wikipedia.org/wiki/Trajan%27s_Column Trajan's Column]. It can also be used to create a clock face with Arabic numerals ''1, 2, 3,'' etc., or Roman numerals ''I, II, III,'' etc. This latter usage was inspired by the Forum thread [https://forum.freecad.org/viewtopic.php?f=22&t=5013&hilit=Clock Macro to Create Clock Face] by FC community member, cblt2l.

</translate>
{{Codeextralink|https://gist.githubusercontent.com/mario52a/a25e802498bae6959335/raw/3a7b030af1395ebe515b7ac7ff399636df55fbc8/Macro_FCCircularText.FCMacro}}
<translate>

<!--T:22-->
:[[File:FCCircularText 01.png|400px|360 degree orientation]]
{{Caption|Example of the macro displaying text in a 360 degree orientation}}

==Usage== <!--T:23-->

<!--T:26-->
Launch the macro folder '''FcString''' for created characters and a file '''FcClock''' for created clocks.

<!--T:27-->
All the characters are and remain independent. When creating extrusions nothing is deleted. If Compound is created with {{Button|Run Comp}} it is copied out of the folder.

<!--T:28-->
The options are shaded by default and are active in all functions if they are checked {{CheckBox|TRUE|}}:
* {{CheckBox|Extrude Char.}}
* {{CheckBox|Placement.}}
* {{CheckBox|SP. inclination.}}

<!--T:29-->
Except for one Clock Service Placement box '''Z''' is activated and moves the text in the direction '''Z''' to place the text on the support surface.

==Notes== <!--T:111-->

<!--T:24-->
* This macro will gray-out (deactivate) options that are not relevant for a selected function.

== Interface == <!--T:30-->

<!--T:156-->
Overview

<!--T:31-->
[[File:FCCircularText 06.png|GUI]]
{{clear}}

===First section=== <!--T:32-->

<!--T:33-->
[[File:FCCircularText 07.png|center]]
{{clear}}

<!--T:34-->
* TextEdit window that lets you copy the text to display (click on the {{Button|Reset}} allows to know the number of the input string that is displayed in the window title)
* The {{Button|Reverse}} button reverses the text
* {{CheckBox|Word}} checked, this option consider the text as word, the text is cut on space and write the text word by word (instead character by character in normal use)
* The {{Button|Help}} button displays the wiki page in the FreeCAD browser
* LineEdit: display the path and name of file font
* {{Button|Other}} button for search the font in other directory in case all directory is not discovery automatically
* ComboView to choose the font
* {{Button|Origin}} return to origin system font path ex: "C:/Windows/Fonts/"
** Default ARIAL.TTF

====Options available==== <!--T:112-->

<!--T:126-->
After the first use, you must modify the following parameters: 

<!--T:113-->
'''User parameter:BaseApp/Preferences/Macros/FCMmacros/FCCircularText'''

<!--T:114-->
'''switchModeTextList'''
* 0 = normal text mode (and black) cuts the switchFontComBox
* 1 = allows switchFontComBox 1

<!--T:115-->
'''switchFontComBox'''
* 0 = (and switchModeTextList= 1) text mode (in color) in ComboBox list, faster
* 1 = (and switchModeTextList= 1) fontFamily slower but more beautiful ComboBoxst!

<!--T:116-->
'''setSystemFonts'''
* 0 = matplotlib.font_manager.findSystemFonts("C:/", "ttf") 
*     do all the fonts (in all folders and sub-folders of the DD) time !!
* 1 = fontman.findSystemFonts(self.pathFont)
*     do all the fonts in the directory (and in all the sub-folders)

<!--T:117-->
'''seTtextAlignement'''
* 0 = AlignLeft (default)
* 1 = AlignCenter
* 2 = AlignRight

<!--T:118-->
setFontByDefault
* Font by Default

<!--T:119-->
'''switchResetFALSE'''
* 0 = reset (default)
* 1 = no reset (not recommended) some switches can remain open or close unexpectedly!

<!--T:120-->
'''Example'''

<!--T:121-->
[[File:FCCirculatText Config 0000A0.png]]
#switchModeTextList= {{FALSE}}
#switchFontComBox  = {{FALSE}}
#setSystemFonts    = {{FALSE}}
#seTtextAlignement = 0
{{clear}}

<!--T:122-->
[[File:FCCirculatText Config 1000A0.png]]
#switchModeTextList= {{TRUE}}
#switchFontComBox  = {{FALSE}}
#setSystemFonts    = {{FALSE}}
#seTtextAlignement = 0
{{clear}}

<!--T:123-->
[[File:FCCirculatText Config 1001A0.png]]
#switchModeTextList= {{TRUE}}
#switchFontComBox  = {{FALSE}}
#setSystemFonts    = {{FALSE}}
#seTtextAlignement = 1 ''(0=Left, 1=Centered, 2=Right)''
{{clear}}

<!--T:124-->
[[File:FCCirculatText Config 1101A0.png]]
#switchModeTextList= {{TRUE}}
#switchFontComBox  = {{TRUE}}
#setSystemFonts    = {{FALSE}}
#seTtextAlignement = 1
{{clear}}

=== Second Section === <!--T:35-->

<!--T:157-->
Configuring characters in FCCircularText

<!--T:36-->
[[File:FCCircularText 08.png|center]]
{{clear}}

====First zone==== <!--T:37-->

<!--T:158-->
Your choice:

<!--T:38-->
[[File:FCCircularText 09.png|left]]
<center>
<gallery widths="100" heights="120">
Image:FCCircularText 20.png|'''Outdoor'''
Image:FCCircularText 21.png|'''Indoor'''
Image:FCCircularText 22.png|'''Helix'''
Image:FCCircularText 23.png|'''Clock'''
</gallery>
</center>
{{clear}}

<!--T:39-->
[[File:FCCircularText 24.png|left]]
* {{Button|Mode Stand}} or {{Button|Mode Flat}} : The text will be placed standing or flat (same as clock) options '''Outdoor''' and '''Indoor''' are reversed.
{{clear}}

<!--T:40-->
<center>
<gallery widths="200" heights="180">
Image:FCCircularText 01.png|'''Mode Stand''' '''Outdoor''' The text will be written up.
Image:FCCircularText_40.png|'''Mode Flat''' '''Outdoor''' The text will be placed flat.
</gallery>
</center>

<!--T:41-->
<center>
<gallery widths="200" heights="180">
Image:FCCircularText 39.png|'''Mode Flat''' '''Indoor''' The text will be placed flat.
Image:FCCircularText_03.png|'''Mode Stand''' '''Indoor''' The text will stand registered (same as clock).
</gallery>
</center>

==== Second area ==== <!--T:159-->

<!--T:42-->
This section allows you to configure the overall behavior of characters in all the choices available but with some variation.
If the command is not used in the option chosen, it will be grayed out.

<!--T:43-->
[[File:FCCircularText 10.png| left]]
* {{SpinBox|10.0 mm}} '''Radius of circle''' : Radius of the circle. (Default 10)
* {{SpinBox|2.0 mm}} '''Size character''' : Character height. (Default 2)
* {{SpinBox|0 deg}} '''Begin angle''' : Starting angle of the first character in the circle. (Default 0 °)
* {{SpinBox|360 deg}} '''End angle''' : Angle end of the last character of the text. (Default 360)
* {{SpinBox|10.0 deg}} '''Correction angle''' : Character correction angle to make it tangent to the circle. (Default 10 °)
* {{SpinBox|0.15 mm}} '''Correction radius''' : Fixed the radius of the circle characters (optional). (Default 0.15)
*
* {{CheckBox|'''Extrude Char'''}} : Checkbox extrusion characters. (Inactive Default)
* {{CheckBox|'''Placement'''}} : Text placement in the 3D view. (Inactive Default)
* {{CheckBox|'''Sp. inclination'''}} : Inclination of characters in three axes X, Y and Z (example to cover such a cone). (Inactive Default)
{{clear}}

=====Outdoor===== <!--T:160-->

<!--T:44-->
Default mode. The text is written on the outside of the circumference of the circle.

<!--T:45-->
<center>
<gallery widths="200" heights="180">
Image:FCCircularText 20.png|'''Outdoor'''
Image:FCCircularText 25.png|
Image:FCCircularText 30.png|
</gallery>
</center>

=====Indoor===== <!--T:161-->

<!--T:46-->
The text is written on the inner side of the circumference of the circle

<!--T:47-->
<center>
<gallery widths="200" heights="180">
File:FCCircularText 21.png|'''Indoor'''
Image:FCCircularText 03.png|
Image:FCCircularText 27.png|
</gallery>
</center>

=====Helix===== <!--T:162-->

<!--T:48-->
The text is entered on the outer circumference of a helix.

<!--T:49-->
<center>
<gallery widths="200" heights="180">
Image:FCCircularText 22.png| '''Helix'''
Image:FCCircularText 33.png|
Image:FCCircularText 34.png|
</gallery>
</center>

<!--T:50-->
* The helix area is hidden by default. The window is visible if the radio button {{RadioButton|TRUE|Helix}} is checked
{{clear}}
[[File:FCCircularText 14.png|left]]
* All characters configuration options are available.
* '''Step of helix''' which corresponds to the pitch of the helix turns and displays 2 (character height) by default.
* '''Char. per turn '''activates and displays 10 by default, which corresponds to 10 characters per helical turn.
{{clear}}
[[File:FCCircularText 15.png|left]]
* If '''Step of helix''' (helix pitch) is zero, Spinboxes '''Base Helix''' and '''End Helix''' are activated.
* '''Base Helix''' provides the basis for starting the helix (even Placement Z). If '' 'Placement Z' '' is different from zero, the starting point is added to Z Placement
* '''End Helix''' End of the helix pitch of the helix will be calculated relative to the height and the number of characters per helical turn.

=====Clock===== <!--T:163-->

<!--T:51-->
The figures are part of a circle with Arabic numerals or Romans.

<!--T:52-->
<center>
<gallery widths="200" heights="180">
Image:FCCircularText 23.png|'''Clock'''
Image:FCCircularText 35.png|'''Axial'''
Image:FCCircularText 36.png|'''Redress'''
</gallery>
</center>

<!--T:53-->
* By default, the section is hidden. The window is visible if the radio button {{RadioButton|TRUE|Clock}} is checked
{{clear}}
[[File:FCCircularText 16.png|left]]
* When the selection is made, the following functions get dark and are usable:
*# Begin angle.
*# End angle.
*# Correction angle.
*# Correction radius.
*# The buttom {{Button|Mode Stand}} or {{Button|Mode Flat}}.
* The area '''Clock''' is activated.
{{clear}}

<!--T:54-->
[[File:FCCircularText 19.png|left]]
* '''Radius of support''' : If a value is given, support will be created (default 0).
* If '''Support number face''' is different from zero a support is created. (If '''Extrude support '''= zero then a face is created).
** 1 = A circle is created (circle appears).
** 2 = A rectangle is created (length = (Radius of media * 1.5) width = Radius of support) (Rectangle appears).
** 3 = A triangle is created (circumscribed) (Triangle appears).
** 4 = A square is created (Radius of support) (Square appears).
** 5 = A polygon with the number of faces displayed (circumscribed) (Polygon appears).
* '''Extrude support''' is activated and an extrusion dimension can be given.
{{clear}}

<!--T:55-->
[[File:FCCircularText 18.png|left]][[File:FCCircularText_38.png|200px]]
{{clear}}
[[File:FCCircularText 17.png|left]][[File:FCCircularText_37.png|200px]]
{{clear}}

<!--T:56-->
* If '''Support number face''' is equal to zero there is no support.
* {{Button|Mode Roman}} : The writing will be in Roman figures '''I II III IIII V VI VII VIII IX X XI XII'''
* {{Button|Axial}}   : The figures will be written axially.

===Path section=== <!--T:132-->

<!--T:133-->
[[File:FCCircularText_06_Path.png]]
{{clear}}

<!--T:134-->
The title section change and display the length of the wire selected.

<!--T:135-->
If you select one wire, arc, circle, line and edge the section Path is coloured in {{ColoredText|#E0F8E0|green}} and the unused command coloured in {{ColoredText|#F8E0E0|red}}

<!--T:136-->
#{{RadioButton|Orthogonal}} the character is Orthogonal to the view
#{{RadioButton|Tangent}} the character is Tangent to point path on wire

<!--T:137-->
#{{RadioButton|BB Base}} the point base of the character is to point path on the wire
#{{RadioButton|BB Center}} the bounBox center of the character is to point path on the wire
#{{RadioButton|BB Top}} the top boundBox of the character is to point path on the wire

<!--T:138-->
the last Radio Button used is saved in the parameter of FreeCAD

===Command section=== <!--T:57-->

<!--T:58-->
[[File:FCCircularText 13.png]]
{{clear}}

<!--T:59-->
* {{Button|Exit}}    : Leaves the macro.
* {{Button|Reset}}   : Reset all values and displays the number of characters displayed in the window.
* {{Button|Run Comp}} : Launches the macro and creates a Compound object of all characters.
* {{Button|Run}}     : Launches the macro

===Parameters available=== <!--T:139-->

<!--T:140-->
Certain parameter are available in the parameters of FreeCAD see: {{MenuCommand|Menu → Tools → Edit parameters...}}

<!--T:141-->
*User parameter: BaseApp/Preferences/Macros/FCMmacros/FCCircularText

<!--T:142-->
**{{incode|switchModeTextList}} : 
***{{FALSE}} normal text mode (and black) turns off switchFontComBox
***{{TRUE}} allow switchFontComBox 1 (default)
**{{incode|switchFontComBox}} : 
***{{FALSE}} (and switchModeTextList = 1) text mode (in color) in Faster ComboBox list (default)
***{{TRUE}} (and switchModeTextList = 1) font Family in ComboBox list slower but more beautiful!
**{{incode|setSystemFonts}} : 
***{{FALSE}} matplotlib.font_manager.findSystemFonts ("C: /", "ttf") do all fonts (in all folders and subfolders of the HD) time !!
***{{TRUE}} fontman.findSystemFonts (self.pathFont)</br>make all the fonts in the directory (and in all the subfolders) (default)
**{{incode|seTtextAlignement}} : 0 = AlignLeft (default) 1 = AlignCenter 2 = AlignRight
**{{incode|setFontByDefault}} : Font by Default (the last used)
**{{incode|switchResetFALSE}} : {{FALSE}} reset (default), {{TRUE}} no reset (not recommended) some switches can stay open or close unexpectedly!
**{{incode|setPathOrthogonal}} : {{TRUE}} {{FALSE}}
**{{incode|setPathTangent}} : {{TRUE}} {{FALSE}}
**{{incode|setPositionBase}} : {{TRUE}} {{FALSE}}
**{{incode|setPositionCenter}} : {{TRUE}} {{FALSE}}
**{{incode|setPositionTop}} : {{TRUE}} {{FALSE}}
**{{incode|switchVersionSearch}} : {{TRUE}} {{FALSE}}
**{{incode|Version}} : FCCircularText version

<!--T:60-->
Launch the macro folder '''FcString''' for created characters and a file '''FcClock''' for created clocks.

==Script== <!--T:61-->

<!--T:77-->
The button icon:

<!--T:98-->
- in .PNG [[File:FCCircularTextButtom.png]]

<!--T:99-->
- in .SVG [[ File:FCCircularTextButtom.svg]]

<!--T:100-->
(See [[Customize_Toolbars| Customize_Toolbars]] for more)

===Script=== <!--T:107-->

<!--T:150-->
'''Macro_Circular_Text.FCMacro'''

<!--T:108-->
or download the script :

<!--T:62-->
- on github [https://gist.github.com/mario52a/a25e802498bae6959335 Macro_FCCircularText.FCMacro]

<!--T:78-->
- at the forum [https://forum.freecad.org/viewtopic.php?f=3&t=7384&p=87642#p87642 Extrude from curved surface of cylinder]

==Example== <!--T:63-->

<!--T:64-->
<center>
<gallery widths="300" heights="200">
Image:FCCircularText 02.png|Text beginning at 180 degrees ('''Begin angle''') end at 360 degrees ('''End angle''') external curve.
Image:FCCircularText 03.png|Text set in an inner curve.
</gallery>
</center>
<br />
<center>
<gallery widths="300" heights="200">
Image:FCCircularText 04.png|Text circular on internal and external curve.
Image:FCCircularText 05.png|Circular text on a flat onbjet.
</gallery>
</center>
<br />
<center>
<gallery widths="300" heights="200">
Image:FCCircularText IndoorFlat 01.png|Configuration Superior.(click to elarge)
Image:FCCircularText IndoorFlat 02.png|Configuration Inferior.(click to elarge)
</gallery>
</center>
<br />

<!--T:65-->
<br />
<center>
<gallery widths="300" heights="200">
Image:FCCircularText 26.png|External curve.
Image:FCCircularText 28.png|Internal curve.
</gallery>
</center>
<br />

<!--T:66-->
<br />
<center>
<gallery widths="300" heights="200">
Image:FCCircularText 29.png|Internal curve extrusion material designated and subtraction.
Image:FCCircularText 31.png|External curve.
</gallery>
</center>
<br />

<!--T:67-->
<br />
<center>
<gallery widths="300" heights="200">
Image:FCCircularText 32.png|Internal curve with subtraction.
Image:FCCircularText 41.png|Extrusion on a cone with '''Sp. Inclination '''45° axis Z.
</gallery>
</center>
<br />

<!--T:68-->
<br />
<center>
<gallery widths="300" heights="200">
Image:FCCircularText 42.png|Ring Internal curve with subtraction.
Image:FCCircularText 61.png|Pivot character 0°, 90°, ....
</gallery>
</center>
<br />
<center>
<gallery widths="300" heights="200">
Image:FCCircularText_Path_00_002_000.png| {{CheckBox|TRUE|Word}} The text is cutting on space character
</gallery>
</center>
<br />
</translate>
<translate>
==Example onto Ellipse== <!--T:81-->
</translate>
<center>
<gallery widths="300" heights="200">
<translate>
<!--T:82-->
Image:FCCircularText 43.png|Create your ellipse hers 100x50.
Image:FCCircularText 44.png|Exrtude it 50 mm.
</translate>
</gallery>
</center>
<br />
<center>
<gallery widths="300" heights="200">
<translate>
<!--T:83-->
Image:FCCircularText 45.png|Discretize the perimeter and create points with the macro [[Macro_WorkFeatures|Work Features]].<br />Tab Point > Point 2/3 > Points=Cut (Wire)
Image:FCCircularText 46.png|Create the circle to 3 points with the macro [[Macro_WorkFeatures|Work Features]].<br />Tab Circle Circle=(3 Points)
</translate>
</gallery>
</center>
<br />
<center>
<gallery widths="300" heights="200">
<translate>
<!--T:84-->
Image:FCCircularText 47.png|Create point center circle with the macro [[Macro_WorkFeatures|Work Features]].<br />Tab Point > Point 1/3 > Circle(s) center.
Image:FCCircularText 48.png|Create the benchmark lines and configure FCCircularText.
</translate>
</gallery>
</center>
<br />
<center>
<gallery widths="300" heights="200">
<translate>
<!--T:85-->
Image:FCCircularText 49.png|Create the text with {{Button|Run Comp}}.
Image:FCCircularText 50.png|Select Ellipse Extrude, Shape and press the {{Button|[[Image:Part_Cut.svg|16px]] '''Part Cut'''}} button.
</translate>
</gallery>
</center>
<br />
<center>
<gallery widths="300" heights="200">
<translate>
<!--T:86-->
Image:FCCircularText 51.png|Delete the circle, points and lines.
Image:FCCircularText 52.png|Ellipses.
</translate>
</gallery>
</center>
<br />
<translate>
<!--T:91-->
Mode relief:
</translate>
<center>
<gallery widths="300" heights="200">
<translate>
<!--T:92-->
Image:FCCircularText 53.png|Create an ellipse. [[File:Draft_Ellipse.svg]]
Image:FCCircularText 54.png|Create a rectangle include all object. [[File:Draft_Rectangle.svg]]
</translate>
</gallery>
</center>
<br />
<center>
<gallery widths="300" heights="200">
<translate>
<!--T:93-->
Image:FCCircularText 55.png|Select the rectangle , the ellipse and make compound<br />Activate the Part module, then Menu Part > Make compound.
Image:FCCircularText 56.png|Extrude the compound of Solid.
</translate>
</gallery>
</center>
<br />
<center>
<gallery widths="300" heights="200">
<translate>
<!--T:94-->
Image:FCCircularText 57.png|Select Shape (text) , the compound and Cut.
Image:FCCircularText 58.png|The text is cut in the shape of the ellipse.
</translate>
</gallery>
</center>
<br />
<center>
<gallery widths="300" heights="200">
<translate>
<!--T:95-->
Image:FCCircularText 59.png|Select the Ellipse extruded , the Cut (text) and fuse.
</translate>
</gallery>
</center>
<br />

==Example section path==

<center>
<gallery widths="300" heights="200">
<translate>
<!--T:146-->
Image:FCCircularText_Path_00_Orth_Base_000.png|Text on BoundBox Base (normal)
Image:FCCircularText_Path_00_Orth_Center_000.png|Text on BoundBox Center character
</translate>
</gallery>
</center>
<br />

<center>
<gallery widths="300" heights="200">
<translate>
<!--T:164-->
Image:FCCircularText_Path_00_Orth_Top_000.png|Text on BoundBox Top character
Image:FCCircularText_Path_00_001_000_000.png|Text on selected line:<br />1: Orthogonal<br />2: Tangent
</translate>
</gallery>
</center>
<br />
<center>
<gallery widths="797" heights="624">
<translate>
<!--T:165-->
File:YamahaDrumBadge00.gif|Exemple use ([https://forum.freecad.org/viewtopic.php?t=82577 Curved text on a flat surface?])
</translate>
</gallery>
</center>
<br />
<translate>

==Limitations== <!--T:101-->

<!--T:72-->
{{Emphasis|Note}} it is possible that an error may occur between versions. Please post the issue on the forum and wait for the updated fix or rollback to a previous version of the macro. Thank you)

<!--T:102-->
It is possible that two characters may overlap. If this happens, here's a workaround is available using the [https://wiki.freecad.org/Macro_Rotate_To_Point Rotate-To-Point Macro].
</translate>
<br />
<center>
<gallery widths="630" heights="400">
Image:FCCircularText Correction.gif|Character overlap issue and the workaround
</gallery>
</center>
<br />

<translate>
<!--T:69-->
(not fully developed)
</translate>

<translate>
<!--T:70-->
Planned:
</translate>

<translate>
<!--T:71-->
Writing on a path circular text of position object selected.

==Change log== <!--T:73-->

<!--T:168-->
*ver 0.22f 2025/09/25 : return to PySide , adding info for use the MONOSPACE font

<!--T:166-->
*ver 0.22e 2024/07/11 : delete '''"ss.support = None"'''

<!--T:167-->
*ver 0.22d 2024/07/11 : delete '''"import WebGui"''' cause error in 0.22xxx FC and replaced by '''"import webbrowser"'''

<!--T:155-->
*ver 0.22c 2023/11/17 : adding restore selection after delete the last object , by TheMarkster , thanks
</translate>
see [https://forum.freecad.org/viewtopic.php?p=719353#p719353 Curved text on a flat surface?]
{{Code|code=
sel = Gui.Selection.getCompleteSelection()
#delete objects
#restore previous selection
Gui.Selection.clearSelection()
for s in sel:
    Gui.Selection.addSelection(s.Object,s.SubElementNames)
}}
<translate>
<!--T:154-->
*ver 0.22b 2023/11/15 : upgrade correction '''stylesheet''' and '''FreeCAD.activeDocument().recompute(None,True,True)'''

<!--T:153-->
*ver 0.22 2022/06/06 : adding QScrollArea cause : [https://forum.freecad.org/viewtopic.php?f=3&t=69206 Unable to run FCCircularText [Problem with screen size<nowiki>]</nowiki>]

<!--T:152-->
*ver 0.21 2022/05/31 : adding button search other path fontmanuelly, and button return font origin of system

<!--T:151-->
*ver 0.20 2021/04/05 : adding icone in macro, Tab for diminish the heigth of the macro, remove all dimensions of widgets now fully compatible with the stylesheet, revisite the search version for compatibility and other little change.

<!--T:148-->
*ver 1.19 2021/03/15 : adding button {{Button|Delette}} the last object created and the code {{incode|FreeCAD.ActiveDocument.openTransaction("FCCTc")}} for Undo/Redo system

<!--T:149-->
**Adding CheckBox {{CheckBox|FALSE|Reset}} for switched/activated (''requested by users'') the natural reset after all push button {{Button|Run}}and {{Button|Run comp}}. This use checkBox is {{ColoredText|not advised}}, is you constade one malfunction pusch the {{Button|Reset}} button or quit FCCircularText and restart.

<!--T:147-->
*ver 0.18 2021/01/19 : correction bug see [https://forum.freecad.org/viewtopic.php?f=22&t=54524&p=468687#p468687 FCCircularText Macro issues]

<!--T:143-->
*ver 0.17b 2020/09/28 : correction little bug (pl instead plm in path section) and arrange the window (dimension) Clock, Helix, Path

<!--T:144-->
*ver 0.17 2020/09/26 : adding create circular text on wire (curve, arc, spline, line ...) selected, mode word 

<!--T:130-->
ver 16d 2020/09/15 : see the [https://gist.github.com/mario52a/a25e802498bae6959335  MasterCATZ commented Sep 14, 2020 message]

<!--T:131-->
delette the FC 0.18 test section:

</translate>
{{Code|code=
#### Test FreeCAD.Version simple ############################################################################################################
if int(FreeCAD.Version()[1]) < 18:      # Version de FreeCAD
    FreeCAD.Console.PrintMessage("This version " + __Title__ + " rmu  work with the FreeCAD 0.18 or higher." + "\n\n")
    FreeCAD.Console.PrintMessage("For the precedent version see the page " + "\n\n")
    FreeCAD.Console.PrintMessage("https://gist.githubusercontent.com/mario52a/a25e802498bae6959335/raw/db47f78f2b20a35137ac213b8d1a62d30f525dcb/Macro_FCCircularText.FCMacro" + "\n\n")
#### Test FreeCAD.Version simple ############################################################################################################
}}
<translate>

<!--T:129-->
*ver 0.16c 2020/07/24 : modify text proposed by Kunda1 [https://forum.freecad.org/viewtopic.php?f=22&t=48902#p418776 Please review FCVerticalText Macro]

<!--T:128-->
*ver 0.16b 2020/07/24 : correct '''__title__''' to '''__Title__''' in 0.18 FC test (see [https://forum.freecad.org/viewtopic.php?f=22&t=48902 Please review FCVerticalText Macro])

<!--T:127-->
*ver 0.16 2020/06/07 : little bug in Linux with the path, impost '''PolicePath = "/usr/share/fonts/"''' (stay on path /xx/xx/xx/xx/xx/xx/ on entry) 

<!--T:125-->
*ver 0.15 2020/06/01 : For PySide2 Qt5 adding matplotlib fonts in comboView, config on parameter

<!--T:109-->
*ver 0.14-4 2020/04/25 : corrected for "'''DisplayMode = u"Flat Lines'''" :

<!--T:110-->
*ver 0.14-3 2020/04/25 : adapted for :

</translate>
{{Code|code=
OS: Windows 10 (10.0)
Word size of OS: 64-bit
Word size of FreeCAD: 64-bit
Version: 0.19.20655 (Git)
Build type: Release
Branch: master
Hash: e8e67e8c5ebbc9f9ed9ea67aba5b891969595ece
Python version: 3.6.8
Qt version: 5.12.1
Coin version: 4.0.0a
OCC version: 7.3.0
}}
<translate>

<!--T:106-->
*ver 0.14-2 2019/07/22 replace chr(176) (give error <FC 0.18) and replace with the wmayer code, see [https://forum.freecad.org/viewtopic.php?f=13&t=36380&p=308476#p308357 Fehler in Version 0.19 pre ??]

</translate>
        carDegrees = b' \xc2\xb0'.decode("utf-8")    #thanks wmayer	https://forum.freecad.org/viewtopic.php?f=13&t=36380&p=308476#p308357
        self.DS_InclinaisonX.setSuffix(carDegrees)
        self.DS_InclinaisonY.setSuffix(carDegrees)
        self.DS_InclinaisonZ.setSuffix(carDegrees)
<translate>

<!--T:104-->
*ver 0.14-1 2019/06/11 replace "°" to chr(176)

<!--T:105-->
*ver 0.14 2019/04/27 compatible for Python 3.6.6 and Qt 5.6.2 (cause: unicode() ) 
</translate>
{{Code|code=
latest testing:

#OS: Windows 10
#Word size of OS: 64-bit
#Word size of FreeCAD: 64-bit
#Version: 0.19.16523 (Git)
#Build type: Release
#Branch: master
#Hash: 9b3ec233c8b21e0df66fada487cd10f471d60cac
#Python version: 3.6.6
#Qt version: 5.6.2
#Coin version: 4.0.0a
#OCC version: 7.3.0
}}

<translate>
<!--T:96-->
*ver 0.13 30/01/2018 add feature Pivot for rotate the  character on himself

<!--T:103-->
*<strike>ver 0.13 09/08/2016 replace the button "New font" to "fontComboBox" cause , with Windows 10 the window Font stay empty the files are hidden</strike>

<!--T:87-->
*ver 0.12 03/07/2016 optimize the code for accept the decimal number in determination angle
replace the line
</translate>
{{Code|code=
            for angleTr in range(debut,rotation,((rotation-debut)/nombre)): 
}}
<translate>
<!--T:88-->
to
</translate>
{{Code|code=
            for angleTrFloat in range((debut*10000),(rotation*10000),int((round(((float(rotation)-float(debut))/float(nombre)),4)*10000)) ):    # pour 4 decimales
                angleTr = (float(angleTrFloat)/10000)
}}
<translate>
<!--T:89-->
* ver 0.10 17/05/2015 adding lines 1365, 1366 only created more clock face ?? ()
</translate>
{{Code|code=
            supp.MakeFace = True
            App.activeDocument().recompute()
}}

<translate>
<!--T:80-->
* ver 0.9 11/05/2015 thank you NormandC for testing
</translate>

<!--T:79-->
replace 
{{Code|code=
        self.DS_InclinaisonX.setSuffix(" X°")
        self.DS_InclinaisonY.setSuffix(" Y°")
        self.DS_InclinaisonZ.setSuffix(" Z°")
}}
to 
{{Code|code=
        self.DS_InclinaisonX.setSuffix(unicode(" X°"))
        self.DS_InclinaisonY.setSuffix(unicode(" Y°"))
        self.DS_InclinaisonZ.setSuffix(unicode(" Z°"))
}}
* ver 0.8 10/05/2015 replace "'''String=texte[ii2]'''" to "'''String=unicode(texte[ii2])'''" line 1290. cause <span style="color:#FF0000">"'''TypeError: Property 'FontFile': type must be str or unicode, not QString'''"<span \> 
{{Code|code=

<translate>
<!--T:97-->
# ver 0.8 10/05/2015 /_ # testing with OS :
</translate>
##################################################################################################
# OS: Ubuntu 14.04.1 LTS                          # OS: Ubuntu 14.04.2 LTS
# Platform: 32-bit                                # Word size of OS: 32-bit
# Version: 0.14.2935 (Git)                        # Word size of FreeCAD: 32-bit
# Branch: master                                  # Version: 0.16.4928 (Git)
# Hash: eab159b6ee675012bf79de838c206a311e911d85  # Branch: master
# Python version: 2.7.6                           # Hash: d8f63bcfd10301f3d1e141cced4370f0782238d0
# Qt version: 4.8.6                               # Python version: 2.7.6
# Coin version: 4.0.0a                            # Qt version: 4.8.6
# SoQt version: 1.6.0a                            # Coin version: 4.0.0a
# OCC version: 6.7.0                              # OCC version: 6.8.0.oce-0.17
##################################################################################################
# OS: Windows Vista                               # OS: Windows Vista
# Word size of OS: 32-bit                         # Word size of OS: 32-bit
# Word size of FreeCAD: 32-bit                    # Word size of FreeCAD: 32-bit
# Version: 0.15.4527 (Git)                        # Version: 0.15.4671 (Git)
# Branch: master                                  # Branch: releases/FreeCAD-0-15
# Hash: 0da2e4c45a9a259c26abd54c2a35393e1c15696f  # Hash: 244b3aef360841646cbfe80a1b225c8b39c8380c
# Python version: 2.7.8                           # Python version: 2.7.8
# Qt version: 4.8.6                               # Qt version: 4.8.6
# Coin version: 4.0.0a                            # Coin version: 4.0.0a
# OCC version: 6.7.1                              # OCC version: 6.8.0.oce-0.17
##################################################################################################
}}
<translate>
<!--T:90-->
* ver 0.7 02/02/2015 suppression 2 str '''App.Console.PrintMessage(str(PolicePath)+"\n")''' to '''App.Console.PrintMessage((PolicePath)+"\n")''' that caused an error with the characters above 128 in the police path.
* ver 0.6 23/11/2014 corrected "texte = unicode(self.textEdit.toPlainText())" now accept "'éèà@..."
* ver 0.5 19/11/2014 Gui 
* ver 0.4 10/10/2014 add variable "rotation" in the loop ('''for i in range(0,rotation,(rotation/nombre)): # 360 a parametrer''')
* ver 0.4 27/08/2014 correction error of de radius (exterieur=0, debout=1)
* ver 0.3 26/08/2014 add creation text of flat curve
* ver 0.2 26/08/2014 add creation text of internal curve
* ver 0.1

<!--T:74-->
(2537)

=== Links === <!--T:75-->

<!--T:76-->
To comment on the [https://forum.freecad.org/viewtopic.php?f=3&t=7384 Extrude from curved surface of cylinder]

</translate>
{{Draft Tools navi{{#translation:}}}}
{{Userdocnavi{{#translation:}}}}