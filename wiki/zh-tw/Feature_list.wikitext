<languages/>

{{Docnav
|[[About_FreeCAD|關於FreeCAD]]
|[[Installing_on_Windows|在Windows上安裝]]
}}

這是一個 FreeCAD 所實現功能的詳盡列表，但並非完整。

{{TOCright}}

<span id="Release_notes"></span>
== 版本紀錄 ==

* [[Release_notes_1.1|版本 1.1]] - ''開發版本，每週更新''
* '''[[Release_notes_1.0|版本 1.0]] - 2024 年 11 月'''
* [[Release_notes_0.21|版本 0.21]] - 2023 年 8 月
* [[Release_notes_0.20|版本 0.20]] - 2022 年 6 月
* [[Release_notes_0.19|版本 0.19]] - 2021 年 3 月
* [[Release_notes_0.18|版本 0.18]] - 2019 年 3 月
* [[Release_notes_0.17|版本 0.17]] - 2018 年 4 月
* [[Release_notes_0.16|版本 0.16]] - 2016 年 4 月
* [[Release_notes_0.15|版本 0.15]] - 2015 年 3 月
* [[Release_notes_0.14|版本 0.14]] - 2014 年 3 月
* [[Release_notes_0.13|版本 0.13]] - 2013 年 1 月
* [[Release_notes_0.12|版本 0.12]] - 2011 年 12 月
* [[Release_notes_0.11|版本 0.11]] - 2011 年 3 月

<span id="Key_features"></span>
== 關鍵特點 ==

<div lang="en" dir="ltr" class="mw-content-ltr">
* [[Image:Feature1.jpg|left]] A complete [https://en.wikipedia.org/wiki/Open_CASCADE Open CASCADE Technology]-based '''geometry kernel''' allowing complex 3D operations on complex shape types, with native support for concepts like [https://en.wikipedia.org/wiki/Boundary_representation Boundary Representation] (BREP), [https://en.wikipedia.org/wiki/Non-uniform_rational_B-spline Non-uniform rational basis spline] (NURBS) curves and surfaces, a wide range of geometric entities, boolean operations and [https://en.wikipedia.org/wiki/Fillet_(mechanics) fillets], and built-in support of [https://en.wikipedia.org/wiki/ISO_10303 STEP] and [https://en.wikipedia.org/wiki/IGES IGES] formats {{clear}}
* [[Image:Feature3.jpg|left]] A full '''parametric model'''. All FreeCAD objects are natively parametric, meaning their shape can be based on [[Property|properties]] or even depend on other objects. All changes are recalculated on demand, and recorded by an undo/redo stack. New object types can be added easily, and can even be [[Scripted_objects|fully programmed in Python]].{{clear}}
* [[Image:Feature4.jpg|left]] A '''modular architecture''' that allows plugin extensions (modules and workbenches) to add functionality to the core application. An extension can be as complex as a whole new application programmed in C++ or as simple as a [[Power_users_hub|Python script]] or self-recorded [[Macros|macro]]. You have complete access to almost any part of FreeCAD from the built-in '''Python''' interpreter, macros or external scripts, be it [[Topological_data_scripting|geometry creation and transformation]], the 2D or 3D representation of that geometry ([[Scenegraph|scenegraph]]) or even the [[PySide|FreeCAD interface]].{{clear}}
* [[Image:Feature5.jpg|left]] Import/export to '''standard formats''' such as [https://en.wikipedia.org/wiki/ISO_10303 STEP], [https://en.wikipedia.org/wiki/IGES IGES], [https://en.wikipedia.org/wiki/Obj OBJ], [https://en.wikipedia.org/wiki/STL_%28file_format%29 STL], [https://en.wikipedia.org/wiki/Dxf DXF], [https://en.wikipedia.org/wiki/Svg SVG], [https://en.wikipedia.org/wiki/COLLADA DAE], [https://en.wikipedia.org/wiki/Industry_Foundation_Classes IFC] or [http://people.sc.fsu.edu/~jburkardt/data/off/off.html OFF], [https://en.wikipedia.org/wiki/NASTRAN NASTRAN], [https://en.wikipedia.org/wiki/VRML VRML] in addition to FreeCAD's native {{FileName|[[File Format FCStd|FCStd]]}} file format. The level of compatibility between FreeCAD and a given file format can vary, since it depends on the workbench that implements it.{{clear}}
* [[Image:Feature7.jpg|left]] A [[Sketcher_Workbench|Sketcher]] with integrated constraint-solver, allowing you to sketch geometry-constrained 2D shapes. The constrained 2D shapes built with Sketcher may then be used as a base to build other objects throughout FreeCAD.{{clear}}
* [[Image:Feature8.jpg|left]] A [[TechDraw_Workbench|technical drawing workbench]] with options for detail views, cross sectional views, dimensioning and others, allowing you to generate 2D views of existing 3D models. The workbench then produces ready-to-export SVG or PDF files.{{clear}}
* [[Image:Feature-arch.jpg|left]] A [[BIM_Workbench|BIM Workbench]] that allows [https://en.wikipedia.org/wiki/Building_Information_Modeling Building Information Modeling] (BIM)-like workflow, with [https://en.wikipedia.org/wiki/Industry_Foundation_Classes Industry Foundation Classes] (IFC) compatibility.{{clear}}
* [[Image:Feature-CAM.jpg|left]] A [[CAM_Workbench|CAM Workbench]] dedicated to mechanical machining for [https://en.wikipedia.org/wiki/Computer-aided_manufacturing Computer Aided Manufacturing] (CAM). Using the CAM Workbench you may output, display and adjust the [https://en.wikipedia.org/wiki/G-code G code] used to control the target machine.{{clear}}
* [[Image:Feature_spreadsheet.png|left]] An [[Spreadsheet_Workbench|Integrated Spreadsheet]] and an [[Expressions|expression parser]] which may be used to drive formula-based models and organize model data in a central location.{{clear}}
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
== General features ==
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
* '''multi-platform'''. FreeCAD runs and behaves exactly the same way on Windows, Linux, macOS and other platforms.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
* '''full GUI application'''. FreeCAD has a complete Graphical User Interface based on the [https://www.qt.io/ Qt] framework, with a 3D viewer based on [https://en.wikipedia.org/wiki/Open_Inventor Open Inventor]; allowing fast rendering of 3D scenes and a very accessible scene graph representation.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
* '''runs as a command line application'''. In command line mode, FreeCAD runs without its interface but with all its geometry tools. In this mode it has a relatively low memory footprint and can be used, for example, as a server to produce content for other applications.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
* '''can be imported as a [[Embedding FreeCAD|Python module]]'''. FreeCAD can be imported into any application that can run Python scripts. As in command line mode, the interface part of FreeCAD is unavailable, but all geometry tools are accessible.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
* '''workbench concept'''. In the FreeCAD interface, tools are grouped by [[Workbenches|workbenches]]. This allows you to display only the tools used to accomplish a certain task, keeping the workspace uncluttered and responsive, and allowing the application to load rapidly.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
* '''plugin/module framework for late loading of features/data-types'''. FreeCAD is divided into a core application with modules and workbenches that are loaded only when needed. Almost all tools and geometry types are stored in workbenches. Workbenches behave like plugins; in addition to delayed loading, individual workbenches can be added to or removed from an existing installation of FreeCAD.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
* '''parametric associative document objects'''. All objects in a FreeCAD document can be defined by parameters. Those parameters can be modified and recomputed at any time. Since object relationships are maintained, the modification of one object will automatically propagate to any dependent objects.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
* '''parametric primitive creation'''. Primitive objects such as box, sphere, cylinder, etc. can be created by specifying their geometry constraints.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
* '''graphical modification operations'''. FreeCAD can perform translation, rotation, scaling, mirroring, offset (either trivial or as described in [https://www.researchgate.net/publication/240754626_Self-intersection_Removal_in_Triangular_Mesh_Offsetting Jung/Shin/Choi]) or shape conversion, in any plane of the 3D space.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
* '''[[Constructive solid geometry]] (boolean operations)'''. FreeCAD can do constructive solid geometry operations (union, difference, intersect).
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
* '''graphical creation of planar geometry'''. Lines, wires, rectangles, B-splines, and circular or elliptic arcs can be created graphically in any plane of the 3D space.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
* '''modeling with straight or revolved''' '''extrusions''', '''sections''' and '''fillets'''.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
* '''topological components''' like '''vertices''', '''edges''', '''wires''' and '''planes'''.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
* '''testing and repairing'''. FreeCAD has tools for testing meshes (solid test, non-two-manifolds test, self-intersection test) and for repairing meshes (hole filling, uniform orientation).
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
* '''annotations'''. FreeCAD can insert annotations for text or dimensions.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
* '''Undo/Redo framework'''. Everything in FreeCAD is undo/redoable, with user access to the undo stack. Multiple steps can be undone at one time.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
* '''transaction oriented'''. The undo/redo stack stores document transactions, not single actions, allowing each tool to define exactly what must be undone or redone.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
* '''built-in [[Scripting|scripting]] framework'''. FreeCAD features a built-in [http://www.python.org/ Python] interpreter, with an API that covers almost any part of the application, the interface, the geometry and the representation of this geometry in the 3D viewer. The interpreter can run complex scripts as well as single commands; entire workbenches can be programmed completely in Python.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
* '''built-in Python console'''. The Python interpreter includes a console with syntax highlighting, autocomplete and a class browser. Python commands can be issued directly in FreeCAD and immediately return results, permitting script writers to test functionality on the fly, explore the contents of FreeCAD's modules and workbenches and easily learn about FreeCAD internals.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
* '''mirrors user interaction'''. Everything the user does in the FreeCAD interface executes Python code, which can be printed on the console and recorded in macros.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
* '''full [[Macros|macro]] recording and editing''' capabilities. The Python commands issued when the user manipulates the interface can be recorded, edited if needed, and saved to be reproduced later.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
* '''compound (ZIP based) document save format'''. FreeCAD documents are saved with a {{FileName|.[[File Format FCStd|FCStd]]}} extension. The document can contain many different types of information such as geometry, scripts or thumbnail icons. The {{FileName|.FCStd}} file is itself a zip container; a saved FreeCAD file has already been compressed.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
* '''fully customizable/scriptable Graphical User Interface'''. The [https://www.qt.io Qt]-based interface of FreeCAD is entirely accessible via the Python interpreter. Aside from simple functions FreeCAD itself provides to workbenches, the entire Qt framework is accessible. The user may perform any operation on the GUI such as creating, adding, docking, modifying or removing widgets and toolbars.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
* '''thumbnailer'''. (currently only Linux systems) FreeCAD document icons show the contents of the file in most file manager applications such as Gnome's Nautilus.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
* '''modular MSI installer'''. FreeCAD's installer allows flexible installations on Windows systems. Packages for Ubuntu systems are also maintained.
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
==Extra Workbenches ==
</div>

<div lang="en" dir="ltr" class="mw-content-ltr">
Power users have created various custom [[External_workbenches|external workbenches]].
</div>


<div lang="en" dir="ltr" class="mw-content-ltr">
{{Docnav
|[[About_FreeCAD|About FreeCAD]]
|[[Installing_on_Windows|Installing on Windows]]
}}
</div>

{{Userdocnavi{{#translation:}}}}
[[Category:User Documentation{{#translation:}}]]